1

吃饭了吗

2

还有课吗

3

嗯

4

英国夫人

5

夫人

6

夫人

7

天下英雄唯使君与曹

8

踏过8000里加两句执政的北方的旷野

9

更艰巨的尘土开始奔赴

10

怎么深入阻挡我爸一个人出

11

遥望西边

12

期待一行白鹭镇胸膛

13

淮北到洪湖

14

我在常熟的牙修复就是真正的军师

15

一统天下

16

官渡大丈夫

17

能屈人生

18

人生案件亦假亦真

19

我曾见过

20

内心又转身

21

奈何我求草四处试片满仓为沙漠的罪人

22

不可旁人依偎在冒犯

23

我渴望天下人

24

不愿天下人负

25

失去承诺中沉默

26

天下分久必合

27

为你我都

28

谁的错

29

留给行人挺多寂寞

30

不愿去旋风剥夺遵循木有的原则为目的

31

不择手段不罢休的气魄

32

这天下何人沉溺和

33

长光与我点燃乱世烂片烽火

34

烽火

35

一线的前程方便去

36

阵阵暴雨前面我该死的传承

37

手来心恨

38

曾经看的有多深爱他有多疼我在乎科舍

39

如今看看有多伟大的经验

40

都是不可猜测的

41

人

42

就只能被抛弃

43

我又爬上了高地

44

民众财富一抬手都是道理

45

狂傲的娇气我娇气无语加失之交臂

46

摩托猫咪的奥利小人告密状

47

失去承诺

48

从承诺天下分久必合为你我

49

谁的错

50

新人

51

多多遵循的原则

52

为目的的手段

53

不罢休的气魄

54

这天下何人沉溺和人称光感与我点燃

55

乱世难眠

56

用一生去承诺中承诺久必合为你我都不可谁的错

57

可谓是人挺多

58

踏过8000里加两句之称的北方的旷野

59

跟他前去来征途开始奔我深入

60

阻挡我八年一个人出

61

遥望西边

62

期待一行白鹭镇胸膛淮

63

知道鸿鹄的成熟

64

先到了8.05

65

我们开始今天的课程

66

今天是我给大家讲

67

你能做什么

68

有你

69

因为你不是在小程序

70

在小程序里了吗

71

跨端或APP之类的

72

你看S具体要干啥

73

你在小城APP他

74

在呢

75

建议你去看一下有哪怎么想

76

好像是

77

没有吧

78

我记得

79

这个你可以看一下官网这个支持

80

这个你一看就知道了

81

因为这个基于第三方框架了

82

你得看他的框架支不支持

83

那应该是

84

看一下

85

有可能

86

所以你可以看一下自己看一下

87

如果支持的话就可以

88

如果他官方价没有支持

89

那你如果实在想写

90

那有可能就需要你自己动手

91

比如说做一套什么东西去实现它可以

92

还可以看到这里有一个

93

你得使用它这个优点

94

Club的原函数

95

然后是可将有意见不属于这次暗杀的一次网站

96

那这个有一定条件

97

你可以使用它

98

也可以做这样的只爱喳喳的一些网站也是可以的

99

那么就开始我们今天课程

100

今天我们主要是来做一下VS

101

我们就是来从头搭建一下

102

这个话主要也是为了给大家熟悉一下这个SOD搭建的一个流程

103

像现在的话有非常成熟的库

104

比如说LV是不是分别都有next或者next这样的框架

105

如一般的话

106

大家如果大家不熟练的话

107

就直接使用这种成熟的框架就行了

108

因为你自己去搭的话

109

像SR它的配置起来就是还是有一点成本的

110

这个配置还是比较复杂的

111

所以说呢

112

如果没有什么特别的有需求

113

你可以直接用这些称作框架酒也是可以的

114

但是我们学习阶段呢

115

我们还需要从头来搭建一下的话

116

可以看到AOE的官网

117

唯一的官网的话

118

它这里像唯一他给我们提供了一个非常详细的指南的

119

来看一下

120

在这服务端阿旋

121

但这个的话它是

122

2X的

123

像现在V2X的

124

但现在的话我们是不是都是V3了

125

现在V3已经发布好久了

126

所以这里的话我们可以看到他VG3的一个系法

127

现在就是像到了现在我们开发的话

128

因为技术更新是非常频繁的嘛

129

所以说我们在使用一些库的时候

130

一定要注意一下它的版本的问题了

131

可以看到这时候就是V3的了

132

其实他们两个的话

133

首先是包的名字

134

有些区别

135

还有一些细节的地方

136

都有更新

137

像V3和V2了

138

V如厕四

139

现在是V1那么多

140

四还是五

141

他和之前上一版本都是有差别的

142

像VS之类的

143

这对现版本的话是给我们提供这种顾客的写法儿

144

之前的话他是没有的

145

所以说在写的时候

146

对这个版本问题一定要注意了

147

他们今天搭配的话

148

你如果因为版本版本的问题

149

就有可能会引起各种各样的问题

150

所以说这个一定要注意

151

即使现在我们是不是用RPM包

152

经常用好的

153

这个也是一个包

154

经常会更新

155

所以说一般你上线的话

156

他的版本又不固定

157

每次按F1M一次到

158

或者一按一次的话

159

有可能按照最新版本

160

你之前写的代码的语法有可能都会变化了

161

所以说这个也是需要注意的

162

那像这个五一的话

163

它的光斑呢

164

其实已经写的

165

非常的详细了

166

相比于爱的光辉说的话

167

他阅读起来也是非常容易阅读的

168

就是还可以看到非常像关于比如说代码分割

169

源码的结构

170

还有编写的一些注意事项等等都可以写在这里了

171

各种各样的都写的非常详细

172

那这块的话

173

我们就带大家一起来走一下这个流程

174

爱他的话大家都有搭建过吗

175

有搭建过的同学可以扣下一就是或者是了解的就是熟悉的

176

直接就恢复二吗

177

不熟悉的可以回复下零

178

大部分同学都都没有接触过是吧

179

因为这个的话面试中也经常可能会问到

180

所以说我们有必要来数一下它这个流程

181

这样的话

182

面试官在问你这相关的HR问题的时候

183

你也可以比较容易地回答

184

比如说你再去问他遇到什么问题之类的

185

或者是中间要注意什么东西等等的话

186

我们自己搭建一遍之后

187

我们就会比较熟悉了

188

那第一个的话需要注意的话

189

就是它版本这里提到了

190

就是可以看到

191

基本用法这是唯一二的他的

192

官方给我们提供了这样一个大的这样一个包儿

193

到了为三中呢

194

录音三的话

195

它在前面加了一个艾特符号

196

现在是不是我们经常欠了一些抱歉

197

加艾特符号

198

这主要是是不是基本代表的是下一个版本的一个包

199

像背包之类的

200

是前面也是下载的符号

201

那既然我们讲撒

202

大家知道什么是S码

203

其实比较通俗理解的话

204

其实就是服务端

205

还有客户端

206

共用一套代码

207

然后呢

208

服务端将我们的组件

209

像HTML字符串

210

然后直接发送到我的浏览器

211

这样就是像一个爱她一个最直接的解释

212

MPMP不像MP

213

MP是多页吗

214

现在我们常见是SPI是单页模式

215

单页模式的话

216

我们的页面中是不是只有一个空的

217

第二位是Deng JS加载完毕

218

你的内容是不是才能渲染进去

219

这是不是现在创建XP行事

220

但是S的话是我们常见的

221

就是一个白屏

222

但是你像做SM的话

223

他就很好的就可以解决你的这个白白屏问题

224

露营对应真实基本

225

对

226

所以说的话

227

我们做S2的话

228

基本策略就是我们做首屏支出嘛

229

就是有服务的

230

我们去杀一面的时候

231

守平指出

232

就是从服务端

233

直接返回回来

234

所以说这个的话

235

我们就要处理的东西

236

首先在路由这里我们就需要处理了

237

还有就是

238

在客户端源代码

239

我们让他同样让他在服务端也可以执行

240

并且渲染为起码都串

241

然后直接反馈回来

242

所以这里我们就需要处理

243

像之前在没有note之前的话

244

我们想实现在服务端和客户端供应商代码

245

这个是键不限时的

246

比如说像之前的PPT了

247

或者是之前一些其他语言或者Java之类的

248

你想去共用一套代码是

249

基本不可行的

250

所以说有了弄了之后

251

是不是我们的撒

252

这样的技术也就出来了

253

下路的话还是算是

254

前台发展也是一次里程碑了

255

对啊

256

路由电影31米

257

那这其实提到了

258

其实大家就好处就非常明显了

259

首先就解决了就是更快的内容到达时间

260

正常的话

261

我们SP模式的话

262

你需要等待你的JS加载完毕

263

你才能看内容

264

而现在呢

265

服务端就直接把这个字符串处理好之后

266

直接返回

267

用户可以直接就看到了页面的内容

268

另一个的另一个非常关键的就是来解决了SUV的问题

269

像之前的话

270

我们的页面中是不是只有一个空的第二位

271

那这样你爬出来爬的话

272

你的价值没有价值完毕

273

那爬虫是什么也碰不到的

274

所以说

275

像这种SPM的话

276

它非常不利于这种Su

277

所以说为了更好Su的话

278

我们应该中肯定是

279

以前的文件是放在后端线

280

那个还还有区别

281

那个就是

282

纯的像之前我们用屁屁乐或者是不是安加入这样的企服务或者是APP的部署的服务器这种

283

它是纯的服务端渲染

284

服务端渲染客户端渲染

285

还有SSR这个这这几个概念其实我们要分清楚一下

286

我们刚刚提到了他是首屏指数

287

只有首屏的时候

288

它才是服务端渲染后边呢

289

后边进行切换的时候

290

就是我们扣端渲染了

291

所以说其实存在理解的话就是服务端渲染

292

客户端渲染加服务端渲染结合

293

这是肯定的

294

所以说我们所以说就采用结合的方式吗这个

295

在这里我们就正好给大家讲一下

296

关于这几个概念性的东西

297

大家也需要就是理解一下

298

首先我们说一下这爱他优点

299

优点的话就是

300

这是最显著的两个优点

301

就是来解决了白屏的问题

302

解决白屏

303

但是他有相应的一些条件

304

就是需要我们权衡的

305

权衡的是啥呢

306

首先就是开发条件

307

受限

308

因为像我们一些比如说你操作DOM之类的

309

那你再弄的比如说服务端

310

那肯定是没有的

311

还有一些一些API之类的

312

我们使用的物业或者爱的

313

她在服务端还是有一些限制的

314

就是在服务端的话它是没有的

315

其实主要的话就是向着DOM的限制之类的

316

服务端是没有

317

另外的话就是配置还是相对来说比较复杂一些的

318

所以这个我们再决定采不采用SSR或者使用APP的时候

319

我们要就是考虑一下

320

另外一个就是刚刚同学提到的在服务器端负担

321

也会大一些

322

但是呢

323

这个大一些的话

324

它吸它相比于就是我们这个纯的服务端渲染还是小一点的

325

因为它只有首屏的时候再去请求服务端

326

而你后边的路由切换

327

他都走了本地的客户端渲染

328

所以这样的话

329

我们其实相当于HR就是结合了这两个的优点

330

然后摒弃了他们的缺点

331

那这里的话我们就

332

来看一下传到服务端下载

333

这个其实就不用说了

334

因为是直接从服务端返回来了

335

那首屏渲染是不是肯定快了

336

就不需要等待JS加载完毕

337

那首屏渲染肯定快

338

所以说HR就采用了这样一个优点

339

然后Su友好

340

因为页面都是直接反映回来的

341

那爬出来爬的话肯定没有什么问题

342

但相对于他的缺点呢

343

那肯定是服务器压力大了

344

所谓的页面

345

你点击路由切换的时候

346

比如说我们链接跳转是不是进行路由切换

347

都需要去请求服务站

348

那服务器压力是不是肯定非常大

349

然后每次因为像之前的这种页面的话说

350

每个页面里边好多内容都是重复的

351

所以说才会造成一些每次就是

352

需要请求重复的资源

353

所以这也是它的缺点

354

另外一个就是可见不一定可操作

355

这是什么意思呢

356

就是说我们负担渲染图的话

357

是不是我们的h ma啊

358

你虽然说看到页面内容

359

但是你既然没有加载完毕

360

比如说你按钮的点击事件之类的

361

他说你即使看见了

362

说你点击的时候你家都没加载完毕

363

他也是不可交互的

364

所以说它有一个缺点的话

365

是不是就是可见不一定可操作

366

然后客户端先生他的

367

先说他的优点吧

368

优点可见即可操作

369

因为这时候你的页面键加载完毕了

370

才选择你的页面上

371

所以说你见了之后

372

你GS是一定加载完毕

373

所以说这时候你交互是完全没有问题的

374

另外的话就是页面切换流畅

375

为什么切换流畅呢

376

因为我们的像XP这种模式的话

377

客户端渲染它是采用的是本地路由方式

378

就相当于他做的这种就是

379

取不能切换是通过减资操作的

380

那切换肯定是非常流畅的

381

因为他不需要向服务端渲染的时候

382

还需要每次去请求服务端

383

这里的话

384

他只是做了一些食物局部的利用到我们的这个现在是检视

385

控制切换是不需要请求服务端的

386

所以说切换是

387

非常流畅的

388

不需要请求服务的

389

所以这是它的优点

390

那缺点也是非常显而易见的

391

首先的话就是Su的问题

392

这不你的页面一加载进来就是一个空壳

393

就是一个空的div GS加载完成之前里面是什么内容没有的

394

那爬出来爬的话

395

那时候就什么也爬出来爬不到了

396

另外的话就是白屏时间长

397

白屏时间长的话

398

主要是需要等待你的JS加载完毕

399

是不是你的页面内容才能看得到

400

所以说白屏的一个时间就会重来

401

所以说你对于你的项目的话

402

具体看你的项目对性能是否要求非常的高

403

比如说车你看面对的是比如说这种后台管理系统

404

或者是面向的是广大用户向后台管理系统这个你做一些Su啦

405

或者是这种性能优化是不是一般的话没有那么大的要求

406

而像类似这种网站或者是商城之类的话

407

可能话对这种打开的

408

时间有时间可能要求比较长一些

409

就可以抓紧考虑一下

410

然后其它的话

411

他说技术的话

412

并不是说我非得用什么技术

413

技术的话需要你去调研

414

跟你具体的场景

415

你具体要去解决什么问题

416

还是要从需求出发的

417

所以说并不是一刀切

418

我就是我就要用这个技术之类的

419

这个并不是的

420

所以要灵活的去处理

421

那这里可以看到了服务端渲染和客户端渲染

422

他们是不是各有各自的优缺点

423

SOD呢

424

它就正好结合这个优点

425

他只有首屏之处

426

这个的话是采用的是不是无端渲染

427

那一刷新页面

428

你立马就能看到内容

429

是不是白屏时间就没有了

430

然后呢

431

Su是不是也解决了

432

那你后边儿再进行页面切换的时候呢

433

页面切换

434

然后就有本地的GS控制了

435

其实就是我们现在使用的

436

比如说react了或未root

437

我们都知道它的一个原理吗

438

是不是都采用了比如说有黑色模式或者是Hans模式

439

其实就GS通过动态监测我们地址栏中地址的变化

440

然后通过JS或DOM去控制我们页面内容的切换

441

对后台系统

442

后台系统管理的话

443

有的基本上对内一般就是性能要求并没有那么急躁

444

基本上他更加注重的是这种功能

445

所以说大家现在对这个S客户端渲染

446

服务端渲染则概念应该就比较明确了吧

447

其实这个在不到之前的话

448

有可能就是哎呀比较困惑一些

449

其实这样你一梳理之后

450

其实就非常容易理解了

451

这里的话主要还是一个同步

452

同步的话就是同步

453

其实啊

454

其实你也可以

455

他其实就是一个同步

456

就是服务端和客户端

457

就是供了一套代码

458

像这官网中记得他有解释

459

可以看广告设计起来非常明显

460

大家从这里看

461

其实大概知道这是什么东西

462

其实你没有做过

463

可以看到这一刻也可以被认为是同构的

464

这基本上是翻译过来的一个名词

465

或者是通用的

466

其实主要是就是我们的代码

467

这里就可以同时一套代码可以同时运行在服务端就可以运行的客户端

468

基本是通用

469

通用或者是同构

470

这都是些概念性的东西这个

471

那关于这个概念性的东西了解完了

472

接下来的话我们就需要来自己动手搭建

473

动手

474

大学之前的话

475

我们就需要了解一些注意事项

476

首先就是我们刚刚提到的

477

就是

478

我们刚刚提到爱他的话

479

他的是不是开发条件是受限的

480

那像危重的话

481

它有哪些地方受限呢

482

我们就来看一下

483

首先的话看一下这里他可以写了

484

首先是比如说我们一些生命周期

485

像之前的话

486

是不是你可以用一些before create

487

或者是现在比如说一些create这种生命周期之类的

488

但是现在我们就需要置业

489

是我们在这里边的话

490

就需要做一些比如说一些副作用的

491

比如说我们之前或者是你在里面写了一些set timeout或者是interval之类的

492

像我们一般是在这个生命周期可以起这样一个定时器

493

或者是斜的interview

494

然后在我们的汽车的生命周期的时候

495

是不是可以把它清理掉

496

但是呢

497

如果我们在服务端的时候就要注意了

498

因为服务端渲染的时候在

499

我们的服务端

500

它是没有像这种before mass或者是

501

不是

502

是IMT或者dei TY的这个生命周期的

503

所以说这时候呢

504

在使用的时候就需要注意了

505

因为可以看到这里

506

在爱的过程中

507

只有这两个生命周期会被调用

508

所以说在我们服务端去执行的时候

509

你其他生命周期

510

他也是不能访问的

511

所以说这就是是不是开发条件就比较受限了

512

所以说在使用过程中

513

所以需要注意一下

514

另外的话就是特定平台的一些APP

515

一些温度DOM的话

516

再我们相怒的服务

517

但他是肯定没有的

518

所以说这个都需要注意的

519

或者说一些特定的平台处理的时候

520

我们就需要特定注意一下

521

然后的话还有还有一个地方

522

这个地方需要特别注意的

523

还有一个的话就是像我们

524

这个就是避免状态单位这个模式

525

我们尤其要注意的

526

下面再写为函数的时候

527

我们直播间这样写为二的时候

528

我们写定这个的时候

529

我们是不是都写一个那个函数

530

每次执行的时候就是

531

他都能去执行

532

生成一个什么新的

533

比如说这种对象数据之类的

534

而且我们在服务端为什么

535

一定要注意这个状态

536

Dan力呢

537

因为你服务单的话

538

你这个服务起来之后

539

它就会一直在那了

540

如果你定义了这样一个对象的形式

541

我们都知道对象他是引用的

542

那有可能就会造成全球的状态污染了

543

所以这时候就需要注意一下

544

每次你调的时候都把它定义成一个函数的性质

545

看这里

546

那有

547

你看

548

每次去之前小是不是都咨询一下

549

这个可是APP函数

550

每次去重新的去执行

551

就避免装修案例

552

这个装箱单里并不支持

553

只有这里创建这个应用的时候

554

像我们在使用

555

比如说VS中我们定一些全球state之类的

556

还有像如厕

557

我们都需要注意这个避免状态单里

558

因为我们需要记住一点

559

就是在服务端

560

这个服务端起来之后

561

它就会一直在那儿了

562

他并不会再去纯净

563

而不像客户端

564

每次他都还重新去执行一下这样的

565

所以说这个地方就需要注意一下

566

这里都写的比较清楚

567

The bomb

568

对象

569

主要对象的引用不是背包

570

就我们这

571

嗯

572

就是对像

573

比如说我们在全预定了个对象

574

你在其他地方修改了之后

575

你下一个用户再来请求

576

那是不是就拿到了上一个用户的这个对对相对应的数据

577

那这样是不是就不行了

578

你不是闭包的问题

579

是关于这个对象引用的这个问题

580

然后这是

581

一个也需要特别注意的地方

582

然后其他的话其实就还好了

583

其他的话主要是一些版本的

584

就是语法更新的问题了

585

其实没有其他问题可以看到这个

586

这就是我们一个要做一个整体流程了

587

这边的话

588

是不是就是我们写的源码

589

比如说写到我们的VS

590

如我们的root

591

然后company是我们写的一些组件之类的

592

最终经过打包可以看到

593

有个服务端入口

594

有个客户端入口

595

为什么有这两个入口呢

596

因为一个我们需要在服务端运行的

597

一个是我们要在客户端去运行的

598

所以说我们在打包的时候

599

这

600

服务端还有客户端代码

601

我们要经过WiFi打包

602

然后再一个是在服务端去调用

603

一个是在客户端去调用

604

这里我们记得用WiFi处理

605

因为我们写代码是不是我们用的是we这种语法

606

浏览器它也是不识别的

607

像你的诺顿的话它也不能识别

608

所以我们需要经过ipad的进行打包分析

609

比如说用他唯一法的话

610

我们是不是需要配置危楼的解析等等

611

它像一个CS

612

我们如果用到其他的话

613

还需要配置CL的等等各种各样的解析

614

通过派打包完成之后

615

我们分别让客户端和服务端去掉用去使用就可以了

616

基本的一个大体的目录结构就是这样的

617

一个是在浏览器运行的一个扣的一个入口

618

一个是在服务器端运行的一个入口

619

然后下面的话就是说像平时开发唯一项目其实就是一样的

620

没有什么太多其他的地方

621

那这里的话我们就来开始动手搭建了

622

首先的话就是来先把我们的目录搭建起来

623

但目录的话

624

我们就可以快速的

625

这里我之前创建好的东西魏延杀

626

那这里我们就来搭建了

627

这里我们先见一下

628

首先先见一下我们的HR是我们开发源码

629

开发源码的话

630

我们这里分一下

631

一个是我们可另一次端的客户端的代码

632

还有一个

633

虽然一个是clean的

634

还有一个呢

635

是我们的show

636

生物的话一般是我们有一个ABS去写我们的服务端的

637

服务端的话我们还是采用我们的框

638

就是我们的技术站的话

639

还是大家都比较熟悉的

640

其实像这节课的话

641

应该

642

做起来并不是太难

643

大家应该比较清楚了

644

我们还是用学习呢

645

我们就不用VCR了

646

我们还是自己手动的去打

647

我们主要在是用的WiFi pike5

648

然后是UE3

649

还有的话是we如此都是对一些比较新的一如此

650

现在版本应该是四了

651

还有一个吴雅氏是我们来

652

请行的话

653

我们是就用XX这个使用还是非常广的

654

基本上我们的一个汽车站就是这样的

655

然后我们继续来创建我们的目录

656

服务端的话

657

我们就是用我们课那一套

658

扣那一系列统

659

然后服务端是不是也有一个如此

660

这就是我们服务端

661

然后客户端代码呢

662

就是比如说我们的一些组件啦

663

我们碰一次

664

然后还有我们的如此

665

武夷山没用过

666

那这个可以用了

667

V三都发布这么久了

668

它使用起来还是挺舒服的

669

更加灵活了

670

不像之前的option

671

那种固定的那种配置API之类的方式

672

现在就是更加灵活了

673

如果有新项目之类的话

674

就可以尝试去使用

675

现在基本已经没什么太大的问题了

676

就是will是到root component组件

677

然后还有啥呢

678

还有我们的根组件

679

然后APP的

680

穿一个跟子健app.v

681

我们大体的一个目录就这样

682

然后呢

683

我们要模糊

684

刚刚师傅有一个分两个入口

685

一个是让客户端使用的

686

一个是服务端使用的

687

所以我们这里就清洁一下

688

叫阴吹

689

Cleaning jas

690

还有是in TE sol jas

691

可以看到我们基本就模仿他这个大全目录我们来的

692

这样我们的目录基本上就处理的差不多了

693

这个差不多之后

694

我们就可以来初始化我们的项目啦

695

你看

696

是不是让策划完成了

697

排队之前就出来了

698

那接下来我们就来做我们的事情啦

699

创建目录

700

我们完成了就是要做的事情

701

首先就是搭建我们的客户端代码

702

客户端代码搭建

703

大家现在

704

没有不熟悉的同学吧

705

可能有的同学是react技术栈

706

可能对无意义不熟的

707

其实他们大体思路是一样

708

就是比如说你配着你的VSLA配置V如

709

然后就写下你的页面就行了

710

然后搭建

711

然后再搭建完之后

712

我们还需要配置ipad来对它进行解析

713

因为没有用VCM

714

现在大家对于手机

715

Ipad

716

就比如说处理这无疑自己搭一个这种简单西安应该都可以了吧

717

还有问题的可以回复下零

718

如果比较熟练的就可以回复下一

719

因为现在都到了

720

现在是第几周了

721

第六周了吧

722

你应该第二

723

前边儿前我们不是都打过好几次吗

724

录播课程有关WiFi使用呢

725

应该再多练练

726

如果还不熟悉的话可以多练一下

727

比如说ipad

728

首先是不是我们各种low的解析

729

微语法的解析

730

S的像

731

好

732

我们先大体介绍一下

733

比如说CL的事要处理什么文件

734

就可以配置些load之类的

735

还有像我们的拉盖往下拍发音

736

或者是提取我们的亚瑟这些plug in是不就配置一些

737

最终进行我们的打包

738

然后介绍配置是不他的一些银去入口啦

739

或者是我们的

740

有饮水还有最终打包出来的

741

铺的打包到哪

742

然后开发环境的话

743

是不是还有DV舍瓦

744

这个要注意一下的话

745

就快拍个五中的话

746

他是否有些变化

747

相对于之前的版本需要单独的

748

比如说安装一下之类的

749

就是ipad

750

然后这个客户端项目基本完成之后

751

就需要搭建我们的服务器

752

大服务器我们就是孩子换了一套

753

Car

754

然后还有像如此的静态资源服务器之类的

755

是不是就完成了

756

然后最后可以来处理我们的LLRL的话主要是我们需要处理个路由

757

只有首页的时候进行去请这个服务单

758

然后其他的是不是都本着一个路由

759

另外的话还有就是一个请求的处理

760

为什么做企业处理呢

761

就是因为就是你在企业的时候

762

首页的时候你已经请求了服务端了

763

你没必要等待JS加载完毕

764

你再去请求这个页面上的一些

765

比如说你通过阿贾克斯企业数据

766

你就可以通过服务端就直接翻译回来了

767

就没必要再去经过X这客户端去请求了

768

直接推动服务端和页面就一块返回回来了

769

这这就是我们这节课基本要做的这样一些事情

770

其实像前面这一块的话

771

基本上都是我们前边儿来做到过的

772

其实大家都比较熟悉的话

773

我们就可以快速的来搭建一下

774

首先的话就来带一下我们的APP点

775

首先是不是创建我们的template的

776

没有快捷template

777

嗯

778

来创建我的模板指标

779

这里我先简单写一下

780

首页

781

然后什么

782

然后把它导出airport

783

给fault

784

而且镶嵌的话为三

785

是不是也出了一个语法糖

786

就是script的setup

787

是不是你直接在这血之后也retain了

788

你就直接不用写了

789

现在所谓

790

更加就是让你少操这些东西

791

就是你可以写起来就是更灵活的

792

像之前的话也显示你还需要单独的去写return之类的话

793

我们就先不用语法头

794

我们先用这个

795

最基本的唯一下一个语法

796

这里的话是我们的根

797

我们就先这样写一下

798

然后的话我们写两个页面

799

两个页面的话

800

我们创建一个home

801

一个首页

802

然后一个五层

803

Home新建文件

804

The index

805

about

806

然后木也是刚刚那一套复制一下

807

后

808

这里给大家管这类名

809

等于

810

然后呢

811

这里的话导致的话是

812

然后style简单的给点样式

813

然后只让他起不起作用是够的

814

然后稍微给点钥匙后没期比如说给他一个卡了

815

这里主要也是为了测试

816

下一会我们配ipad她是不生效

817

然后这是hope

818

然后about

819

那就是bug

820

这个也改一下吧

821

然后把车改成

822

这样非常简单呢

823

我们两个页面是不就有了

824

AI都有了

825

我们是不是还需要创建一个页面模板就是

826

VO

827

像WiFi打包之后

828

最终就跟JS渲染

829

需要渲染到哪呢

830

是我们XP模式的话

831

就是就只有一个页面

832

所以说只有一个页面的话

833

这里我们就需要来创建一个页面的模板

834

比如说我们就给它起名叫index的template

835

非常简单的一个模板S2

836

常见的我们这里是不是就是一个空的div

837

所以说那显然会看到白品的

838

因为一上来一面啥也没有

839

就等着你脚本加载完毕

840

才能把那个当插入进来

841

页面有了

842

现在基本上都全了

843

那接下来的话

844

我们就来创建我们的唯一实例

845

最终把我们这五一的话

846

最终都给他挂在到我们这个倒木上

847

这里的话我们是不是就需要用到

848

无忧一三给我们提供了一些方法

849

他给我们提供了

850

客户端使用的是吧

851

我们就使用他的可瑞的APP

852

然后服务端呢

853

我们就可以使用他的可瑞的APP

854

这个是和吴悠一还是有一些区别的

855

滋流安装一下

856

现在还需要加next呢

857

我看一下

858

安装WEX这个

859

现在3.2.6版本可以看到VS是不是4.0版下面就安装上吧

860

还有我们的友谊

861

如此

862

可以看到是不是都加了next的

863

按照这个最新的X5版本

864

安装时候在家at next的

865

按照这个最新的

866

QQ的IP显然是我们单

867

是不是这个服务单

868

炫的时候就要用到它

869

然后把我们的跟页面引入进来

870

是在我们的APP

871

这是我们的根页面

872

在这个之后我们就来创建我们的事不倒出去

873

一个在客户端调用时使用

874

一个是在服务端使用

875

那这里我们就是刚提到这个避免撞单里

876

我们就需要按这种方式来写

877

每次的话是不是都通过这样的一个函数去进行一个创建

878

这就相当于一个工厂函数

879

来重复的进行咨询

880

然后为每个寝室去创建一个

881

单独的一个应用实例

882

要不我们服务端启动起来之后

883

那一个实力就会一直躺在那儿呢

884

我们这里最终导出一个这样的函数

885

另外我们需要宽带是不是一个在服务端

886

一个在客户端执行

887

那我们怎么去判断它到底是服务端执行的还是客户端执行呢

888

这里我们就有一个非常好的地方判断

889

因为你在服务端是不是它是没有Windows或者是盗墓的

890

所以说我们就判断一下

891

你这个Windows是不是等等于unDeFined

892

我就知道

893

你到底是不是在服务端去执行的

894

还在客户端咨询的这里

895

所以我们就可以判断到了

896

如果他为促的话是不是

897

如果等于unDeFined

898

那证明是在服务端执行的

899

我就调用这个科瑞特

900

如果你是在客户端执行的呢

901

我就知道你这个可瑞在APP

902

然后取

903

的话

904

我们

905

等于

906

这样就可以啦

907

然后最终将他retire回来

908

是不是这样我们的APP系列我们就创建完了

909

然后我们就可以再扣带

910

客户端入口我们就行了

911

然后把他打进来

912

可瑞慈APP from10个是这样

913

我们把它解构出来

914

我看一下这怎么导出来的

915

It default thanks its

916

嗯

917

结构起来

918

可瑞的一批一直行事不就反馈回来了

919

把我们的一些我们在V3中使用的话

920

我们需要去进行挂载

921

他有这个MT方法挂在哪呢

922

是不是我们的

923

这里写的

924

AP是不是给他挂在上就行了

925

这样我们这个APP we跟实力组件是不是最终渲染完成之后就能挂到我们这个页面里了

926

这套流程到现在大家没有什么问题吧

927

国际惯例也也有

928

Root啊

929

Root man都行

930

没有问题的

931

客户愿意

932

然后我们就继续往下

933

我们就做最简单的一些微的一些写东西就差不多了

934

我们先来配一下WiFi

935

看一下能不能先让他跑起来

936

都没有问题

937

因为这对于很多同学来说都比较熟悉

938

也是非常基础的一些操作

939

只是有的同学可能对HR这个流程还不熟悉而已

940

那这里我们就用到web pack啦

941

那你要用到ipad

942

那你首先就需要来安装一下

943

然后在这些版本的话

944

也是ipad和ipad是不是进行了拆分

945

所以说你安装的时候

946

这两个要同时给他安装上

947

然后我们要解析微语法

948

那我们显然是还需要用到

949

危楼的危楼的你安装也需要注意一下

950

你要按照这个at next

951

你如果按照之前的版本来解决现在这个微山的最新版本

952

那他肯定会报错的

953

因为社会的不用不用配置

954

我们先把客户端写完吗

955

这个是服务端的入口了

956

我们一会儿去配置这个服务端

957

我们一点点来

958

不要着急

959

我们要解析位于法

960

首先把这个谓语load给他安装上

961

一定要注意这个版本

962

版本一定要匹配上才行

963

然后的话我们要解析JS或者说我们用的X语法之类的

964

我们是不是现在基本上都用背包就处理

965

那肯定是需要安装上背包啦

966

背包load我们用背包的话

967

除了用背包的还有一些什么呢

968

是还需要用到它的一些核心代码

969

是不是他都给你们放到了

970

还被包靠里边

971

除了这个

972

我们还用到一个

973

它提供了一个非常现在是不是一个插件包的集合

974

像之前我们需要单独配置什么

975

S200

976

20151S2016之类的

977

现在我们直接用这个艾特背包present

978

因为是不就可以了

979

这样一个插件包的即可

980

然后把它安装上

981

这是解析我们的比如说1S六加的语法进行转换

982

这是解析我们DS的

983

还有解析我们CS的

984

是不是需要我们的CS的

985

这个大家切到现在的话

986

可以就直接静音这样写

987

旧电脑的东西写的话

988

你就知道吃哪些东西下楼的

989

然后我们顺便把提取CS的也给他加上

990

TCL的话

991

我们就用到WiFi的插件叫

992

有去上迷你c X tract plug in

993

把CS单独踢出来

994

放到一个文件中

995

或者你用style的话

996

Styles是不是就直接通过styles的方式内连到你这里了

997

一个是Stella的

998

还有这个mini zs a tract play

999

单独提出来

1000

这样我们需要的一些东西是不是基本差不多了

1001

我们就来配置了

1002

首先我们建一个必要的文件夹

1003

不要在文件夹的话下边放

1004

首先是不是我们要进行环境的区分

1005

那开发环境和生产环境是一个供应的配置

1006

我们就放到这个WiFi热点被在家里边

1007

然后其他单子呢

1008

我们就单独写一下clean Li ness

1009

没有起色

1010

还有一个的话是受

1011

这第一位的话

1012

没有单独分开打包

1013

因为像客户端的话

1014

你是在浏览器运行的

1015

而你社会上需要代码的话

1016

是不是在node端运行的note上

1017

像note他这是什么语法

1018

他是不这是common的语法

1019

但是我们打包的时候

1020

有些打包服务的时候就需要特殊的处理了

1021

因为像前面我们在第二周

1022

第三周

1023

我们前面处理过

1024

就是我们要指定打包出来文件是我们的common JS语法才可以

1025

这样的话我们可以才可以在note上我们进行调用

1026

那我们就来快速的写下这个ipad的配置

1027

首先我们里边是否用到好的路径的处理

1028

为了统一各个浏览器用那个系统

1029

联合系统等等他们的一些区别

1030

我们桶用到note给我们提供的这个Python模块

1031

他怎么快速给你们提供了热壶

1032

一个是解析成绝对路径

1033

一个是拼接成解析绝对路径

1034

在哪都可以使用

1035

然后打出我们的配置

1036

首先是不

1037

我们的最终要把它打包到哪

1038

入口的话我们就不再配的

1039

入口的话

1040

因为像客户端和服务端

1041

他们入口不一样的

1042

一个入口是一可怜的GS

1043

一个是NGCDF

1044

所以说他们虽然说他们的入口不一样

1045

但是他们的出口是一样的

1046

我们统一打包到我们的diss的目录

1047

下面是肉

1048

这是个

1049

注意

1050

我们现在因为是在这个必要的文件下

1051

所以说

1052

你要点点这个返回你的上级

1053

就是打包初期的目录

1054

然后模块的处理呢

1055

Rose是不是要处理我们的GS还有我们的CS了

1056

他是一个数组

1057

这里我们是不是就写正的

1058

然后比如说我们1.5e结尾的

1059

1.5UE结尾的文件是不是就要用到我们的无忧一楼的

1060

那就给他配置上

1061

那这样的话

1062

我们的无一法就会被解析了

1063

然后还有我们的GSGS的话就是以我们的点GS结尾的

1064

S结尾的GS结尾的话

1065

这里就要用到我们的微波炉的

1066

微波炉的话

1067

它的一些配置的话

1068

其实是在这里直接配置options或者是单独写一个文件

1069

这都是可以的

1070

这里的话推荐

1071

直接单独写到一个文件里边

1072

就是在你的项目根目录

1073

根目录新建一个点被巴西

1074

这个都是也是我们之前是不是操作过的的话

1075

我们就配置一个绿色present

1076

就是把我们

1077

安装的这个背包

1078

Present

1079

烟给他安装上

1080

因为

1081

是这样

1082

背包就配置完成了

1083

可以看到我们的基础解析V的解析JS的

1084

这样他一些公共的地方就处理完了

1085

然后CS的部分呢

1086

我们就分别放到

1087

客户端和服务端单独去处理

1088

因为像CS的话

1089

在服务端它是不需要去处理的

1090

你只需要在客户端去处理完成就行了

1091

你在服务端的话

1092

对CS他他也是不认识的

1093

接下来我们继续配置这个客户端的代码

1094

那首先的话

1095

我们这里同样也是需要这个路径的复制一下

1096

那这里我们要进行这配置合并

1097

是不是大家应该比较熟悉

1098

我们有一个

1099

默契

1100

就把我们的公共配置和我们的各个环境下的配置把它合并起来

1101

就等于

1102

Web pack磨叽

1103

然后先把我们的贝斯凯飞哥引入进来

1104

不引入进来了

1105

然后我们

1106

DV看飞哥

1107

单独的

1108

我们这个蔻丹看一下这个配置呢

1109

首先我们设置一下development

1110

对啊

1111

我们这都是开发模式下

1112

没有写生产模式的话

1113

这里要指定他的development

1114

然后引起指定他的入口

1115

入口的话就是我们的in the clean

1116

clean

1117

clean

1118

这就是我们的入口

1119

然后打包吃吃的文件名呢

1120

你知道这里

1121

这里不是那种

1122

这个N是不是大写的

1123

有可能经常我们形容小动物写习惯

1124

经常把file name n d n给他打血了

1125

打包起来

1126

我们就叫克林特

1127

扳倒

1128

的话

1129

我们就在开发环境的时候

1130

我们就起个第一个笑吧

1131

比较容易观看的向往

1132

我们的内容在哪呢

1133

他有个content

1134

这里关于ipad就是备上

1135

如果大家还不熟悉

1136

录播课里是否有专门讲过直播伴侣里边

1137

这不讲过ipad的非常基础的一些API的配置

1138

然后前面的话我们也是使用过多次

1139

说不定文件在哪里

1140

然后端口的话

1141

你也可以指定一下

1142

主要指定是8080

1143

然后如果我们是使用黑色模式的话

1144

我们这里还最好配置一个history

1145

就是EPS for back

1146

为什么呢

1147

因为我们黑头模式的话

1148

你如果上线的话是还需要

1149

比如说你是放在一个服务器或者其他附近

1150

你要配置

1151

一个地址的这个

1152

就是处理的

1153

因为你在其他地方

1154

你刷新的话

1155

他去请求服务端

1156

服务端是没有的

1157

那汇报汇报一个404的问题

1158

这个地方需要处理一下

1159

如果你用汉字路由模式的话是没有问题的

1160

但是黑市模式的话就讨论这个问题

1161

那开发模式的话

1162

所以它提供了黑色fall back

1163

我们只要配下这个

1164

等你刷新的时候就没有问题了

1165

当你真正上线的时候

1166

黑洞模式还需要服务端处理一下

1167

这个需要注意一下

1168

摸底的话

1169

我们就需要单独的来处理一下

1170

谁的话是不是就出来我们CSCS的话

1171

我们是不是安装了一个

1172

先把它合并起来

1173

使用我们的墨子

1174

合并一下我们的被子看飞哥

1175

还有我们的微看飞哥

1176

把他的立场

1177

接下来是不是就处理我们的CS了

1178

因为服务端不需要不需要处理

1179

所以说单独就放到客户端来进行处理

1180

又要吉他的话

1181

是不是就用到我们的CSSVO的

1182

但使用CL的话

1183

他只是把文件解析了

1184

但是你要解析放到哪呢

1185

是单独放到文件中呢

1186

还是放到我们的HTML中

1187

通过SQL内联的方式

1188

那这里的话

1189

我们显示要把它提取出来

1190

如果你放在一起蛮中的话

1191

你负担也不识别

1192

提取出来的话会

1193

很

1194

这个其实这个提取不提取的话

1195

也得看具体的情况

1196

如果你CF比较题比较小的话

1197

你放在你手里边儿也没有什么问题

1198

如果你的样子特别多

1199

你直接放打到你的一条里边儿

1200

那显然是不行的

1201

对吧

1202

就单独把他踢出来

1203

那这里我们就用到提取的话

1204

我们用到一个插件

1205

叫我们刚安装了叫米c ss extract

1206

泥

1207

然后是

1208

CSSD

1209

我们就用到它的load

1210

注意虽然

1211

这里录的它这个顺序是从右往左的

1212

可以看到他先经过c lo的把这个语法解析了

1213

然后

1214

我们再通过他提供的logo把它解析出来

1215

这里就不要写证券

1216

最终这样的CS

1217

我们就

1218

处理完成了

1219

然后记得打个印

1220

你需要给他配一下我们这次用的插件

1221

丰富ipad的功能呢

1222

CS提取就去CS的插件

1223

另外我们要进行打包

1224

是不是最终的代码还需要

1225

比如说去吃的一些CS的一些包

1226

或者是这些包是不是最终还需要自动注入到我们的H5模板里边

1227

那这里我们自动住的话

1228

我们就用到我们的H外拍plain这个模板

1229

这个这个还没有安装安装一下

1230

可以看到现在我们要开发一个项目

1231

是不是先配置一大堆

1232

等于

1233

把他引入进来

1234

然后我们就来配置这个插件了

1235

首先我们得告诉他我们的模板在哪里

1236

然后呢

1237

如何去比如说一些其他的规则之类的

1238

这个的话我们也没有其他特殊处理

1239

我们只需要告诉他我们的模板在哪

1240

然后呢

1241

他就会把我们提出来的CS

1242

就像这里我们来打包出来JS自动给我们注入到这个页面模板

1243

肉

1244

然后是带这个SRC目录下面的clint

1245

这样的话我们的页面模板文件就可以了

1246

这样的话我们的扣他配置好像就完成了

1247

那这里我们就顺便把服务端的配置也给他处理了

1248

服务端配置的话

1249

主要就是你要注意一下你打包出来的

1250

代码的一些语法规则

1251

我们这里要要要给弄的用的

1252

所以我们就要特别注意一下

1253

自己来洗一下

1254

同样都是需要这一个模块

1255

墨子也行

1256

先把它拿过来

1257

另外的话

1258

像web端的话

1259

我们前面在第二周第三周时间中

1260

我们讲过

1261

像note的话

1262

它的代码是都都不需要打包

1263

在服务端里直接安装

1264

就直接把这个服务启动起来了

1265

所以说一些

1266

那我们就不需要

1267

不让一些第三方的依赖打包到我们的输出文件中

1268

所以说这里我们是不是用到了一个

1269

之前用的是一个叫

1270

X

1271

第一个

1272

说不让一些第三方依赖打包到我们眼中

1273

我们还需要这样的一个包

1274

所以这个也需要安装一下

1275

然后呢

1276

把它运用这样

1277

说

1278

在服务端打包中

1279

我们需要做一些特殊的事例

1280

键

1281

然后的话就是我们的which can figure

1282

这个我们就快速的写一下

1283

因为这个大家都比较熟悉

1284

重要的还是大家那部分不熟悉

1285

然后就是sok

1286

然后呢

1287

把它合并起来

1288

Fish can figure

1289

然后是shock

1290

然后我们就来写

1291

服务端入需要特殊处理的一些地方

1292

首先摸的也是指定为development

1293

如果你是上线环境的话

1294

打包登陆上线的话

1295

直接就改成products就行了

1296

因为这里的话

1297

我们老师来说一下这个流程嘛

1298

所以说这里就

1299

简单

1300

先把这个流程我们先跑通

1301

然后窄窄的小溪下边

1302

Clean瘦

1303

是不是这是我们的服务端的入口

1304

然后他打包出来的名字呢

1305

打不出来

1306

我们给他取个名字叫so

1307

其他地方

1308

考的地方都不一样

1309

在这里没有负责library

1310

还有一个是一二

1311

Library他给他这个指定我们的指定编译规则了

1312

就指定为科吗

1313

这个要注意一下

1314

这是需要特别注意的

1315

就是指定编译规则

1316

因为你打包出来的话是要给I know的环境使用的

1317

对吧

1318

这两把需要指定一下它的环境

1319

target

1320

我们的环境的话是漏的

1321

一个是指定编译贵的

1322

另外的话指定它的一个环境

1323

这是特殊需要注意的

1324

然后呢

1325

我们还需要不让第三方依赖

1326

达到我们的

1327

包装

1328

所以说我们这里就可以用配置一下这个node next month

1329

这里的话就是

1330

不让第三方的了

1331

打包的输出文件

1332

这就是在notes中需要透露出的三个地方

1333

这个我记得应该是

1334

在第二周

1335

第三周我们特殊处理过了

1336

然后在服务端

1337

因为像CS的话

1338

是不是在客户端它已经解析过一次啦

1339

在这里所以说呢

1340

猫的有点小错吧

1341

Model它是一个数字

1342

若

1343

Model Rose

1344

因为这里你在客户端已经处理过了

1345

所以说在服务端呢

1346

你就没必要重复的进行处理

1347

我们不进行重复处理的话

1348

我们就可以把它忽略掉

1349

就是在服务端

1350

对于如果你解析到CS就不需要再进行处理了

1351

这里的话你可以用到比如说南路的或者是忽略的绿的都行的话

1352

我们就用到一个

1353

Ignore

1354

IGR

1355

然后load杠的

1356

所以说这里我们就只需要把它忽略就行了

1357

在这里我们就不需要把它进行解析

1358

这个

1359

就可以把它忽略掉了

1360

要不的话你会造成重复的解析

1361

这样完全没有必要

1362

这样话会貌似我们的服务端我们也配置完成了

1363

这样的话关于ipad的配置我们就这样快速的就搭建了一下

1364

然后我们是否命令还缺少一些

1365

这里我们就创建一下可怜的瘦

1366

这个的话就是

1367

启动起我们客户端的的微生物环境来

1368

这里我们就写一下我ipad收

1369

因为我们的ipad它默认是可以识别到你的根目

1370

下面的ipad点咖啡的件儿

1371

这里的话我们统一放到了别的目录下

1372

所以说你要通过看这个动态的指定你的配置文件在哪里

1373

要ipad找不到

1374

然后我们配合下客户端的打包

1375

客人打包的话就是

1376

不急的微商吗

1377

因为我们要进行打包了

1378

这个直接进行打包

1379

然后另一个呢

1380

就是15吨的

1381

这个福利一下

1382

杠杠咖啡

1383

然后是受

1384

这里可以看到

1385

我们要最终要执行代码的话

1386

是不是客户端代码要打包

1387

服务端代码同时是不是也要打包

1388

然后为了方便点呢

1389

嗯

1390

为了方便点

1391

我们可以统一配置一个DV

1392

必要的

1393

然后来同时执行我们这两个答案

1394

的话

1395

你可以用到n PM run or这样的一些第三方的一些库

1396

我们也可以直接用到

1397

它提供的串行执行或者并执行这样的一些命令

1398

它本身就支持的

1399

首先是可令词第一位

1400

然后呢

1401

还有我们的颜色是不是同时进行这两个命令

1402

这两个M的话

1403

其实完全可以不分先后

1404

他们可以分心打包

1405

串行并行都没什么问题呢

1406

最好是并行执行就行了

1407

然后如果这样都打不完之后

1408

我们是不是开房间要起一个

1409

开发环境了

1410

这里还需要安装一下

1411

可不可以动态监听我们的文件的改变

1412

然后来

1413

就不用我们手机就重新启动服务了

1414

Show APP解析

1415

在我们的命令

1416

刚刚安装了一个包

1417

嗯

1418

给他安装一下吧

1419

是不是也安装上了

1420

所以你使用习惯之后

1421

像我讲过这么多课

1422

还有之前是不是也之前也用到过一些

1423

他说你熟悉之后

1424

这其实就是你想要干什么

1425

比如说你要处理的文件

1426

你立马想到CL的

1427

Mimi CS X play in或者是Stella的

1428

你要解析GS

1429

你立马就想到北玻炉的

1430

你要处理这些资源的注入

1431

每天晚就想到ipad

1432

其实这个就是你不是经验丰富

1433

就是你熟悉之后

1434

熟能生巧嘛

1435

其实这个配置的话

1436

基本上都是比较固定的模式

1437

你配置后就是各种组合起来使用就行了

1438

这里我们运行一下

1439

现在就看一下第一位

1440

我们首先看一下客户端能不能启动起来

1441

居然报错了

1442

报啥车无遗漏的还可以看到

1443

报错的话是不是

1444

最后启动的不应该是date里面的卡是吗

1445

什么意思

1446

没有

1447

我们打过去之后

1448

我们不是利用的VIP给我们提供的地位受

1449

关于大体流程烧

1450

最后一会儿看到我们整体流程之后

1451

您就明白了

1452

可以看到这里是不是我们的危楼的

1453

他需要另外一个是不需要一个

1454

这样的什么东西

1455

To print的depending错

1456

那说明我们这里还缺少一些依赖

1457

我们其实就需要安装行如果

1458

你没有

1459

就是你第一次遇到这样的问题

1460

所以说你也不用怕

1461

你其实在这里你骨骼之类的可以告诉你

1462

怎么去解决之类的

1463

基本上你在配的时候缺什么

1464

你就去安装什么就行了

1465

这里就是缺少我们这样一个依赖

1466

你把它安装就行

1467

就是在解析我们这个V1的时候

1468

比如说一最新一法

1469

我们还需要这个艾特恐破裂

1470

给他安装上缺的话我们就给他安装上就完事儿了

1471

这里的话

1472

其实你如果看它的官方文档的话

1473

其实它都有说明

1474

所以说我们在

1475

比如说你启动新项目或者什么之类的

1476

你可以最好去看下官网

1477

经常就是每个版本都会进行一些相应的更新

1478

这么慢

1479

哎呀

1480

From

1481

看一下他的文档

1482

嗯

1483

前一

1484

可以看到

1485

现在的话我们就还需要单独去配一下这个唯一load

1486

拉进去配置一下

1487

我说这是

1488

迁移射门像VAE2100到V3的话

1489

你也是需要进行一些其他处理的

1490

这这也是一样

1491

那我们这里就需要来单独的处理一下

1492

然后呢

1493

这里还没有

1494

这项配置的话

1495

报错是很正常的

1496

如果一气呵成的

1497

你配置起来不报错

1498

那种情况基本比较少

1499

有错遍

1500

怕有错就解决就行

1501

延安可令受

1502

现在没有什么问题了

1503

但是这里提示我们要启动的话

1504

因为VIP5中的话

1505

我们还需要单独安装一下这个DV

1506

社保呢

1507

我们就统一安装就可以了

1508

这样话我们应该就启动起来了

1509

应该没有应该没有啥问题吧

1510

现在是在安装这个DVD

1511

所以说稍微慢点儿

1512

安装完了

1513

嗯

1514

靠在那

1515

被子已经把他移除了

1516

现在不是这样写的吗

1517

来看一下

1518

好吧

1519

Candle base

1520

HOPS的威慑孩子电影

1521

DV舍瓦

1522

没有问题

1523

没有

1524

我看一下吧

1525

大家先休息一下休息

1526

俺先休息个

1527

休息五分钟吧

1528

我们09:15继续看一下这个

1529

又有变化

1530

嗯

1531

就是真正的军师

1532

一同欢度能取人身赔偿案件

1533

意甲一阵

1534

我曾经历过内心的真诚奈何我就草四处试片满仓开山破的罪人

1535

可旁人依偎在冒犯无可无

1536

天下人不愿天下人负一生去承诺中沉默

1537

天下分久必合

1538

为你我有如何谁的错留给行人挺多经过

1539

不愿去顺从度遵循木有的原则为目的

1540

不择手段不罢休的气魄

1541

这天下何人沉溺和人称敢于我点燃乱世蓝天疯狂

1542

键的前程

1543

让他陪你去见证风雨前面我该死的传承

1544

手来新

1545

伤有多深

1546

爱有多疼

1547

我在乎

1548

可是

1549

只能被抛弃

1550

我又爬上了高地

1551

命中在台上不是道理

1552

狂傲的娇气不娇气

1553

回家失之交臂

1554

摩托猫咪的奥秘

1555

小人告密

1556

失去承诺中沉默

1557

天下分久必合

1558

为你我把梦又如何

1559

谁能做留给袭人顶多落不愿去顺丰

1560

懦弱

1561

遵循固有的原则为目的

1562

不择手段不罢休的七魄

1563

这天下何人沉溺

1564

何人称王

1565

敢于我点燃乱世难言

1566

用一生去承诺中沉默

1567

天下分久必合

1568

为你我如何

1569

谁的错

1570

留给诗人鼎博

1571

洛

1572

踏过8000里

1573

聚集着北方的旷野

1574

跟他近距离尘土开始奔我深陆

1575

阻挡我

1576

八点一刻就出一我洗脸期待一行白鹭真凶残

1577

还知道我在成熟的要修复

1578

就是正式的军师一统天下

1579

官渡党政负责人去

1580

人生理想案件意甲一生

1581

我曾经历过内心的转生

1582

奈何我就草色就是偏蓝

1583

沧海沙漠的罪人

1584

可怕人依偎在冒犯

1585

天下人

1586

不愿天下人负我一生去

1587

陈国中沉默

1588

天下分久必合

1589

为你我做马路又如何

1590

谁的错留给行人挺多过

1591

无缘是顺从懦弱

1592

遵循固有的原则为目的

1593

不择手段不罢休的气势

1594

逼迫这天下

1595

何人沉溺

1596

何人唱王与我点燃乱世冷面烽火

1597

今年去见证风雨前面我该死的传承修来修

1598

曾经伤有多深有多疼

1599

我在乎可舍如今有多伟大和阴影都深不可测

1600

彩排的人

1601

就只能被抛弃

1602

我又爬上了高地

1603

民众在乎你抬手

1604

都是道理

1605

狂傲的交期

1606

我想起回家失之交臂

1607

摩托猫咪的安慰

1608

小人告密状的结节

1609

失去承诺中承诺

1610

天下分久必合

1611

为你我

1612

如何谁的错

1613

留给新人博博园去生存懦弱遵循的原则为目的

1614

不择手段不罢休的气魄

1615

天下何人沉溺和壬辰

1616

年乱世狼烟

1617

用一生去承诺沉默

1618

手臂和

1619

如何谁的错这位诗人

1620

好啦

1621

我们继续刚刚的话是之前还记得之前WIFI5版本的话还是靠着被子

1622

那现在它已经变成static啦

1623

所以说你可以看到IPS不也是有变化的

1624

所以说有时候报错之后最好去查一下文档

1625

像其实出问题之后

1626

第一步先查官方文档是最好的

1627

你如果去搜些文章的话

1628

有可能文章更新没有那么及时

1629

或者是也是一些别人写的博客

1630

所以说

1631

这和你看原文档解决问题还是不一样的

1632

能去看原文档的还是去看

1633

可能有的同学感觉自己说

1634

英文阅读能力是比较差一些

1635

像一些新的东西的话

1636

可能好多都是英文的

1637

但是我们不是都有翻译吗

1638

所以说它有时候翻译软件基本也能

1639

大体能看懂

1640

不好意思

1641

其实我们主要看的是代码部分

1642

这里可以啥也不看

1643

一看是一个static是不是立马就知道了

1644

这换成static不就完事了

1645

这样的话我们客户端就这样启动起来了

1646

完了之后我们可以看到现在我们访问这个页面

1647

什么首页就加载出来了

1648

这个首页是不是就是我们这里写的这个

1649

APP点微是不是这个首页给他完全是没有什么问题的

1650

然后扣单的话

1651

我们是不是要去路由

1652

那现在我们路由是没有

1653

我们学校把路由加上

1654

然后把我们的VS给加上

1655

因为我们要实现服务端

1656

那那个数据请求的话

1657

我们是还需要用到VS来实现服务端和客户端这个群这个数据状态的一个统一的

1658

所以我们就需要

1659

所以说我掩饰

1660

我们还是要需要用一下

1661

用了这个

1662

状态管理的库

1663

当然这个不一定会用VS

1664

用什么其他的一些状态管理库都是可以的

1665

这个并不限制

1666

那这里我们继续把我们的路由给配置上

1667

这不路由的话

1668

我们刚刚是不是已经安装完了

1669

这里我们就来写新建

1670

新代理配置我们的路由

1671

路由的话

1672

在这些路由中也是同样给我们提供了

1673

这种

1674

类似于户口这种写法

1675

之前路由无论是react

1676

不是路由

1677

LV

1678

是不是都提供了这种互惠的写法

1679

整起来就更灵活了

1680

他们提供了

1681

然后同样给我们提供了在客户端使用的

1682

还有在我们的服务端使用的

1683

客户端使用的是不是在我们web中给我们提供的是web history

1684

然后在服务端呢

1685

给我们提供的是科瑞特memory history一个是基于内存的

1686

另外一个呢

1687

他就是

1688

Web的话

1689

这个就正常

1690

我们使用的就是在浏览器中使用的是一样的

1691

像黑特们的web

1692

黑色模式化就是正常我们在地栏

1693

每次我们地址变化

1694

我们都能在地栏中直观的观察到memory呢

1695

它就是XG

1696

内存就是

1697

你变化你是看不到地址栏中的变化的

1698

就是对他们两个的区别

1699

其次的话

1700

慢慢黑色是跟我们在服务端进行使用的

1701

外部可以的呢

1702

那显然是不是在我们客户端使用的

1703

你如果想用汉字模式的话

1704

它提供了help

1705

是不是都这样进行吃饭的方式

1706

那我们就来写一下

1707

注意啊

1708

这里你要在使用咨询的时候

1709

他这里其实

1710

VOE

1711

直接从这进

1712

他是一个迁移指南的

1713

有的地方的话

1714

有好多地方还是需要我们去注意一下

1715

你看之前是否为三列插耳线的话

1716

是不是无疑似裂差了

1717

所以说最后边儿一个迁移

1718

你看这里有好多变化

1719

之前是不是我们使用这牛肉的

1720

而现在是变成了可root可以看到这里是不是都有说明

1721

不但是一个类

1722

还是一组函数

1723

另外就是新的黑腿配置取得了

1724

之前的矛盾是黑腿要把我们这里我们用a web history或者是什么memory history是我们需要这样的进行一个配置

1725

这个之前变化还是挺大的

1726

所以说这里要注意一下

1727

像之前这个配置

1728

配置现在也没有了

1729

还有像其他的一些等等

1730

所以说这个都是我们需要注意的

1731

还有我们坐在二中的话

1732

里边有好多一些方法也是需要我们去处理

1733

比如说这里的一些等待

1734

来等待我们的一些路由处理完成之类的

1735

像之前的话

1736

它是on radio

1737

而现在变成了ready

1738

还有什么还有

1739

一些匹配的时候我们需要用的东西

1740

到这里可以看到破坏性的变化可以看到

1741

破坏等变化

1742

这个是影响还是非常大的

1743

所以说你在用一些不只是微

1744

不只限于微软的

1745

还有是其他的时候想看一下他的迁移指南

1746

具体做了哪些一些变化更新之类的

1747

所以说就需要尤其的注意

1748

浏览器的黑痣

1749

然后

1750

我们就来先把我们这个路由解决掉

1751

那首先把我们的组件引入进来

1752

就是页面

1753

页面也是组件

1754

只是叶面积比较大而已

1755

wills下班的home

1756

然后是

1757

然后是about

1758

就是下边的

1759

两个之间有了

1760

然后这里同样我们来判断一下是不是在服务端执行的

1761

还是在客户端执行的

1762

这不还是老方式

1763

那他是不是等于unDeFined

1764

写错了吗

1765

还好这里有一个安装了一个单词提示器还是

1766

配置

1767

这个就是刚刚我们看到的黑色

1768

我们要给他配置什么

1769

首先判断

1770

如果是服务端的呢

1771

那这个黑腿就是我们的

1772

Create a memory

1773

如果是扣单的呢

1774

一般他会自动找你文件下面的index

1775

对呀

1776

服务端没有温度

1777

没有温度

1778

所以是unDeFined

1779

服务站怎么会有温度呢

1780

温度是

1781

他不是水浏览器

1782

还有的吗

1783

可以到吗

1784

然后写一下我们的路游

1785

我们的路由的话

1786

路由首先是跟

1787

嗯

1788

看错了

1789

然后后面

1790

然后component

1791

物质都是非常常规的

1792

还有一个是我们的巴特勒

1793

About

1794

陆游是完成了

1795

然后最终将他挡住就行了

1796

这里同样要注意状态单列的问题

1797

所以最终我们导出来是一个函数

1798

我把它配上一个是黑色

1799

一个是

1800

这里也是利用S6是不一个新的语法

1801

像之前的话没有的话

1802

我们是不是还需要推同名的话

1803

就直接简写就行了

1804

这样

1805

我们的路由就处理完成了

1806

路由器完成

1807

你要渲染到哪

1808

是不是还得写占位符

1809

占位符写到哪

1810

哪就写到我们组建里边

1811

那这里我们就是不是就写上我们的战略服就行了

1812

叫如此

1813

没有

1814

就是它

1815

可以直接写一个

1816

李白的话

1817

并没有什么内容

1818

上语文课

1819

然后我们加个跳转

1820

进行我们这两个路由切换

1821

是不是一个是我们的根路由跳转到我的首页

1822

还有一个是跳转到我们的

1823

跳转到

1824

about

1825

这叫混吧

1826

这样我们的路由是不是齐全了

1827

然后来看一下

1828

吴特

1829

Link跳转的

1830

没有写出来

1831

还忘了一件事

1832

我们向你在危中使用了什么东西是不是

1833

你得告诉我一声

1834

你现在唯一并不知道你使用了什么东西

1835

那是不是还需要来处理一下

1836

在这里处理一下

1837

把我们的root引入进来

1838

对

1839

还需要幼稚一下

1840

你不能悄无声息的就使用了是吧

1841

我们打出来的是一个函数

1842

然后就在我们这个函数里

1843

可以每次都可以重新生成一个

1844

可如此如此

1845

然后APP

1846

又如此

1847

这样才可以

1848

然后呢

1849

这个root我们还需要给他倒出去

1850

为什么呢

1851

因为后边我们会用得着

1852

但是啊

1853

这里报错啦

1854

看看爆了啥错

1855

嗯

1856

Can notary

1857

不行啊

1858

这里你带个谁还没找

1859

什么东西

1860

还得加上五一

1861

你可以省了

1862

因为是省不了

1863

不知道扩展有没有

1864

我这里没有配置那个

1865

文件名扩展

1866

可以看到这样才可以

1867

你如果配置文件没扩展

1868

你可以省略的

1869

我觉得应该没有配置

1870

它默认只有GSGS还有什么几个默认只支持那几个你如果需要其他的

1871

还需要单独的配置点V或者点.插件啥的

1872

你需要单独配置taxi taxi

1873

天使

1874

我是什么

1875

在WiFi里加上配置就行

1876

可以看到这样是不是可以啦

1877

跳这个bug的

1878

跳转首页

1879

路由没有什么问题了

1880

买还生哥生哥我演一下

1881

筷子也把VS来处理一下

1882

我们一般的话

1883

我们是不是会分模块下

1884

这样会更清晰

1885

就是我们这里简单的处理一下摸底

1886

然后下边儿我们新建一个

1887

嗯

1888

然后创建我们的直

1889

比如我们这里就简单的写一个内幕

1890

还有一个address

1891

主要是为了来演示一下

1892

这一款是我们要需要从我们的服务端请求回来的

1893

然后油热

1894

是不是这里可以看到我们也是导出的是一个函数

1895

比如说我们就写个name

1896

然后

1897

然后一般的话是我们还有像action

1898

X线一样

1899

一些像一些副作用的话

1900

我们是不是就可以放到这里

1901

比如说我们这里一个set data

1902

然后改变函的话

1903

是不是修改识别值

1904

是不是只能在我们的系统中修改

1905

要遵守规还是是不是它的一个规则

1906

这里我们就简单的模拟

1907

比如说

1908

如果请的话

1909

我这里就出现一个新的机

1910

然后我再死

1911

还是北京吧

1912

最终

1913

的话

1914

我们在马腾中还需要建一个色的去修改我们将实际的值

1915

这不是note的默认行为吗

1916

是说哪一个

1917

是说这个幼稚吗

1918

又

1919

X

1920

他默认是找人带DTS

1921

是可以找你的音带点价

1922

但是我们这里是这里是因带点we

1923

它不识别这个点V文件默认是找index

1924

二级的是可以省略的

1925

但是你可以看到

1926

会报错

1927

可以看到是不是Alice这个

1928

一些快捷配置

1929

你没有配置是没有这个扩展

1930

No actions

1931

你如果是里边写JS的话

1932

那你完全是可以省略这个没有什么问题的

1933

你比如说你看到这里

1934

这个root是不就我就没有写

1935

因代理S是完全可以

1936

因为是扩展名的问题

1937

它默认只支持部分的

1938

队长

1939

是吧

1940

Action

1941

我们就这样写完了后面的事

1942

披露的提交

1943

我们比如说最简单的模拟了一下

1944

比如说你从接口请求回来之类的

1945

然后一般我们获取的话

1946

是不是有一个给顺便给大家

1947

复习一下吧

1948

该的话同样的都是需要避免状态单列的

1949

都是导出的是一个函数才可以

1950

Get

1951

然后这个字就拿到我们的

1952

User info的

1953

这是不就拿到我们的数据了

1954

吧

1955

然后最后剩一个马不诚实

1956

毛体

1957

The fault

1958

然后是set data

1959

是不改变我们的state的值

1960

只只能只能在这里进行改变

1961

你在其他地方是不允许的

1962

犹如

1963

等于我们的

1964

这样简单的

1965

这个我们就完成了

1966

然后这里我们给它一个

1967

您带着JS统一的一个

1968

出口

1969

然后把我们的都倒过来

1970

一个是我们的事不定义的单独待末下边的这个模块的star

1971

然后还有我们的什么actions

1972

X

1973

还有我们的gates

1974

还有我们的马提斯

1975

键就可以了

1976

然后统一

1977

这一样

1978

也是地面状态单列的方式

1979

因为你这里是不是最终他返回来的也是一个对象拿着呢

1980

Name is pace

1981

然后state我们给到他这里

1982

是不是倒出来是一个函数

1983

这样就行了

1984

每次蒸一下

1985

然后

1986

其他的就都写过来了

1987

Actions

1988

我们还少一个汇总的

1989

在这

1990

是

1991

我把它首先是道

1992

也给我们提供了这个可瑞

1993

Starch

1994

然后把我们这个单独带模块下面呢

1995

我们把它引过来

1996

带毛毛的是他是一个函数

1997

然后最终

1998

我们这个VS就处理完了

1999

科瑞特斯

2000

到现在的话

2001

我们就直接订这个埃克斯就可以了

2002

可以让这个模块

2003

然后是

2004

Mode

2005

这样就搞定啦

2006

看一下我们看一下这里导出来的

2007

我们是一个

2008

函数

2009

对吧

2010

这个要需要处理一下

2011

坚持完成之后是不同时也是需要幼稚一下

2012

这样的话我们客户端就处理完成

2013

有如此

2014

然后加油

2015

正是处理完了

2016

那我们就来检查一下

2017

检查一下到底能用是否应成功呢

2018

比如说在我们的about页面

2019

我们来使用一下

2020

大哥们提供了

2021

犹如stated不可写法

2022

比如十道不可写法

2023

都没有提示

2024

from

2025

然后是我们的VS

2026

然后怎么形容呢

2027

是不是在V3我们写这个setup setup相当于之前的before create

2028

还有create是每周七

2029

然后直接我们拿到它的get

2030

是我们先把数据获取出来

2031

油似的

2032

Cast

2033

然后我们游的info

2034

别的事

2035

是不是我们要拿谁的数据呢

2036

是不是拿我们的单模块下边的get

2037

对此给我们的get方法用于定义出来

2038

然后呢

2039

用A3的这种想法的话

2040

我们需要把我们要绑定到模板中的

2041

之前的这种写在对这种手机我们要通过return回来

2042

而现在最新的写法

2043

你直接在这里写来写他up

2044

这的话你也不需要retain了

2045

你这里写的东西它会自动给你return

2046

这是V3最新的一个语法就可以进行使用的

2047

然后这里我们就写一个简单写个N

2048

把它展示出来

2049

看一下我们这个

2050

VS有没有什么问题

2051

没什么问题的话

2052

来我们就需要来配置服务端

2053

服务端的话还是需要出一些东西的

2054

Address

2055

Address

2056

战神了

2057

来看一下

2058

有报错

2059

这是在我们的

2060

还有报错

2061

猫

2062

一下

2063

这样可以了

2064

刷新

2065

然后我八次

2066

发现有问题看一下

2067

竟然抱错了

2068

盖茨是elephant

2069

嗯

2070

都保存了吧

2071

Sight

2072

这有什么错吗

2073

没有啥问题知识

2074

Get them and get it

2075

还是提示找不到

2076

我们看一下

2077

打一下打一下看一下

2078

还可以看到是and find

2079

那我们看下我们的扣的入口是不是

2080

哎哟

2081

我处对象

2082

我看下它的官方文档有没有

2083

最新的第四代产

2084

Get

2085

可以的

2086

渠道创建的时候我们也没有什么问题

2087

然后

2088

使用的时候

2089

组合是一片

2090

是这个

2091

没有写错

2092

Import

2093

Get

2094

不是

2095

我现在打印这个Stuart都是unDeFined

2096

看一下

2097

把它复制过来

2098

这个也没问题

2099

先把他治死

2100

对他我现在直接打印他

2101

按理说他是反映回来的事

2102

配卡是and defend

2103

看到我们的入口这里

2104

是的

2105

可是这style

2106

然后我们的

2107

这好像也没有什么问题

2108

等一下

2109

这个比较奇怪

2110

官网也是这样写的

2111

嗯

2112

由于还是我们是按照四点X的版本4.2

2113

是的

2114

我打一下他看一下

2115

这个就比较奇怪

2116

这个它是有值的

2117

没有什么问题

2118

那他执行为什么返回来是

2119

碎片

2120

好像没有啥问题

2121

也是该特使

2122

可以看到在

2123

是该的是这个也没有显示过

2124

都引入了

2125

从源头我们找一下

2126

找一下问题

2127

再见

2128

先看这俩

2129

猫猫

2130

Oh ma them actions gator index

2131

直到打出来是一个函数

2132

然后您

2133

Space craft

2134

这个也没有写错

2135

Garage

2136

就是里边写了一下

2137

Mountains

2138

好像这也没有什么问题

2139

You re in for is not defend

2140

先把这里给制止掉

2141

我不是已经收了吧

2142

其实不好说这个

2143

也都返回回来

2144

namespace也没有什么问题

2145

这个是ID find

2146

我们看一下科瑞特

2147

那这里我没有返回回来吗

2148

可以看到

2149

问题出在这了

2150

不是路径出错啦

2151

可以看这

2152

你在这个箭头函数

2153

你写了这个中括号之后

2154

那反应回来

2155

那你什么也没有return

2156

你只有return的时候

2157

这个函数才会被反映回来

2158

而且这里说我们写成大括号

2159

写大括号那显示还得翻的

2160

所以这里你如果想省着点儿

2161

他就把它写成括号的形式

2162

这这个地方一不小心就疏忽了

2163

这样的话就可以了

2164

这样我们再来刷新

2165

是不是到现在就有值了

2166

很容易受犯错

2167

就箭头函数你省略return的时候

2168

你写写成大括号的形式

2169

我们检查其他地方

2170

其他地方的话应该

2171

没有

2172

什么问题

2173

你看就这么一个一个括号的问题

2174

我们学的语法的话都没有什么问题

2175

我们继续

2176

其实遇到错误的话

2177

其实就这样一步一步去排查

2178

你可以看到最终就能定位到他

2179

把注释都打开

2180

现在我们再来看一下

2181

I get she is not different

2182

把她接过去

2183

再来刷新

2184

是不up的

2185

可以看到一登北京是不是都出来了

2186

证明我们这个VS是不是有问题

2187

那现在我们就继续往下来

2188

我们就来配置我们这个服务端

2189

服务端的话

2190

我们是不是现在还没有配置

2191

那服务的我们还是用卡那一套na使用的话

2192

我们首先也是

2193

客户端的相关我们来写服务端

2194

首先把我们的call

2195

还有像我们的

2196

cos static还有都给它安装上

2197

然后的话也是用最新的这个可入场前面加一个艾特符号

2198

然后我们就到服务站

2199

现在呢

2200

我们就使用官方提供的这一个

2201

他的这个包叫什么名字

2202

叫也是前面加at four and we折磨人的

2203

同样给他安装上

2204

那接下来我们就来写就行了的话

2205

我就直接用com JS语法啦

2206

如果你想用SQL语法的话

2207

是不是我们前面也讲过

2208

你直接用I get up就是不就可以进行它的一个转换

2209

在第二周第三周是不是也讲过

2210

那我们就把它引入线

2211

刚刚我们已经安装完成了

2212

然后收呢

2213

就是我们的精神资源服务器用的

2214

创建一下我们这个思念

2215

如此如此的话

2216

我们就把它单独写写出去啦

2217

放到这个文件夹里吧

2218

因为我们这里边吃的东西还比较多的

2219

所以把它划分出去的话

2220

代码稍微总结一下

2221

发出去之后只要把它引入进来

2222

就这样

2223

然后我们接下来到我们这里边继续写

2224

我们如此

2225

首先是不是用到我们的考察

2226

如

2227

如此

2228

也是先溜一下

2229

因为最终我们要导到我们API中使用

2230

所以说我们通过魔典pose把它倒出去这句话这里是common JS的语法

2231

看一下官网的

2232

发如此

2233

这个

2234

复制下他的写法

2235

他的文档在这里

2236

是不root的get

2237

我们配置下他的路由

2238

还有的话

2239

下边是这两个方法

2240

这个我们也是在第二周第三周都讲过的

2241

花轿

2242

这样是不是就可以了

2243

然后我们这里要选出来的谁呢

2244

是不是一个是当你进行路由的钱的时候

2245

是不是一个about路由

2246

还有一个是我们的根路由

2247

因为它是一个异步的

2248

这里我们简单的可以写一个来看一下是否能成功

2249

C h BA de等于

2250

比如说

2251

继续我把你的APP继续往下编写

2252

所以导出来

2253

我们是不是需要把我们的APP传进去

2254

船来这里接受一个APP参数

2255

然后需要也是需要幼稚一下中间件机制嘛

2256

然后服务端的话

2257

我们签签一个3000端口

2258

我们简单几个食物

2259

你说300

2260

0

2261

这样我们的服务端代码就可以了

2262

我们启动一下

2263

看一下有没有什么问题

2264

这几行代码的话

2265

应该是没有什么问题地

2266

启动错了

2267

的微信没有提楼层

2268

可以看到cannot find tab

2269

看下我的配置的命令

2270

设我APP点击没有什么问题

2271

Let stalk will you guys

2272

嗯

2273

路径在路径配

2274

少了个斜杠

2275

现在来看一下是不是就启动起来了

2276

我们访问一下我们这个3000端口

2277

Look post3000

2278

可以看到服务端是不是渲染也没有什么问题

2279

那接下来我们就是非常关键的一步了

2280

就实现我们前后的关联

2281

现在我们客户端是客户端服务端

2282

服务端他们两个是不是现在没有任何关联

2283

那现在的话我们就来处理一下

2284

让他们两个说关联起来

2285

接下来就是HR到了

2286

我们就是HR要处理的部分

2287

一个是我们要做到是不是一个路由的处理

2288

另外一个就是我们请求的一个处理

2289

那这里我们先来

2290

处理一下我们的请求部分

2291

那首先的话

2292

我们之前这里的服务端入口是不是还没有写

2293

这里我们就来说一下

2294

首先也是把我们的

2295

客户端呢

2296

需要引入过来

2297

这是我们组建的话

2298

它既在客户端渲染

2299

也在服务端渲染

2300

服务端的话是拿到我们的客户端组件

2301

然后把它

2302

转化为字符串

2303

然后通在我们请求路由的时候

2304

在服务端就直接给我们把这个字符串返回来

2305

然后浏览器就可以直接渲染出来

2306

同样为了避免出现断裂的话

2307

是

2308

导出一个函数

2309

可瑞特APP

2310

这里还少一个

2311

这里我们的style在服务端也是用到的

2312

因为我们在数据请求的时候

2313

我们要实现客户端和服务端来数据的一个统一

2314

我们就需要用到VS这个状态的管理来进行一个处理

2315

从里边的话

2316

我们是不是可以拿到APP拿到如此

2317

还有我们

2318

然后把它retain回就行了

2319

这些东西因为是需要我们在服务端去处理的

2320

这就是我们的服务端的一个入口

2321

那这里我们就打包一下我们服务端入口

2322

第二

2323

然后是受第一位

2324

没有问题

2325

看到我们的事的目录

2326

下班

2327

食物搬到DGS是不是打包出来了

2328

这个是跟我们去服务端去调用使用的

2329

那接下来我们就继续来处理服务单的话

2330

首先我们要直接渲染回来

2331

首先他要拿到我们的客户端

2332

是不是这里有个音带调模板

2333

这是不是给我处理好了

2334

像我们的

2335

可怜的半岛的价值

2336

是不是就直接放着

2337

然后我们服务端拿到模板之后

2338

我们就可以进行进一步的它的一个处理了

2339

看一下

2340

这里这里刚关了

2341

咱们继续往下处理

2342

she wo版的

2343

就到我们这个服务站的阴Di GS这里进行处理

2344

首先我们要读取本地的文件的话

2345

我们需要用到note的文件读取模块

2346

就是FS

2347

然后呢

2348

搜真的给我们提供了一个人的图

2349

使用方法就是把我们的唯一组建我们渲染为

2350

字符串的话

2351

我们就可以通过服务端直接把它返回去了

2352

比如说这里用到的官方给我们提供的艾特

2353

阿佘

2354

这怎么竟然没有去世

2355

还在用他的话

2356

他可以提供的是一个人的图使用方法

2357

然后另外我们需要拿到我们这个直播半岛的JS

2358

是不打包出来之后

2359

我们要在我们的服务端进行调用

2360

使用了拿到我们的APP

2361

我们的root

2362

还有我们的指导

2363

休班的那直接把它读取过来就行了

2364

是在哪呢

2365

She got the beast

2366

目录下边儿的书搬到default

2367

这样我们就读取到了我们这个文件

2368

另外的话

2369

这个模板文件我们是拿到了

2370

你拿到魔文件

2371

你直接返回去

2372

他是会渲染不出来

2373

那这里我们需要把它读一次

2374

这都都去我们的HR模板用到它的

2375

同步读取模块吧

2376

然后是

2377

目录下边儿的1.7秒

2378

然后都是格式呢

2379

我们设置一下UTF杠

2380

这样我们就能读取到我们这个APP的模板了

2381

所以说它是不是就是一个字符串

2382

字符串的话我们就可以做一些替换之类的

2383

比如说我们拿到模板之后

2384

我们通过一个正则

2385

匹配直接就把我们拿到的唯一组建直接就渲染到我们这个模板里边儿了

2386

接下来就是进行一些正则的操作

2387

那我就继续继续首先画这里

2388

是不是来匹配到对应的路由的时候

2389

我们要进行一个处理

2390

首先

2391

拿到我们想要的东西

2392

拿下东西是不是我们打包车的这个文件

2393

就是我们的社保

2394

是我们已经把这四我们需要的一批如此意识到我们已经都将它导出来了

2395

咨询一下这个函数

2396

我们从里边可以就拿到

2397

我们的APP

2398

比如说为了避免重复

2399

因为服务端是不是有一批

2400

我们给他起个别名叫APP组件

2401

然后root呢

2402

我们单独写是不以后的负担有什么办法单独写个代表是客户端的如此答案写到

2403

这样是不就可以了

2404

然后我们需要等一下

2405

这个都是光荣的写法

2406

这里可以看到

2407

晒啥

2408

在这

2409

一个路由和代码的分离

2410

这就是你需要等待一些

2411

类似于意外的操作

2412

比如说等待路由它的解析完成

2413

然后等待你的说把你的服务端的地址给他复制进去

2414

就当你请求这个a的时候

2415

你要知道当天请是谁

2416

所以你把这个root谁给他复制一下

2417

我把这两句代码复制过来

2418

这都是官网

2419

就像V1关于这个VEI大家指南的话

2420

还写的非常不错的

2421

那因为它这里的话

2422

他是用的express

2423

我们这里用的是靠

2424

所以说我们这里的

2425

儿童

2426

Kan dice

2427

上下文这边就可以拿到CTS点、Q.URL

2428

拿了给到他

2429

然后等待我们的路由

2430

比如说

2431

处理完成之后呢

2432

我们就可以进行我们的操作

2433

首先就要拿到我们的

2434

就是组建的内容

2435

图片内容是不是就是我们这个APP

2436

所以我们就要用我们的特性

2437

把我们这个

2438

组建内容转换为字符串的形式

2439

因为转换成字符串我们之后才可以方便进行操作

2440

这种

2441

人

2442

呢

2443

UE的组件

2444

这样话就把他们围组件转换成字符串

2445

转换成字符串之后

2446

我们就可以进行一些

2447

比如说字符串也操作了

2448

这里我们可以拼一下

2449

比如说我们在服务端的时候就把它拼接好

2450

ID等于

2451

APP

2452

把他给到

2453

APP component

2454

这样我们就直接把他劝回来了

2455

然后我们a卷儿呢

2456

是不是我们这个模板我们也拿到了HTML模板

2457

我们只需要把它正则替换掉就行了

2458

就等于我们的

2459

complete replace

2460

呢

2461

是不是就是我们的客户端的这个这里它是

2462

替换掉我们这个APP

2463

伉俪的这样话就是不就相当于从服务端我就直接把我这个页面内容直接就返回回来了

2464

这个大家这一步到这一步的话

2465

大家都能跟得上吗

2466

莫有问题的可以回复下一

2467

然后有什么都能跟得上

2468

因为像这个的话还是比较简单

2469

像它的基本的爱他他渲染的一个整体的流程

2470

那么既然已经拿到我们拼接玩好了一天包之后

2471

就直接把它退回来就可以了

2472

这样是不是就直接退回来了

2473

挂了

2474

开

2475

这个没有安装码安装一下

2476

At will you show your friend

2477

这不安装过了吗

2478

对

2479

回头你开发再敲一遍就行了

2480

看一下

2481

我看一下官方文件

2482

这个包的名字叫啥

2483

少写了个

2484

怪不得安装不上

2485

这个啊

2486

那这里要改一下

2487

他是挨着收

2488

还不错

2489

看海报啥图

2490

Request that will you tu be parent

2491

这个我们不是安装过了吗

2492

我看一下看一下这个我是处理到哪了

2493

必要的base JS

2494

New way load plug

2495

单独处理了

2496

Base config

2497

base

2498

这没理由报错

2499

这个没有安安装一下

2500

很肿

2501

大家看一下

2502

一直提示埋着

2503

Requires

2504

我来看一下

2505

可瑞的APP

2506

然后服务端代码都都给它配置了load plug

2507

Will you load

2508

没有啥问题

2509

看一下

2510

Will e Lu

2511

明明都给它配置上了

2512

这还报错

2513

3.2.6版本的问题

2514

这里我们就忽略了一个CS的解析

2515

然后note

2516

小板凳

2517

这都没有什么问题

2518

这也

2519

又出现这个

2520

可怜他

2521

没问题

2522

你看客户端打包的时候是可以的

2523

那证明我们这个危楼的解析是没有问题的

2524

为一楼的解析是没有问题

2525

但是服务端的时候

2526

就出现了问题

2527

服务端

2528

一秋

2529

Clean的球手

2530

重新打一下包

2531

试一下

2532

饿瘦

2533

然后是受

2534

还是报错

2535

这个问题

2536

如有遗漏者

2537

只有服务中

2538

好像也没有什么问题

2539

这个我们客户端打包的时候

2540

客户端也全部打包出来了

2541

那证明我们这个配置没问题

2542

但是no de moon启动的时候出现问题了

2543

Shi ou a PP d

2544

一起打的是

2545

那是他是到这里无法解析

2546

嗯

2547

看一下

2548

打一下

2549

看一下这里有没有出什么东西

2550

那我们就说定下来

2551

我们这个配置的唯一logo是没有问题的

2552

加上

2553

是我班的

2554

写错了吗

2555

没有

2556

Clean APP点

2557

这个也没有什么问题

2558

都经过打包之后的

2559

那是不是我们这打包环境这

2560

看看检查一下我们这个服务站打包环境出的东西是不是有点问题

2561

怕是

2562

没得

2563

Active

2564

Web pack note

2565

引入应该是收干到底

2566

我引入的是哪一个

2567

嗯

2568

打包起来那是没问题的

2569

比如说半岛

2570

再来看一下

2571

看这里还抱一个啥

2572

Does the option in code

2573

读取文件

2574

Cost

2575

然后

2576

热吗

2577

然后引入一下他的派怎么办

2578

又少写一个肉

2579

这个啊

2580

这一步先

2581

这样就可以啦

2582

然后我们来看一下

2583

我们的这个海上

2584

六包错了

2585

Root d put is knock function

2586

一下

2587

这里的话

2588

我们的root不是我们服务端的

2589

是我们客户端的

2590

他说这里统一给他改过去

2591

然后再来就看到现在页面终于出来了

2592

我们去显示网页源代码

2593

可以看到

2594

是不是直接就旋到了我们的页面中

2595

这样在你Su

2596

还有当你去防这个首页的时候

2597

他是不是就

2598

可以做到首评这样指出来

2599

但是你可以看到现在是不是有个新的问题

2600

你每次页面点击好像是我都去请求了类似这个服务端

2601

跳转到后跳转的

2602

来看一下

2603

Link

2604

我们一会儿再处理这个

2605

我们先把

2606

这是我们先先保证是不源代码是直接就返回我们页面中了

2607

但是还有问题

2608

我们消除一下这个数据的获取问题

2609

就是如果比如说

2610

我们在这个

2611

客户端的客户端的代码

2612

比如说在我们的后面

2613

除了基本的我们这类产品的模板之外

2614

还有数据是我们通过阿贾克斯请求回来的

2615

我们这个页面已经是从服务端直接返回了

2616

那像你按这个请求

2617

其实它就可以跟随我们这个模板一块儿回来就行了

2618

你没必要说你的模板先回来

2619

然后里边的一些内容呢

2620

你需要等待你JS加载完毕

2621

然后再去发起

2622

按照他的请求

2623

请求回来之后再去操作DOM渲染到页面上

2624

那这样一个流程显然是不是

2625

非常不友好

2626

那这里的话

2627

既然我们已经让

2628

他在服务端进行处理

2629

那么顺便把他请求的数据也给它一块返回来就可以了

2630

这里的话简单的用一个mark的数据

2631

之前有个

2632

是真的

2633

这个这里我简单用一个接口这里

2634

那这里的话要进行接口请求

2635

我先把excuse

2636

登录一下

2637

May bank

2638

不会被我删了吧

2639

等一下

2640

没有了

2641

还有啊

2642

你说我拿下这个接口

2643

就大家完全可以自己摸给他睡醒

2644

这个话就主要返回回

2645

反正是一个name还一个address

2646

不就后面的一样

2647

那这里的话我就拿过来

2648

比如说我们在我们的home中巴home中

2649

首先

2650

先把这个接口放着

2651

首先我们把我们的excuse引入

2652

见

2653

我只是剪了一下

2654

我们就不再去丰庄这个S了

2655

然后这里我们是否要处理中

2656

我们

2657

状态管理中

2658

就是当中存在一个内幕

2659

还有存着一个UFO数据呢

2660

这里我们就使用这个顾客的写法意识到

2661

改了一下

2662

我们改变的话

2663

我们可以用他的方法

2664

还有我们的get是

2665

挡一挡

2666

首先我们拿到我们的数据

2667

然后这里边儿应该是

2668

要变化的

2669

所以我们用computer来接听一下

2670

这个是不是自动就我们导入进来了

2671

是我们的DEMO模块下边儿的

2672

这个也改一下

2673

Compute

2674

这是正常请求回来的数据

2675

然后

2676

炫

2677

这里加一个DNA吧

2678

把它渲染出来

2679

报啥错

2680

找不到名称

2681

由着衣服

2682

怎么给他扔扇回来

2683

Script

2684

如热意粉就起来

2685

嗯

2686

这个还小一点

2687

将黑啦

2688

然后呢

2689

这个数据我们要请求过来佩戴setup

2690

这里直接发请求

2691

比如说我们进行一个

2692

的话

2693

要进行的请求

2694

不用给我们提供了一个顾客的沟子

2695

就可以让我们他只在服务端运行

2696

而在客户端它是不运行的

2697

而且我们使用与艾的话

2698

还需要我们自己去完成这一套

2699

这里的话

2700

我们先把这个请求写了

2701

比如说我们这里正常的话

2702

如果没有这个服务单直接返回来

2703

我们正常是要发起请求的

2704

位置

2705

正常我们发请求就从这里拿回我们的数据

2706

然后拿到之后呢

2707

我们就

2708

改变一下

2709

DEMO下边的Saturday

2710

就是我们这个data是正常的一个请求

2711

现在可以来看一下应该

2712

的

2713

我们先调试一下客户端

2714

后

2715

Re generator runtime

2716

这里是我们用到了S7的语法

2717

用了s Qi语法

2718

是不是背包

2719

你还得配置一下的话

2720

我们需要安装解决一下这个I think of it的

2721

我们需要安装一个叫

2722

这个主要解决我们这

2723

把三河为这个语法呢

2724

福利价

2725

可以看到稍微哪里配置不好

2726

是不是就他就不给你工作了

2727

我这里还需要处理一下

2728

叫普拉格给他配置一个

2729

然后这样我们再来运行呢

2730

I keep

2731

还有新的错误码

2732

什么的符号

2733

大家听一下

2734

可以看到现在就

2735

嗯

2736

启动起来了

2737

怎么还报re generator right time is not to defend

2738

Transform generate

2739

没有问题

2740

是海报这个错

2741

看一下

2742

这个主要是因为用到了S7的用法

2743

爱情

2744

没问题意思

2745

我重新打包一下

2746

配置完全这个应该没有什么

2747

这

2748

看一下背包的官网

2749

就是这样用的

2750

Its a baseball playing

2751

西

2752

没有什么问题

2753

是不是啊

2754

I think

2755

都能用了

2756

I think of force

2757

配置

2758

也不需要试

2759

怎么老吃这种问题

2760

嗯

2761

等著

2762

这

2763

那应该报找不到错误的

2764

这端上了最新的

2765

不包含这里边儿

2766

这个需要单独安装

2767

我先接往下

2768

一会儿再来处理这个

2769

先把流程往下写一下

2770

我们就还差最后一步了

2771

你先

2772

这

2773

这是不正常

2774

要进行这个请求

2775

但是现在我们从服务站回来的话

2776

我们是只让他在服务端直接拿到这个数就行了

2777

所以说所以它提供了一个hooks

2778

叫什么呢

2779

叫

2780

She

2781

prefect

2782

昂首

2783

这句话是不是也提醒更新

2784

So perfect

2785

这是V3官方给我们提供了

2786

我看一下官网吧

2787

V3最近有新的版本

2788

我也

2789

竟然搜不到

2790

看一下答案

2791

在文档里没有写

2792

我们现在写一下

2793

我们在服务端看能不能执行就可以了

2794

然后这里是不是我们要在服务端直接启用这个接口

2795

就拿到它的数据

2796

那这里的话我们就可以直接所谓的等待他进行请求

2797

一定要写到这儿

2798

如果不写的话

2799

你这里地势还是拿不到你这个fast的

2800

这里我们可以写一下叫

2801

perfect

2802

服务站调用资讯

2803

这个它的客户端是不知情的

2804

所以说你写的话

2805

客户端就直接给你忽略掉是没有问题的

2806

这样的话

2807

我们重新来打包一下我们的代码

2808

我好像是不是按错东西了

2809

嗯

2810

这个按错东西啦

2811

可以看到这transform runtime

2812

哎呀

2813

是这个插件

2814

搞错了

2815

可以看看这插件应该配错的话

2816

他也是不值钱的

2817

这时解析我们的阿森咳

2818

Wait语法的

2819

现在我们再来执行就没有问题了

2820

可立瘦

2821

先来访一下我们的代码

2822

可以看到是不是正常出来了

2823

刚刚是配色的插件

2824

然后呢

2825

我们是不现在我们也进行服务单了

2826

然后进行服务端客户端有问题了

2827

我们先把我们的服务端入口来打包一下

2828

我们就直接咨询我们的MDVD2就行了

2829

分别打包我们的客户端是不是还有我们的服务端代码

2830

这样就打包完成了

2831

打包完成之后

2832

我们就到我们的root音带之类

2833

我们来看一下

2834

是否要拿到我们的这个方法

2835

嗯

2836

咱们先来咨询一下看一下

2837

Nude

2838

生气来访问一下

2839

后面

2840

可以看到

2841

Prefect服务端调用执行

2842

是不是证明这个我们在服务端已经执行了

2843

接下来就处理一下

2844

把我们直接请求的数据直接渲染到我们页面就行了

2845

但是你直接渲染的话

2846

你肯定是渲染不上的

2847

为什么呢

2848

因为你这个数据是在你的组间里边儿

2849

你不可能说通过正则我把里边儿的

2850

比如说这里的

2851

这个啊

2852

有人发点内幕

2853

有的音发的有关通知给他替换掉

2854

这显然是不现实的

2855

那怎么办呢

2856

我们就需要找一个中间的载体

2857

这中间的就行了

2858

我们就用到了这个无忧ex这个状态管理

2859

首先我们在服务端就把他这个值放到我们这个状态管理

2860

然后到客户端之后

2861

你直接从里面取出来就可以了

2862

完全就不需要再去重新发起艾克的请求了

2863

所以说我们这里需要处理

2864

不在服务的时候

2865

我们直接把它放到我们的状态管理里边

2866

提供的资产管理里面的话

2867

在客户端读的话

2868

他是要同一个地方去读

2869

其实我们就是把它挂在了我们的Windows对象上面

2870

那这里看一下我们怎么来去处理它呢

2871

这里的话我们先简单写一个拼接函数吧

2872

因为我们最终要把它挂载到我们的

2873

Windows上面

2874

Cost

2875

比如说我们这里就简单定义这样一个函数state

2876

首先他接受一个state

2877

首先的话就是我们在服务端处理的这个实际的数据

2878

然后温度K

2879

这是我们要绑定window对象上面的K

2880

这样的话其实就相当于拼接一个script标签

2881

你挂在这上面之后

2882

我们都知道

2883

那你的客户端它是一个全温度

2884

是一个全局对象

2885

那你直接从上面读出来是不是就可以了

2886

这里我们就差这一步了

2887

Window p

2888

等于

2889

Jason边儿spring泛

2890

然后这样是不是就挂在到我们这个温度对象上面了

2891

然后扣的时候我们就可以从那上面擅自取了

2892

然后你就不用发起200克的请求了

2893

那继续往下看

2894

刚刚这里我们是不是都已经其实放在这里

2895

那这里的话

2896

其实我们就可以

2897

拿到特等

2898

注意啊

2899

这里处理这一步

2900

这一个它是可以在服务端执行的

2901

服务端可以开了

2902

First data在服务端执行这个函数

2903

它是不是调用了fetch

2904

调用update

2905

是不是就操作了我们的star star里面就才更改了我们的state值

2906

更改之后其实在服务端就已经处理好了

2907

处理好之后我们就直接返回回来

2908

怎么通过studied我们就可以拿到它

2909

那这里有这里替换的时候

2910

我们就需要加一个

2911

怎么调用我们这个industry的函数

2912

他提出两个参数

2913

一个是我们处理好的是不十页纸

2914

因为前面是不是这里为什么加了这个味道

2915

他可以等待你前面执行完成之后

2916

再继续处理后边儿的

2917

你如果不加的话

2918

那你这里是不是也请求就处理不完成

2919

Data

2920

然后我们给他一个K

2921

比如说绑定到我们的

2922

我们起个名叫English a

2923

He stated

2924

这样一个K

2925

然后给它加上的话

2926

我们就来绑定完成了

2927

那绑定温度之后

2928

客户端什么时候去拿到他呢

2929

这里还需要改一下我们客户端的代码

2930

在我们的star里边

2931

嗯

2932

引起clean这个词的话

2933

他这是复制一个储值引起clean

2934

这里我们是不是就可以把我们的style先拿过来

2935

然后这里我们就需要来判断

2936

判断我们这个温度身上有没有我们在服务端直接返回回来的这个

2937

Straight

2938

直

2939

如果有

2940

我们就把它替换成服务端已经处理好了这个replace state

2941

然后是window

2942

这样我们就把我们之前要艾克的请求的就直接返回回来了

2943

假设有五个扣单访问

2944

这时候

2945

不会乱了

2946

不会乱

2947

因为前面我们不是单独写的

2948

每一个都是工厂函数吗

2949

每一个都是新的

2950

前面一直讲就是避免状态单立马就是这个问题

2951

每一个用户请求都是他自己的

2952

所以说不会混乱的

2953

如果你没有写

2954

你直接返回这个对象

2955

那肯定就混乱了

2956

而我们写的是一种工厂函数

2957

所以说每次都是重新执行这个函数新的状态

2958

所以说是不会混乱的

2959

这样如果有时候就处理好了

2960

这样撤职

2961

现在我们再来访问的页面

2962

另外这里客户端其实还需要处理下来

2963

客户端需要处理一下什么呢

2964

就是我们需要判断她有没有值

2965

因为有可能你上来你是在a的页面的o Bob的页面是不是就没有执行我们这个APP reflect

2966

那现在当客户端再切换到后面的时候

2967

他需要真正去发起请求了

2968

所以这里我们需要还需要加一个判断

2969

就在我们的home的

2970

里边我们这里需要来判断一下

2971

判断如果我们这个u RA INF ore点儿

2972

比如说

2973

六点内蒙是否有值

2974

因为这里你可以判断为空

2975

因为这里我复制的是初始值

2976

所以在这里我判断的时候就需要判断是不是这个初始值

2977

如果是这个初始值

2978

我就需要发起请求

2979

如果他还是我的初始值

2980

那证明是不是服务端是否没有反应过来

2981

另外我需要判断一个type of

2982

是不是我的window不等等于unDeFined

2983

因为刚刚大家也看到了这个是不是在服务端也会执行这个setup

2984

所以说我们需要判断在只有在扣单的时候

2985

我再让他去重新去请求

2986

这样整个流程我们就完成了

2987

那这里是不是我们就需要来看一下看一下

2988

他的能不能注入成功呢

2989

我们重新打包一下客户端还有服务端代码

2990

那a的页面还是最次的吧

2991

对a的页面你请求的时候

2992

他并没有调用这个edge去改变

2993

所以说above他肯定你在欧巴直接刷新

2994

那肯定是储值

2995

但当你切到后面再切回的bug的时候

2996

这个bug就会变成你心请求的这个人

2997

我们是不是用了状态管理这个中间的一个载体的因数量

2998

现在我们先看

2999

后面刷新

3000

显示文件代码

3001

我看一下有没有注入成功

3002

大家可以看到是不是成功注入回来了

3003

在我们的Windows上面

3004

就这样

3005

我们这个DEMO user info name1登

3006

然后address北京

3007

我们可以打印一下

3008

北京没有请求吗

3009

这里还

3010

这里还小问题

3011

可以看到这里可怜的班导没有找到我们对应的资源

3012

稍等一下

3013

你看这里还有点小错误

3014

这里报错了

3015

我们就差最后这一步了

3016

可以看它是什么这里

3017

喂

3018

重新启动一下

3019

我们先把这个报错解决掉吧

3020

可以看到我们现在是每次

3021

关掉

3022

现在有什么问题呢

3023

可以看我每次切换路由

3024

看他每一次都重新刷新了页面时候

3025

每次都去城职了服务端

3026

这为什么呢

3027

可以看到

3028

因为你本身的JS没有加载出来

3029

就没有找到你本地JS没有加载

3030

那肯定是

3031

没有走本地的这个路由控制了

3032

我们现在是这个S的话是首页支出

3033

然后后边呢

3034

你再进行路由切换的时候

3035

是走本机的路由了

3036

那这里因为既然都没有加载出来

3037

所以说就直接报错了

3038

那显然是我们这个静态资源服务器是没有处理好

3039

我们这里就处理一下

3040

看到我们的APP的JS

3041

这里我们写了

3042

我们是录了一半

3043

没有配置我们的静态资源服务器

3044

告诉他去哪里找我们的JS文件消过

3045

然后是

3046

这还需要一个reserve

3047

可以看到我们这样只是一个简单的流程

3048

是不是有好多的小细节地方

3049

如果你想要做一个完整的项目的话

3050

那配置还是比较复杂的

3051

所以说大家如果自己后的不足的情况下

3052

可以完全用比较成熟的一些库

3053

然后是找到我们的文件

3054

是在对视的下边

3055

这是我们的静态资源服务器

3056

然后现在你再来刷新看一下

3057

现在这不就播出了

3058

现在当你再去切换的时候呢

3059

那骑马的时候

3060

起码这里是不是已经不刷新了

3061

但这里报了什么问题

3062

报了一个跨越了

3063

这里还有跨域问题

3064

待遇的话

3065

这个我就先不解决

3066

因为这个

3067

就这样

3068

能不能我先把他引许可以

3069

我觉得谷歌是可以开启一个

3070

好

3071

先不处理问题

3072

我们先处理

3073

我们还有另外一个小的错误

3074

在服务端还有一个

3075

After next

3076

From it which was not hand with the kids

3077

再打一下

3078

这里没有拿到我们请求的值

3079

小心一下

3080

只是拿到了我们次之没问题

3081

那说明这里没有调用我们这个函数是不是又更新了

3082

嗯

3083

收服务端调用执行这里

3084

那就是是不是这一步出了问题调用执行的时候

3085

然后下一步的weight

3086

这里报错了

3087

地址给他加上这样

3088

那需要重新打包一下

3089

应该这样就完成了

3090

刚刚的会计问题应该解决了

3091

试一下

3092

刷新

3093

我错了

3094

嗯

3095

之前这个都是允许跨越的

3096

看这样应该就可以了

3097

最后来看一下

3098

现在的话

3099

直接是没有了

3100

可以看到现在这里服务端调用执行

3101

然后我们打印一下服务端代码看一下

3102

Studies states

3103

你真没劲

3104

先调一下客户端

3105

客户端这里有点小问题

3106

打一下这个de to na这个data有可能拿的不对

3107

那既然这里返回来是一个空的话

3108

那就那证明是服务端打包回来之后把它给覆盖掉了

3109

来深圳拿到了

3110

这里还有个did today in for

3111

再来刷新

3112

师傅这样就行

3113

然后我们重新再打包一下

3114

现在再来请求我们的服务站

3115

这不

3116

现在就返回来

3117

然后我们查看文源代码

3118

有没有看到直接就把我们这节课要请求数据

3119

是不是直接就给我们返回到这了

3120

然后呢

3121

他这里也不需要发起请求了

3122

人为你服务

3123

单是直接返回来了

3124

但是当你从厄巴的页面回去的时候呢

3125

是不是这是北京

3126

当你回去的时候

3127

是不是需要发起来撒

3128

重新变回新的

3129

这样这个整体流程我们就走通了

3130

今天小细节正好出了点小错误

3131

这个排查排查问题花了点时间

3132

到这里的话

3133

大家整体流程都能了解了吧

3134

你在切换

3135

千万八子

3136

这个有什么问题吗

3137

切换above

3138

因为状态管理变成了最新的

3139

所以a肯定也要变成最新的

3140

还有其他问题吗

3141

没有的话

3142

我们今天就到这里啦

3143

今天稍微晚了一些

3144

行

3145

那大家如果没有什么问题

3146

那我们今天就到这里

3147

大家可以的话就可以练一下

3148

主要你需要熟悉一下这个流程

3149

因为面试中也是很有可能会问到的

