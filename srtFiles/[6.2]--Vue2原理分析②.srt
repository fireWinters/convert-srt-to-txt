1
00:00:04,120 --> 00:00:04,720
咳

2
00:00:20,480 --> 00:00:20,960
喂

3
00:00:22,280 --> 00:00:23,150
听到声音吗

4
00:00:23,690 --> 00:00:24,170
喂

5
00:00:25,310 --> 00:00:25,760
喂

6
00:00:26,820 --> 00:00:28,290
听到声音吗

7
00:00:30,840 --> 00:00:31,620
8.05开始

8
00:01:05,400 --> 00:01:05,790
只有

9
00:02:19,880 --> 00:02:35,060
你们昨天的内容要去听明白

10
00:02:41,240 --> 00:02:41,870
一楼

11
00:02:48,440 --> 00:02:49,220
点卡

12
00:02:49,930 --> 00:02:50,860
其他同学卡

13
00:02:54,040 --> 00:02:55,780
声音卡顿卡吗

14
00:02:57,250 --> 00:02:57,700
不卡

15
00:02:58,750 --> 00:02:59,620
那就是你卡

16
00:03:18,920 --> 00:03:20,180
换网换网

17
00:03:21,380 --> 00:03:21,980
你换个网

18
00:03:41,030 --> 00:03:41,600
是吧

19
00:03:43,170 --> 00:03:44,610
学知识就这个样子

20
00:03:47,010 --> 00:03:48,540
4G呢

21
00:03:48,930 --> 00:03:50,340
你这不舍得投资

22
00:03:59,820 --> 00:04:01,080
你五系手机呢

23
00:04:02,660 --> 00:04:04,640
手机是乌鸡吗

24
00:04:05,860 --> 00:04:07,270
手机是5G手机嘛

25
00:04:08,240 --> 00:04:09,230
你们搜歌儿

26
00:04:18,160 --> 00:04:18,730
厉害呀

27
00:04:18,730 --> 00:04:20,710
都用起5G5G手机啦

28
00:04:21,220 --> 00:04:22,210
这么有钱

29
00:04:23,420 --> 00:04:25,970
你们一个个的老师都才用4G手机

30
00:04:27,160 --> 00:04:27,760
哎呀

31
00:04:27,760 --> 00:04:28,330
真的是

32
00:04:37,380 --> 00:04:38,070
你们放的歌

33
00:04:38,070 --> 00:04:39,000
放的什么歌

34
00:04:40,850 --> 00:04:41,450
这个

35
00:04:47,970 --> 00:04:50,040
The light re

36
00:04:54,900 --> 00:04:57,870
TE Sha LA

37
00:05:16,380 --> 00:05:16,740
地

38
00:05:17,790 --> 00:05:18,600
惊醒

39
00:05:19,110 --> 00:05:23,170
水像油画一样安静和平

40
00:05:23,170 --> 00:05:23,940
鸽慢

41
00:05:25,110 --> 00:05:27,630
着心跳的放晴

42
00:05:29,970 --> 00:05:33,570
祈祷你相拥的位置

43
00:05:33,750 --> 00:05:36,000
总也不懂得生活

44
00:05:36,000 --> 00:05:36,930
爱情

45
00:05:37,590 --> 00:05:41,100
你在回忆里留下的脚印

46
00:05:41,250 --> 00:05:42,660
是我爱的风景

47
00:05:48,240 --> 00:05:51,780
思念就代表爱的明信片

48
00:05:55,320 --> 00:05:57,810
爱恋真心的

49
00:06:00,450 --> 00:06:01,380
就是经典

50
00:06:02,370 --> 00:06:03,210
就是经典

51
00:06:07,980 --> 00:06:10,740
的想念陪在你身边

52
00:06:15,720 --> 00:06:16,110
发生

53
00:06:16,200 --> 00:06:16,740
都是

54
00:06:18,750 --> 00:06:19,890
为你向往着

55
00:06:19,890 --> 00:06:21,060
广场上

56
00:06:22,530 --> 00:06:26,250
我要把爱全都装进心里

57
00:06:26,250 --> 00:06:27,600
陪我一次旅行

58
00:06:30,720 --> 00:06:31,230
送你

59
00:06:32,490 --> 00:06:33,540
的想念

60
00:06:34,200 --> 00:06:36,780
寄出代表爱的明信片

61
00:06:37,680 --> 00:06:38,610
我要送你

62
00:06:41,250 --> 00:06:41,970
今天

63
00:06:41,970 --> 00:06:42,450
真心

64
00:06:45,450 --> 00:06:46,380
就是经典

65
00:06:47,340 --> 00:06:48,210
就是经典

66
00:06:48,790 --> 00:06:49,720
我的爱

67
00:06:49,720 --> 00:06:50,020
对你

68
00:06:52,960 --> 00:06:54,160
的想念

69
00:06:54,760 --> 00:06:55,750
你在你身边

70
00:07:17,830 --> 00:07:18,490
畏惧

71
00:07:18,820 --> 00:07:21,910
永远不懂得守护爱情

72
00:07:22,690 --> 00:07:27,670
你在回忆里留下的脚印是我爱的风景

73
00:07:33,760 --> 00:07:35,440
zhe I

74
00:07:37,840 --> 00:07:39,700
不要走越过了

75
00:07:40,300 --> 00:07:43,600
怀念真心把世界

76
00:07:45,460 --> 00:07:46,390
就是经典

77
00:07:52,960 --> 00:07:54,850
的想念你

78
00:07:54,850 --> 00:07:55,720
在你身边

79
00:08:00,100 --> 00:08:00,310
我

80
00:08:02,860 --> 00:08:03,520
想念

81
00:08:11,710 --> 00:08:13,180
着心把世界

82
00:08:15,430 --> 00:08:16,510
就是经典

83
00:08:17,350 --> 00:08:18,220
就是经典

84
00:08:19,270 --> 00:08:20,080
我爱你

85
00:08:21,310 --> 00:08:21,730
爱你

86
00:08:26,950 --> 00:08:27,460
爱你

87
00:09:06,720 --> 00:09:09,630
我孟起场地

88
00:09:11,100 --> 00:09:11,670
送

89
00:09:22,200 --> 00:09:22,770
伞

90
00:09:36,360 --> 00:09:37,410
咳

91
00:09:38,520 --> 00:09:45,510
咳

92
00:09:45,570 --> 00:09:46,410
Hello

93
00:09:47,170 --> 00:09:47,620
都在吗

94
00:09:47,620 --> 00:09:48,850
同学们喂

95
00:09:49,440 --> 00:09:50,130
都在吗

96
00:09:51,190 --> 00:09:52,090
可以上课

97
00:09:56,220 --> 00:09:56,970
喂喂

98
00:09:57,300 --> 00:09:58,800
还是我们昨天那个节奏

99
00:09:59,510 --> 00:10:00,500
划划扣起来

100
00:10:00,500 --> 00:10:02,600
一扣起来好吧

101
00:10:03,160 --> 00:10:04,210
懂得一扣一

102
00:10:04,210 --> 00:10:06,670
不懂的扣零就这么简单

103
00:10:08,170 --> 00:10:08,560
好

104
00:10:09,260 --> 00:10:10,910
我刚刚看到这个同学说什么

105
00:10:11,120 --> 00:10:12,710
能不能讲一下那个什么

106
00:10:14,730 --> 00:10:16,590
V手写面试题是吧

107
00:10:18,430 --> 00:10:19,900
为一般手写

108
00:10:21,020 --> 00:10:21,830
说实话

109
00:10:22,310 --> 00:10:25,340
最多就让你实现一个什么数据状态

110
00:10:27,360 --> 00:10:28,860
或者说一些其他的东西

111
00:10:28,890 --> 00:10:30,900
那V3现在目前来说

112
00:10:30,900 --> 00:10:34,140
市面上考V3手写的源码是面试题

113
00:10:34,140 --> 00:10:35,490
现在还偏少

114
00:10:35,490 --> 00:10:40,590
V2其实考手写V1的面试题我觉得偏少

115
00:10:40,620 --> 00:10:43,650
他不会浪费让你手写V面试题这个时间

116
00:10:44,160 --> 00:10:47,880
他可能更多让你如果是你的技术战士

117
00:10:47,880 --> 00:10:48,510
V技术站

118
00:10:48,510 --> 00:10:51,270
他可能更多是问你一些VI的东西

119
00:10:51,510 --> 00:10:52,530
然后考什么呢

120
00:10:52,860 --> 00:10:55,140
考的可能更多的是

121
00:10:58,020 --> 00:11:00,030
算法手写这个东西

122
00:11:00,360 --> 00:11:01,770
因为它需要20

123
00:11:01,770 --> 00:11:02,730
可能十多分钟

124
00:11:03,000 --> 00:11:03,660
20分钟

125
00:11:04,440 --> 00:11:04,890
是吧

126
00:11:04,950 --> 00:11:05,730
15分钟

127
00:11:06,300 --> 00:11:11,310
你说这个时间他口味这个东西为手写有啥难的嘛

128
00:11:11,640 --> 00:11:13,560
你们平时写的那些东西就是那些东西

129
00:11:13,560 --> 00:11:14,340
最多就是一个

130
00:11:14,490 --> 00:11:18,600
他会问你一些什么复制卷和芝士圈传递的这些东西是不是

131
00:11:19,250 --> 00:11:20,660
但也有些奇葩的公司

132
00:11:20,660 --> 00:11:23,540
那种公司我觉得去不去其实都无所谓

133
00:11:24,360 --> 00:11:28,800
所以说这个事也就是我为什么跟你们说手写V这个东西

134
00:11:28,800 --> 00:11:30,930
其实它是没有意义的一个概念

135
00:11:31,440 --> 00:11:33,330
然后我们回到昨天东西

136
00:11:33,330 --> 00:11:34,860
同学们回到昨天

137
00:11:36,040 --> 00:11:37,240
我们昨天讲的什么

138
00:11:38,000 --> 00:11:39,050
我们讲什么

139
00:11:41,230 --> 00:11:41,980
专讲什么

140
00:11:43,310 --> 00:11:44,600
昨天讲的V1是吧

141
00:11:44,630 --> 00:11:47,930
讲为什么编译时运行时是不是

142
00:11:48,580 --> 00:11:52,000
昨天涨了编译时运行时是不是

143
00:11:52,390 --> 00:11:54,280
编译时运行时还有什么

144
00:11:54,310 --> 00:11:56,290
我们呢从编译时去做优化

145
00:11:56,290 --> 00:11:57,640
它的框架的对比是不是

146
00:11:58,000 --> 00:12:00,490
然后还有VC的编译时的整个过程是吧

147
00:12:00,670 --> 00:12:02,050
它的编译怎么去编译的

148
00:12:02,050 --> 00:12:03,610
它的编译时做了一些优化

149
00:12:03,910 --> 00:12:05,350
他的思路是不是

150
00:12:05,470 --> 00:12:06,910
LV的架构是不是

151
00:12:07,460 --> 00:12:07,970
是不是

152
00:12:08,900 --> 00:12:10,520
那么在编译时的基础之上

153
00:12:10,520 --> 00:12:12,470
然后我们就扯到了什么运行时是吧

154
00:12:12,470 --> 00:12:14,210
编译时还是打包出来的代码是吧

155
00:12:14,510 --> 00:12:16,430
编译时他打包出来代码是什么样子是吧

156
00:12:17,040 --> 00:12:18,750
怎么又扯到什么运行失事

157
00:12:19,380 --> 00:12:21,000
运行时运行时是什么呢

158
00:12:21,330 --> 00:12:24,360
它源码的目录是不是我们源码的目录结构

159
00:12:24,360 --> 00:12:26,040
运行时在SRC里边是吧

160
00:12:27,060 --> 00:12:28,290
HRC里边就在里边儿

161
00:12:28,380 --> 00:12:31,710
这整个扣里边是不是整个空间是我们源码的目录结构是不是

162
00:12:32,190 --> 00:12:37,440
那我们就给大家说了什么这个东西微源码的V1的什么这个思路是吧

163
00:12:37,960 --> 00:12:41,050
是不是昨天我一整个的一个什么整个大架构

164
00:12:41,050 --> 00:12:41,380
是不是

165
00:12:41,500 --> 00:12:44,650
所以我们现在再把这个V的大架构复述一下

166
00:12:44,680 --> 00:12:46,780
就进入到今天的主课主要内容了

167
00:12:48,570 --> 00:12:49,680
昨天我们说了什么

168
00:12:49,890 --> 00:12:52,260
昨天说了我们平时打包的代码

169
00:12:52,260 --> 00:12:53,730
这是我们写的微指令是吧

170
00:12:53,880 --> 00:12:56,130
我们一个什么一个指令

171
00:12:56,130 --> 00:12:58,110
你们平时写的这个东西对应一个指令

172
00:12:58,110 --> 00:12:59,430
是不是那么一个指令

173
00:12:59,430 --> 00:13:01,500
它会打出来一个什么一个render是吧

174
00:13:01,530 --> 00:13:03,540
你怎么怎么去修改

175
00:13:03,930 --> 00:13:05,130
怎么去修改

176
00:13:05,130 --> 00:13:07,800
怎么去修改你这个展示的具体的逻辑是不是

177
00:13:09,130 --> 00:13:10,420
然后我们把它怎么办

178
00:13:11,980 --> 00:13:15,310
把它这个联系方式就是我们怎么大爷

179
00:13:15,310 --> 00:13:16,360
这是我们大一电话本儿

180
00:13:16,360 --> 00:13:18,460
是不是我们现在需要

181
00:13:18,980 --> 00:13:24,890
通过一个纽带把这个东西记录到什么大爷电话本上是不是什么样的纽带

182
00:13:24,950 --> 00:13:26,480
可能是你的电话号码是吧

183
00:13:26,600 --> 00:13:28,520
可能是你的微信号是吧

184
00:13:28,640 --> 00:13:30,890
可能是你的什么QQ号是吧

185
00:13:30,920 --> 00:13:32,150
这些东西都是有可能的

186
00:13:32,360 --> 00:13:33,560
那这些东西来做什么

187
00:13:33,650 --> 00:13:35,540
他作为一个iWatch儿是吧

188
00:13:35,630 --> 00:13:37,370
一个指令对应的water是吧

189
00:13:37,520 --> 00:13:39,050
来作为一个纽带是吧

190
00:13:39,170 --> 00:13:40,010
作为一个纽带

191
00:13:40,100 --> 00:13:41,210
沃尔维护了什么

192
00:13:41,270 --> 00:13:42,740
怎么去打电话

193
00:13:42,890 --> 00:13:45,290
怎么发微信就怎么联系你这个过程

194
00:13:45,760 --> 00:13:46,780
具体怎么联系

195
00:13:46,780 --> 00:13:47,980
他是water来维护的

196
00:13:48,280 --> 00:13:49,930
Water可能是打电话是不是

197
00:13:50,230 --> 00:13:50,860
可能是什么

198
00:13:50,860 --> 00:13:52,750
发微信可能是发QQ

199
00:13:52,750 --> 00:13:54,190
是不是都是有可能的

200
00:13:54,190 --> 00:13:54,580
是不是

201
00:13:55,260 --> 00:13:56,370
这一步明白明白

202
00:13:56,790 --> 00:14:01,050
明白明白water是负责具体去维护什么

203
00:14:01,080 --> 00:14:02,460
触发什么动作

204
00:14:02,790 --> 00:14:03,000
答

205
00:14:03,000 --> 00:14:03,660
什么动作

206
00:14:03,660 --> 00:14:05,190
去怎么执行这个render

207
00:14:05,190 --> 00:14:06,360
怎么去执行是吧

208
00:14:06,810 --> 00:14:08,220
那谁来维护这个water

209
00:14:08,780 --> 00:14:09,800
谁来维护这个water

210
00:14:10,460 --> 00:14:11,480
我们说了一个指令

211
00:14:11,480 --> 00:14:11,930
一个render

212
00:14:11,930 --> 00:14:12,110
对

213
00:14:12,110 --> 00:14:12,530
一个water

214
00:14:12,530 --> 00:14:14,450
是谁来维护这个water

215
00:14:15,760 --> 00:14:16,510
这个东西他收

216
00:14:16,510 --> 00:14:18,250
他要收集到大爷的电话本儿里边

217
00:14:18,250 --> 00:14:19,150
是不是在地里边

218
00:14:19,150 --> 00:14:21,610
是不是要收集到第二电话本儿里边儿

219
00:14:21,670 --> 00:14:23,410
那什么时候收集到电话本里边

220
00:14:24,330 --> 00:14:26,070
什么时候收集到大源电话本儿里边儿

221
00:14:26,430 --> 00:14:27,630
它会经过一个什么过程

222
00:14:27,750 --> 00:14:30,840
他会首先把我们这个东西拿过来做一个什么处理

223
00:14:30,870 --> 00:14:32,280
拿过来做什么处理

224
00:14:32,730 --> 00:14:34,830
把这个东西拿过来执行一次是吧

225
00:14:35,070 --> 00:14:36,150
执行一次我们说了

226
00:14:36,150 --> 00:14:36,810
执行的时候

227
00:14:36,810 --> 00:14:37,800
昨天我们说了是吧

228
00:14:38,010 --> 00:14:38,640
执行的时候

229
00:14:38,640 --> 00:14:39,600
执行这个的时候

230
00:14:40,100 --> 00:14:41,120
他会去访问什么

231
00:14:41,210 --> 00:14:43,490
访问访问什么问什么

232
00:14:43,550 --> 00:14:45,200
我们这上面是不是应该有位置

233
00:14:46,070 --> 00:14:46,490
是啊

234
00:14:47,460 --> 00:14:48,630
是因为有位置

235
00:14:48,630 --> 00:14:50,610
位置这上面是不是应该有D是吧

236
00:14:51,060 --> 00:14:51,570
是吧

237
00:14:52,280 --> 00:14:53,660
执行的时候它会发生什么

238
00:14:54,430 --> 00:14:55,780
有D是执行的时候

239
00:14:55,780 --> 00:14:56,560
他会反问什么

240
00:14:56,650 --> 00:14:58,000
访问this上边儿

241
00:14:58,000 --> 00:15:01,270
它会访问这个this上面的这个message是访问的

242
00:15:01,270 --> 00:15:04,180
上面的这个message访问的时候就会触发什么

243
00:15:04,270 --> 00:15:05,740
触发我们这个get是吧

244
00:15:06,100 --> 00:15:07,270
我们这个get是吧

245
00:15:07,390 --> 00:15:08,470
怎么去触发get了

246
00:15:08,470 --> 00:15:09,400
你先不用管是吧

247
00:15:09,900 --> 00:15:11,790
他会能够监听得到你访问这个属性

248
00:15:11,790 --> 00:15:13,230
监听到你访问这个属性的时候

249
00:15:13,380 --> 00:15:14,790
我现在就把这个东西记下来

250
00:15:14,940 --> 00:15:16,860
到底是谁来访问我这个属性

251
00:15:16,860 --> 00:15:17,490
是不是

252
00:15:17,490 --> 00:15:19,020
发现是water来访问我这个属性

253
00:15:19,020 --> 00:15:20,640
我把water记录到这里边儿是不是

254
00:15:20,940 --> 00:15:22,650
因为是通过water来发消息嘛

255
00:15:22,650 --> 00:15:22,950
是不是

256
00:15:23,670 --> 00:15:24,900
我把握而进入到这里边儿

257
00:15:25,500 --> 00:15:27,390
然后数据返回它渲染是吧

258
00:15:27,540 --> 00:15:30,600
然后下一次当我数据发生了变更

259
00:15:31,410 --> 00:15:32,310
发生了变更

260
00:15:32,490 --> 00:15:33,990
然后我就通知什么

261
00:15:34,170 --> 00:15:34,920
我监听到了

262
00:15:34,920 --> 00:15:38,640
就通知我所有的什么这个地铺去给大爷打电话是吧

263
00:15:38,880 --> 00:15:40,110
所有打电话是吧

264
00:15:40,140 --> 00:15:41,400
打电话然后给所有water

265
00:15:41,400 --> 00:15:44,070
让他来a说我这儿发生变化啦

266
00:15:44,100 --> 00:15:46,740
然后water又重新来拿新的数据是吧

267
00:15:46,950 --> 00:15:47,760
拿新的数据

268
00:15:47,760 --> 00:15:48,960
拿到新的数据之后

269
00:15:48,960 --> 00:15:51,150
然后又重新去渲染明白这个过程嘛

270
00:15:51,150 --> 00:15:52,140
这是整个大架构

271
00:15:52,140 --> 00:15:52,920
同学们明白的

272
00:15:52,920 --> 00:15:53,250
扣个一

273
00:15:53,250 --> 00:15:53,640
好吧

274
00:15:53,700 --> 00:15:55,230
昨天给他们说了

275
00:15:56,020 --> 00:15:56,590
好不好

276
00:15:56,830 --> 00:15:57,460
同学

277
00:16:00,870 --> 00:16:03,090
昨天我们在这块儿又聊聊了一个什么

278
00:16:03,120 --> 00:16:04,260
让你们下来之后

279
00:16:04,290 --> 00:16:06,510
我们说了ever他负责什么

280
00:16:06,750 --> 00:16:08,340
我们又把这个东西这几个归类了

281
00:16:08,340 --> 00:16:09,510
是几个归类了

282
00:16:09,570 --> 00:16:12,660
归了什么几哪几个类规哪几个类

283
00:16:13,590 --> 00:16:14,430
过来几个来

284
00:16:16,220 --> 00:16:17,450
我们归类了是吧

285
00:16:17,450 --> 00:16:17,930
哪去了

286
00:16:24,140 --> 00:16:24,830
等一下

287
00:16:27,320 --> 00:16:28,670
意思意思

288
00:16:31,930 --> 00:16:32,590
这没有吗

289
00:16:33,100 --> 00:16:34,300
我们昨天归了几个类似

290
00:16:34,480 --> 00:16:35,680
首先监听数据是吧

291
00:16:35,920 --> 00:16:37,000
监听数据

292
00:16:37,180 --> 00:16:40,810
监听数据就谁来监听它要监听的数据的什么访问

293
00:16:41,320 --> 00:16:42,820
什么访问

294
00:16:43,060 --> 00:16:44,440
还有什么修改是吧

295
00:16:44,560 --> 00:16:45,790
这个东西用谁来实现

296
00:16:46,060 --> 00:16:48,940
这里边有一个什么东西来实现observer是吧

297
00:16:49,180 --> 00:16:51,040
Odds are这个东西来实现是吧

298
00:16:51,190 --> 00:16:52,120
Odds are这个类

299
00:16:52,150 --> 00:16:54,250
它定义了一个类叫做observer是吧

300
00:16:54,960 --> 00:16:55,860
Observer来实现

301
00:16:56,010 --> 00:16:57,870
然后他又做了什么

302
00:16:58,140 --> 00:16:59,520
又做了收集是吧

303
00:16:59,820 --> 00:17:00,630
收集了什么

304
00:17:00,630 --> 00:17:02,130
你现在这块儿还没到一块儿

305
00:17:02,130 --> 00:17:03,300
你不要着急

306
00:17:03,300 --> 00:17:04,890
又做了一个收集是吧

307
00:17:04,950 --> 00:17:07,380
搜集搜集数据是吧

308
00:17:07,500 --> 00:17:09,630
收集什么数据收集

309
00:17:10,790 --> 00:17:13,190
收集什么搜集打电话是吧

310
00:17:13,190 --> 00:17:17,840
收集电话搜集阿搜集搜集搜集具体的是吧

311
00:17:17,840 --> 00:17:20,270
具体通知的操作是吧

312
00:17:20,420 --> 00:17:25,100
具体通知的怎么操作和数据的关系是吧

313
00:17:25,370 --> 00:17:26,330
就是电话本儿是吧

314
00:17:27,450 --> 00:17:28,350
电话本儿似的

315
00:17:30,200 --> 00:17:30,500
是吧

316
00:17:30,560 --> 00:17:31,520
打开电话本

317
00:17:31,550 --> 00:17:32,330
电话本儿打电话

318
00:17:32,330 --> 00:17:34,700
这个东西是谁来谁来收集dip是吧

319
00:17:35,000 --> 00:17:36,320
他负责打打电话是吧

320
00:17:36,440 --> 00:17:37,850
那么这块儿有一个东西是吧

321
00:17:38,150 --> 00:17:39,680
具体怎打电话

322
00:17:39,680 --> 00:17:40,850
打给谁的电话

323
00:17:41,240 --> 00:17:43,610
打了电话之后他打给具体谁是吧

324
00:17:43,850 --> 00:17:46,370
这东西是谁打给谁的电话

325
00:17:46,920 --> 00:17:47,520
打给谁

326
00:17:47,610 --> 00:17:48,150
打给谁

327
00:17:48,450 --> 00:17:51,270
对应的指令是不是对应的指令的指令是什么

328
00:17:51,270 --> 00:17:52,380
对应的water是吧

329
00:17:52,380 --> 00:17:53,610
对应的指令是什么

330
00:17:53,640 --> 00:17:55,920
对应的render就是渲染是吧

331
00:17:56,190 --> 00:18:01,440
渲染执行修改修改页面交互的

332
00:18:02,080 --> 00:18:04,330
指令是吧的动作是吧

333
00:18:04,450 --> 00:18:05,860
动作这个东西是谁来实现的

334
00:18:05,860 --> 00:18:06,400
Render是吧

335
00:18:06,400 --> 00:18:08,380
我们打包的render实现了是吧

336
00:18:09,190 --> 00:18:11,350
打包的render就是谁来通知他

337
00:18:11,350 --> 00:18:12,850
让让他来修改的是吧

338
00:18:12,910 --> 00:18:15,130
Water water维护了关系

339
00:18:15,130 --> 00:18:15,730
Water维护

340
00:18:15,730 --> 00:18:16,900
什么维护

341
00:18:16,930 --> 00:18:17,620
维护

342
00:18:18,560 --> 00:18:20,780
维护了如何

343
00:18:21,420 --> 00:18:24,990
通知根据关系维护了根据

344
00:18:25,930 --> 00:18:29,080
根据关系就是根据我们这个电话号码是吧

345
00:18:29,230 --> 00:18:34,780
根据关系根据关系根据电话本电话本儿信息

346
00:18:35,410 --> 00:18:37,120
电话本上面可能记微信号是吧

347
00:18:37,180 --> 00:18:38,200
可能记QQ号

348
00:18:38,290 --> 00:18:39,610
可能系电话号码是吧

349
00:18:39,790 --> 00:18:43,900
电话信息维护根据关系如何通知是吧

350
00:18:43,990 --> 00:18:46,840
如何通知我们什么如何通知

351
00:18:47,440 --> 00:18:49,270
维护了根据关系

352
00:18:50,390 --> 00:18:51,830
就是我们的电话本信息是吧

353
00:18:51,890 --> 00:18:53,180
如何去通知什么

354
00:18:53,330 --> 00:18:54,710
如何去通知我们的

355
00:18:55,010 --> 00:18:57,710
那个那个那个那个阿伦德是吧

356
00:18:57,710 --> 00:18:58,850
如何通知这个东西

357
00:18:58,970 --> 00:18:59,720
是谁来维护

358
00:18:59,870 --> 00:19:00,620
是water是吧

359
00:19:00,860 --> 00:19:04,640
他他维护了这个具体怎么去通知的这个动作是吧

360
00:19:05,220 --> 00:19:06,090
是不是这个动作

361
00:19:06,300 --> 00:19:07,260
那这里边儿

362
00:19:08,110 --> 00:19:14,470
这里边儿就这里边儿这几个东西就造成了什么不同的一个什么不同的一个几个关系

363
00:19:14,620 --> 00:19:16,570
那所以说我们现在一步一步来

364
00:19:16,930 --> 00:19:18,520
先搞这搞明白

365
00:19:18,520 --> 00:19:19,300
这个在搞明白

366
00:19:19,300 --> 00:19:21,370
这个在搞明白这个在搞明白这个a

367
00:19:21,400 --> 00:19:22,540
这个其实已经搞明白

368
00:19:22,540 --> 00:19:24,160
这个东西其实已经搞明白了是吧

369
00:19:25,360 --> 00:19:26,440
对对对对对

370
00:19:26,440 --> 00:19:27,700
就是具体的事物

371
00:19:27,730 --> 00:19:28,960
对这个同学觉得很对

372
00:19:29,050 --> 00:19:30,070
具体处罚的事物

373
00:19:30,070 --> 00:19:33,490
就是如何去根据关系如何去通知render是吧

374
00:19:33,490 --> 00:19:35,200
具体的触发25是吧

375
00:19:35,440 --> 00:19:38,200
就具体触发的四五

376
00:19:40,000 --> 00:19:40,420
是吧

377
00:19:41,140 --> 00:19:43,780
那么这个过程现在就回到这里边儿是吧

378
00:19:43,780 --> 00:19:44,530
回到这里边儿

379
00:19:44,830 --> 00:19:46,810
这个里边怎么去通知的同学们

380
00:19:47,050 --> 00:19:51,160
昨天晚上大家去看一下object DeFine property这个同学有同学下来看吗

381
00:19:52,310 --> 00:19:53,300
同学下来干嘛

382
00:19:54,540 --> 00:19:56,550
有没有同学不知道这个API的

383
00:19:57,880 --> 00:19:59,410
有没有同学不知道这个API的

384
00:19:59,500 --> 00:20:00,400
不知道扣个零

385
00:20:00,430 --> 00:20:01,030
我看一下

386
00:20:01,880 --> 00:20:02,900
有什么不知道的

387
00:20:06,010 --> 00:20:06,760
都知道

388
00:20:09,180 --> 00:20:10,500
那说明都看听话

389
00:20:10,980 --> 00:20:11,820
听话就真好

390
00:20:11,820 --> 00:20:12,870
我跟你说真好

391
00:20:12,870 --> 00:20:14,850
真的是这好多东西

392
00:20:14,850 --> 00:20:16,260
我们就可以稍微多讲一点点

393
00:20:16,260 --> 00:20:17,340
这真的真的很好

394
00:20:17,400 --> 00:20:17,730
真好

395
00:20:18,600 --> 00:20:22,290
就怕那种不听话的天天说我这说说这这也不行

396
00:20:22,290 --> 00:20:22,860
那也不行

397
00:20:23,450 --> 00:20:24,230
这是不行吗

398
00:20:24,230 --> 00:20:24,860
这是懒

399
00:20:25,810 --> 00:20:26,410
知道吧

400
00:20:30,090 --> 00:20:30,810
更新啊

401
00:20:30,810 --> 00:20:34,290
你说这个这个更新它就是一些小版本迭代

402
00:20:34,290 --> 00:20:35,400
微小版本迭代

403
00:20:36,070 --> 00:20:38,110
这个没没没什么其他东西

404
00:20:39,820 --> 00:20:40,090
WE2

405
00:20:40,090 --> 00:20:40,900
小儿迭代

406
00:20:40,930 --> 00:20:42,610
这都是

407
00:20:43,280 --> 00:20:44,720
其他的未提交的东西

408
00:20:44,720 --> 00:20:47,810
就是我的一些我自己的备注这些东西

409
00:20:48,530 --> 00:20:50,570
这是我其他的一些备注的小版本的迭代

410
00:20:50,570 --> 00:20:52,610
这个其实没什么主要的功能

411
00:20:52,610 --> 00:20:53,390
细节上的东西

412
00:20:53,450 --> 00:20:54,350
同学们学知识

413
00:20:54,350 --> 00:20:57,800
就有人跟你说深度递归它是很难的一个过程

414
00:20:57,800 --> 00:20:59,720
所以说不要去关注这些细枝末节

415
00:20:59,930 --> 00:21:02,000
当你们学到一个程度的时候

416
00:21:02,210 --> 00:21:05,060
再来关注细枝末节才会有收获

417
00:21:05,060 --> 00:21:06,350
现在你去关注细枝末节

418
00:21:06,350 --> 00:21:09,020
会把自己的路就卡死在那个维度

419
00:21:09,140 --> 00:21:09,560
知道吧

420
00:21:09,620 --> 00:21:11,390
你的围度就很低

421
00:21:11,970 --> 00:21:12,600
明不明白

422
00:21:13,720 --> 00:21:19,120
我们来说一下object的a PR object的这个API是怎么一个怎么一个过程

423
00:21:19,240 --> 00:21:21,250
首先我们可以定义一个对象是吧

424
00:21:21,280 --> 00:21:23,380
我们每个对象是不是都有个K是吧

425
00:21:23,830 --> 00:21:25,120
每个对象是不是都有K

426
00:21:25,270 --> 00:21:27,340
你就算这个空对象他没有K

427
00:21:27,460 --> 00:21:29,890
但是你如果只要往他里面加入这个K是吧

428
00:21:30,100 --> 00:21:31,270
那么我们这儿有K

429
00:21:31,270 --> 00:21:31,930
我们怎么办

430
00:21:32,230 --> 00:21:33,790
我们可以定义这个对象

431
00:21:33,790 --> 00:21:35,650
重写这个对象的某一个K是不是

432
00:21:36,600 --> 00:21:37,950
这个object DeFine property

433
00:21:37,950 --> 00:21:39,840
它的作用就是重写

434
00:21:40,080 --> 00:21:42,330
重写o be je这个对象

435
00:21:42,330 --> 00:21:43,170
你看我们在这儿

436
00:21:43,350 --> 00:21:43,830
他会

437
00:21:44,400 --> 00:21:45,210
给他一个APP

438
00:21:45,210 --> 00:21:46,680
然后重写这个K是吧

439
00:21:47,470 --> 00:21:48,310
重写这个K

440
00:21:48,490 --> 00:21:51,640
我们重写OBG上面具体的K

441
00:21:51,640 --> 00:21:53,140
就比如说我们现在重写了

442
00:21:53,320 --> 00:21:56,560
重写了OBGOBJ下边的什么具体的a

443
00:21:56,920 --> 00:21:57,520
这个K是吧

444
00:21:57,580 --> 00:21:58,390
点a是吧

445
00:21:58,450 --> 00:21:59,440
点a这个K

446
00:21:59,560 --> 00:22:01,540
具体重写这个K是吧

447
00:22:01,540 --> 00:22:04,990
AJK这个K里面的触触发操作是吧

448
00:22:05,560 --> 00:22:08,320
就是具体这个K的各种不同的操作是吧

449
00:22:08,440 --> 00:22:09,370
我们在这儿重写

450
00:22:09,580 --> 00:22:10,480
重写了什么K

451
00:22:10,600 --> 00:22:12,520
重写它的OBd.a是吧

452
00:22:12,520 --> 00:22:14,530
他这个操作这个操作怎么操作

453
00:22:14,530 --> 00:22:15,340
这个操作怎么操作

454
00:22:15,610 --> 00:22:17,020
你看这个操作他怎么重写

455
00:22:17,140 --> 00:22:19,360
它可以重写你这个a的访问

456
00:22:20,520 --> 00:22:23,490
A的访问就是你OBG访问a的时候

457
00:22:23,580 --> 00:22:24,510
我可以鉴定得到

458
00:22:24,960 --> 00:22:26,160
然后也可以重写什么

459
00:22:26,190 --> 00:22:27,840
重写赛特是吧

460
00:22:27,840 --> 00:22:28,650
重写赛特

461
00:22:29,430 --> 00:22:29,730
是吧

462
00:22:29,790 --> 00:22:30,930
从1OUT set是什么

463
00:22:30,990 --> 00:22:32,130
你修改这个a的时候

464
00:22:32,130 --> 00:22:32,790
我可以防止它

465
00:22:33,000 --> 00:22:34,170
让我们来执行一下

466
00:22:34,260 --> 00:22:35,250
执行一下之后呢

467
00:22:35,250 --> 00:22:37,530
我们来怎么办

468
00:22:37,560 --> 00:22:38,160
OBg.a是吧

469
00:22:38,370 --> 00:22:40,470
A等于一你看

470
00:22:41,340 --> 00:22:45,240
是不是特维斯特sight就是这就是不是就出发了是吧

471
00:22:45,690 --> 00:22:48,090
然后我现在又来获取是吧

472
00:22:49,100 --> 00:22:50,150
你看吧

473
00:22:50,240 --> 00:22:51,470
他就会监听得到了

474
00:22:51,560 --> 00:22:58,520
那这一块儿同学们这个东西是不是就这个东西听不清楚这个就是最基本的什么监听是不是

475
00:22:59,460 --> 00:23:01,530
是不是这个明白了吗

476
00:23:01,860 --> 00:23:02,970
这个也填明白了吗

477
00:23:04,910 --> 00:23:05,270
是吧

478
00:23:05,630 --> 00:23:07,190
那现在这个维度我们又来了

479
00:23:07,280 --> 00:23:07,880
把这个东西

480
00:23:07,970 --> 00:23:09,740
我们现在不看源码结合到这里边来

481
00:23:10,410 --> 00:23:11,040
就在这里面

482
00:23:12,740 --> 00:23:15,050
我们说了谁根据我们这个图

483
00:23:15,380 --> 00:23:18,200
谁他他订阅了这个数据

484
00:23:18,200 --> 00:23:19,460
把你这个数据重写了

485
00:23:19,460 --> 00:23:20,840
重写了get是吧

486
00:23:21,020 --> 00:23:23,060
Get get它会监听得到是吧

487
00:23:23,270 --> 00:23:24,830
监听得到你这个给他是吧

488
00:23:24,830 --> 00:23:25,880
听得到你这个什么

489
00:23:26,150 --> 00:23:27,740
谁使用你这个数据是吧

490
00:23:28,040 --> 00:23:29,570
监测到你谁使用这个数据

491
00:23:29,600 --> 00:23:30,320
然后什么

492
00:23:30,500 --> 00:23:31,700
然后你修改的时候

493
00:23:31,700 --> 00:23:33,110
我能够监测到什么

494
00:23:34,240 --> 00:23:35,200
你修改这个数据

495
00:23:35,230 --> 00:23:37,090
然后我就来具体哪个K是吧

496
00:23:37,210 --> 00:23:39,160
所以我在这块儿就是个什么操作

497
00:23:40,170 --> 00:23:40,980
我这个case

498
00:23:41,190 --> 00:23:42,300
这个是o be是

499
00:23:42,840 --> 00:23:44,730
我这个OBG我怎么去处理

500
00:23:44,730 --> 00:23:46,500
同学们给我这块儿这个OBG

501
00:23:50,270 --> 00:23:53,060
我在这块儿是不是就可以做什么

502
00:23:53,510 --> 00:23:55,700
我在这块儿访问的时候就是一个什么访问

503
00:23:55,700 --> 00:23:57,950
你看看这一部这块访问的时候

504
00:23:57,980 --> 00:23:58,820
我访问数据

505
00:23:58,820 --> 00:24:00,020
什么时候会访问数据

506
00:24:00,790 --> 00:24:02,410
这个东西是不是会返回数据

507
00:24:03,090 --> 00:24:04,740
是不是你在render的时候

508
00:24:05,010 --> 00:24:06,060
我们在render的时候

509
00:24:06,090 --> 00:24:07,050
在里面的人的时候

510
00:24:07,050 --> 00:24:08,130
再再render的时候

511
00:24:08,250 --> 00:24:09,270
是不是就会访问数据

512
00:24:09,570 --> 00:24:10,470
访问数据的时候

513
00:24:10,470 --> 00:24:13,380
Render是不是就会获取你在this上面这个数据

514
00:24:13,980 --> 00:24:15,810
我监听的这个数据监听的是谁

515
00:24:16,140 --> 00:24:20,670
我监听这个OBG是不是就监听了VV这个实力是不是

516
00:24:20,670 --> 00:24:21,720
就是VM是不是

517
00:24:22,710 --> 00:24:23,160
是啊

518
00:24:24,080 --> 00:24:24,710
明白吗

519
00:24:26,980 --> 00:24:28,630
是不是听了这个实力之后

520
00:24:28,630 --> 00:24:29,140
我坚定了

521
00:24:29,140 --> 00:24:35,170
你这实力上面的这个K是不是这个K是不是你这上面的这个message是不是今天没C之后

522
00:24:35,170 --> 00:24:37,030
当你来取这个赛季的时候

523
00:24:38,010 --> 00:24:39,630
当你来取这个message的时候

524
00:24:39,660 --> 00:24:40,920
是不是就走到get里边儿

525
00:24:41,250 --> 00:24:44,040
你render就是你在这块儿页面渲染的时候

526
00:24:44,040 --> 00:24:45,450
第一次渲染是不是就走到这里边儿

527
00:24:45,660 --> 00:24:46,500
走到这里边儿

528
00:24:46,590 --> 00:24:49,350
我就通过电话本儿往他那边儿去添加

529
00:24:49,650 --> 00:24:52,050
添加你现在使用了我这个数据是吧

530
00:24:52,670 --> 00:24:54,050
是不是使用了我这个数据

531
00:24:54,600 --> 00:24:56,910
是不是首先我知道你使用我这个数据

532
00:24:56,910 --> 00:24:58,230
是不是不是

533
00:24:58,650 --> 00:25:00,600
首先我知道你现在在使用我这个数据

534
00:25:00,630 --> 00:25:01,860
第一点你使用我这个数据

535
00:25:01,860 --> 00:25:04,350
我知道我现在被使用这个数据的K是什么

536
00:25:04,380 --> 00:25:04,650
是吧

537
00:25:04,800 --> 00:25:05,370
这是我的K

538
00:25:05,920 --> 00:25:07,240
那么我还知道什么

539
00:25:07,690 --> 00:25:09,160
现在正在市政

540
00:25:09,160 --> 00:25:10,960
是哪个东西在使用我的数据

541
00:25:11,080 --> 00:25:11,530
什么意思

542
00:25:11,530 --> 00:25:11,920
同学们

543
00:25:12,340 --> 00:25:14,200
GS是个单线程的执行过程

544
00:25:14,260 --> 00:25:14,770
明白吗

545
00:25:15,430 --> 00:25:17,770
GS是个单线程的执行过程

546
00:25:18,640 --> 00:25:20,350
我执行这个render的时候

547
00:25:21,270 --> 00:25:22,140
执行了之后

548
00:25:23,240 --> 00:25:24,290
他这会儿出发了

549
00:25:24,290 --> 00:25:25,220
访问的过程是吧

550
00:25:26,180 --> 00:25:27,680
访问的过程它会触发什么

551
00:25:27,710 --> 00:25:28,610
触发给他是吧

552
00:25:29,150 --> 00:25:31,730
那这块儿他就会什么就为什么

553
00:25:32,350 --> 00:25:35,380
为什么就会退出这个这个执行

554
00:25:35,410 --> 00:25:37,180
就会把这个东西站知道吧

555
00:25:37,450 --> 00:25:42,310
这块就会压占压占执行这一块儿就会执行到这里边来明白吗

556
00:25:43,300 --> 00:25:44,560
这块就会暂停

557
00:25:44,590 --> 00:25:46,450
懂就会暂停

558
00:25:46,540 --> 00:25:48,070
因为电池是个单线程的过程

559
00:25:48,070 --> 00:25:49,240
你一直执行到这儿是吧

560
00:25:49,450 --> 00:25:50,590
他现在访问这个东西了

561
00:25:50,650 --> 00:25:51,580
访问这个东西

562
00:25:51,580 --> 00:25:52,630
但是你看现在什么

563
00:25:53,330 --> 00:25:54,740
他是一个同步的过程是吧

564
00:25:54,980 --> 00:25:57,050
就是我必须我先执行完再执行完

565
00:25:57,050 --> 00:25:58,070
再执行完再执行完

566
00:25:58,190 --> 00:26:00,170
我必须排在你的后边执行是吧

567
00:26:00,350 --> 00:26:01,700
那我现在render执行到这儿

568
00:26:01,760 --> 00:26:03,050
但是我现在访问这个数据

569
00:26:03,050 --> 00:26:04,370
我这个数据现在访问是吧

570
00:26:04,520 --> 00:26:05,840
那访问的时候就触发了什么

571
00:26:05,900 --> 00:26:09,380
就走到这个这个这个逻辑就走到这边了是吧是吧

572
00:26:10,000 --> 00:26:10,570
明白吗

573
00:26:10,780 --> 00:26:12,250
这个逻辑是不是走到这里边儿啦

574
00:26:14,100 --> 00:26:14,610
是不是

575
00:26:15,380 --> 00:26:16,460
那走到这边的时候

576
00:26:16,460 --> 00:26:17,180
我在这里边儿

577
00:26:17,360 --> 00:26:18,140
我的同学们

578
00:26:18,290 --> 00:26:20,270
那是不是我现在问你

579
00:26:20,360 --> 00:26:25,010
是不是同一时间我只有一个render在执行

580
00:26:25,010 --> 00:26:27,470
是不是我同一时间是不是只有一个render来执行

581
00:26:28,460 --> 00:26:28,970
是吧

582
00:26:29,860 --> 00:26:32,560
所以说你看我在这块儿我可以做一个什么操作

583
00:26:32,860 --> 00:26:34,420
我在执行这个render的时候

584
00:26:34,750 --> 00:26:36,910
我在执行这个render之前

585
00:26:36,910 --> 00:26:37,960
执行这个render的时候

586
00:26:37,960 --> 00:26:38,830
我可以做一个什么操作

587
00:26:38,830 --> 00:26:39,670
同学们

588
00:26:41,000 --> 00:26:42,020
执行这个render之前

589
00:26:42,020 --> 00:26:42,920
我可以做一个什么操作

590
00:26:43,370 --> 00:26:45,530
我可以赖他是吧

591
00:26:45,830 --> 00:26:47,540
我可以在执行扔那儿之前

592
00:26:47,870 --> 00:26:49,580
是不是可以在这儿声明一个类特

593
00:26:50,180 --> 00:26:51,680
Net net是什么

594
00:26:52,070 --> 00:26:52,970
Net一个

595
00:26:53,000 --> 00:26:53,930
比如说类的一个

596
00:26:53,930 --> 00:26:55,580
类的一个

597
00:26:55,820 --> 00:26:57,530
一个water water啊

598
00:26:57,770 --> 00:26:58,580
Later water

599
00:26:59,640 --> 00:27:00,660
就是怎么去

600
00:27:01,650 --> 00:27:02,070
是啊

601
00:27:02,190 --> 00:27:02,760
我们去

602
00:27:03,370 --> 00:27:04,420
记录一下是吧

603
00:27:04,690 --> 00:27:06,580
记录一下怎么去执行这个论点是吧

604
00:27:07,300 --> 00:27:07,690
是吧

605
00:27:08,230 --> 00:27:09,310
我这儿记录下来

606
00:27:09,430 --> 00:27:12,520
就是我现在这是不是就可以记录关系了是吧

607
00:27:12,730 --> 00:27:14,530
记录关系看到吗同学们

608
00:27:15,280 --> 00:27:16,750
我在这儿是不是可以记录一个关系

609
00:27:16,750 --> 00:27:18,490
这个关系我的名称叫water

610
00:27:18,670 --> 00:27:19,450
他的观察吗

611
00:27:19,450 --> 00:27:20,530
是吧是吧

612
00:27:20,530 --> 00:27:21,460
这一步明不明白

613
00:27:21,820 --> 00:27:23,260
我在执行render之前

614
00:27:23,350 --> 00:27:24,310
我是不是可以这么直

615
00:27:24,700 --> 00:27:26,740
可以可以可以在这包一下是吧

616
00:27:27,160 --> 00:27:27,880
那这包了之后

617
00:27:27,880 --> 00:27:29,440
同学们这就很有意思了

618
00:27:29,920 --> 00:27:31,240
我这是不是记录了的

619
00:27:31,630 --> 00:27:32,710
然后记录了之后

620
00:27:33,140 --> 00:27:34,460
然后我咨询这个water是吧

621
00:27:34,670 --> 00:27:36,800
我执行render其实就是执行的water是吧

622
00:27:37,070 --> 00:27:39,110
我执行的是water的那些

623
00:27:39,110 --> 00:27:40,430
执行完water之后

624
00:27:41,080 --> 00:27:42,880
同学们执行render的时候

625
00:27:43,510 --> 00:27:44,350
我在这里边儿

626
00:27:45,080 --> 00:27:45,890
因为我们说了

627
00:27:46,480 --> 00:27:47,800
这是个同步的过程是吧

628
00:27:47,860 --> 00:27:49,450
你这块儿执行water是吧

629
00:27:49,870 --> 00:27:54,040
Water执行water water执行到执行到他到render里边来了

630
00:27:54,040 --> 00:27:56,110
Render他访问Macy的时候

631
00:27:56,380 --> 00:27:58,690
反应到Macy的时候是不是就跳到这边来了

632
00:27:58,690 --> 00:27:58,960
是吧

633
00:27:59,200 --> 00:28:00,160
跳到这边来的时候

634
00:28:00,160 --> 00:28:01,090
我的勒特

635
00:28:01,630 --> 00:28:02,680
我的我在

636
00:28:02,680 --> 00:28:06,040
我现在这个是不是就可以访问到你全局这个变量的water

637
00:28:06,100 --> 00:28:06,460
是啊

638
00:28:06,820 --> 00:28:09,010
我是不是可以访问到你全局变量的water

639
00:28:09,420 --> 00:28:10,740
是不是同学们

640
00:28:11,940 --> 00:28:13,770
是不是可以访问到全区边上的龌龊

641
00:28:13,980 --> 00:28:14,940
这块明白

642
00:28:15,090 --> 00:28:15,630
这个明白吗

643
00:28:15,630 --> 00:28:16,260
其他同学

644
00:28:17,350 --> 00:28:18,820
因为我是单线程的是不是

645
00:28:19,890 --> 00:28:22,830
全面的这个water是不是当前正在访问的

646
00:28:23,040 --> 00:28:23,490
是不是

647
00:28:23,580 --> 00:28:25,920
是不是就是当前正在访问

648
00:28:26,280 --> 00:28:29,970
当前正在访问

649
00:28:32,860 --> 00:28:37,210
我这个kid什么render是不是是不是

650
00:28:39,260 --> 00:28:41,030
是不是同学们这块明白

651
00:28:41,030 --> 00:28:42,470
不明白的同学扣个一好不好

652
00:28:42,590 --> 00:28:43,670
这块一定要搞明白

653
00:28:43,670 --> 00:28:44,570
一定要打通

654
00:28:46,320 --> 00:28:47,940
其他同学都明白

655
00:28:48,390 --> 00:28:49,200
是不是都明白

656
00:28:50,800 --> 00:28:52,450
都明白明白

657
00:28:55,620 --> 00:28:56,280
明白吗

658
00:28:58,600 --> 00:28:59,500
同学们好

659
00:28:59,710 --> 00:29:00,340
同学们

660
00:29:00,580 --> 00:29:01,720
所以说这一步

661
00:29:01,870 --> 00:29:03,850
他在这一步就可以访问到这个wap是不是

662
00:29:05,110 --> 00:29:06,580
那访问到water之后

663
00:29:06,730 --> 00:29:07,420
同学们

664
00:29:07,810 --> 00:29:09,970
我这块儿是不是就可以做一个什么操作

665
00:29:10,000 --> 00:29:10,780
做一个什么操作

666
00:29:11,020 --> 00:29:13,450
你看我知道我具体是哪个K是吧

667
00:29:13,570 --> 00:29:16,900
我也知道我具体这个K在被哪一个东西使用

668
00:29:16,900 --> 00:29:19,690
是不是被哪一个记录下来water使用是吧

669
00:29:20,360 --> 00:29:21,740
是不是对

670
00:29:21,740 --> 00:29:23,660
我就可以去构建一个映射关系的

671
00:29:24,200 --> 00:29:26,540
是不是我就这个映射关系

672
00:29:26,540 --> 00:29:28,160
我可以是不是可以是个map

673
00:29:28,430 --> 00:29:30,200
是不是我是不是可以是个APP

674
00:29:30,920 --> 00:29:31,400
是不是啊

675
00:29:32,520 --> 00:29:34,830
是不是是不是这都是可以的

676
00:29:34,830 --> 00:29:40,920
是不是这个K具体对应的water是不是bug或者什么的都可以是吧

677
00:29:41,460 --> 00:29:41,850
是吧

678
00:29:42,520 --> 00:29:43,960
地浦mof都可以是吧

679
00:29:44,110 --> 00:29:44,650
我说的嘛

680
00:29:44,650 --> 00:29:46,570
不就是一个什么OBG是吧

681
00:29:46,570 --> 00:29:47,500
OBJ都可以的是吧

682
00:29:48,180 --> 00:29:49,500
你只要能够记录下来

683
00:29:49,500 --> 00:29:51,240
他们这种映射关系是不是都可以的

684
00:29:51,570 --> 00:29:52,020
是不是

685
00:29:52,780 --> 00:29:53,740
这不明白吗

686
00:29:54,730 --> 00:29:55,810
这不明白了吗

687
00:29:58,960 --> 00:29:59,350
好

688
00:29:59,380 --> 00:30:00,220
这一步明白了

689
00:30:01,420 --> 00:30:03,910
那现在我修改数据的时候

690
00:30:04,030 --> 00:30:05,620
我这样修改的数据的时候

691
00:30:06,380 --> 00:30:07,670
我这样修改数据的时候

692
00:30:09,470 --> 00:30:10,730
是不是又触发了赛特

693
00:30:10,940 --> 00:30:12,140
那触发set的时候

694
00:30:12,350 --> 00:30:14,450
我这儿是不是知道我具体的哪个K

695
00:30:15,080 --> 00:30:15,620
吃饭

696
00:30:16,180 --> 00:30:18,010
我本来这个K就是我我知道的

697
00:30:18,010 --> 00:30:18,280
是吧

698
00:30:18,340 --> 00:30:19,810
我在这儿是可以拿到具体的K

699
00:30:19,810 --> 00:30:20,230
知道吗

700
00:30:20,500 --> 00:30:20,830
同学们

701
00:30:20,890 --> 00:30:22,570
我在这儿是可以拿到具体的K是不是

702
00:30:22,570 --> 00:30:24,550
我在这儿是可以拿到具体的K

703
00:30:24,850 --> 00:30:28,690
知不知道这我可以拿到具体的这些东西都可以拿到了是不是

704
00:30:29,360 --> 00:30:30,590
你们可以去看那个API

705
00:30:30,830 --> 00:30:32,450
那么拿到具体的case之后

706
00:30:32,540 --> 00:30:33,500
我在这里边儿是吧

707
00:30:33,500 --> 00:30:35,570
就是我这个当前正在触发这个赛特

708
00:30:35,660 --> 00:30:37,160
因为我这个K我知道是哪个吗

709
00:30:37,160 --> 00:30:37,400
是吧

710
00:30:38,050 --> 00:30:38,860
拿到我这个K

711
00:30:39,010 --> 00:30:40,420
那我能拿到这个K的时候

712
00:30:40,420 --> 00:30:41,980
同学们这就有意思了嘛

713
00:30:41,980 --> 00:30:42,940
这还这还用说吗

714
00:30:42,970 --> 00:30:43,240
是吧

715
00:30:43,600 --> 00:30:44,050
怎么办

716
00:30:44,110 --> 00:30:45,070
通知是吧

717
00:30:45,130 --> 00:30:47,230
我拿到我这个全局的这个依赖是吧

718
00:30:47,230 --> 00:30:48,670
这是我构建起来的地步是吧

719
00:30:49,060 --> 00:30:51,910
我拿过来我获取到我这个指令是吧

720
00:30:52,150 --> 00:30:54,100
我获取到我对应的这个指令是吧

721
00:30:54,660 --> 00:30:56,370
获取到我对应的这个指令是

722
00:30:57,020 --> 00:30:59,240
是不是我对应的这个指令

723
00:30:59,950 --> 00:31:00,580
A

724
00:31:01,730 --> 00:31:02,540
它对应的什么

725
00:31:02,570 --> 00:31:03,620
所有的什么

726
00:31:03,920 --> 00:31:05,390
所有的water是吧

727
00:31:05,420 --> 00:31:07,850
所有的water全部去执行是吧

728
00:31:08,210 --> 00:31:09,020
全部去执行

729
00:31:10,060 --> 00:31:10,510
是吧

730
00:31:10,960 --> 00:31:12,220
全部重新执行一下

731
00:31:13,020 --> 00:31:13,320
是啊

732
00:31:13,320 --> 00:31:13,830
同学们

733
00:31:14,400 --> 00:31:15,000
明白了吗

734
00:31:15,450 --> 00:31:15,960
明白了吗

735
00:31:15,990 --> 00:31:16,800
这儿明白吗

736
00:31:16,920 --> 00:31:18,060
全部重新执行一下

737
00:31:18,150 --> 00:31:19,650
是不是就重新访问数据了

738
00:31:20,550 --> 00:31:26,310
Render是不是又重新访问数据了这块这块就是render是不是重新访问数据

739
00:31:26,520 --> 00:31:28,770
拿到访问数据重新又走到get里边儿

740
00:31:28,770 --> 00:31:33,060
是不是访问新的数据是不是是不是这个流程明白了吗

741
00:31:33,240 --> 00:31:34,500
就要访问新的数据啦

742
00:31:34,500 --> 00:31:35,970
就把新的数据是不是给到他了

743
00:31:36,090 --> 00:31:36,480
是不是

744
00:31:36,570 --> 00:31:39,720
因为你这儿先是set了是不是完了之后通知是吧

745
00:31:40,720 --> 00:31:41,950
这块有一个问题了

746
00:31:42,460 --> 00:31:45,460
那我每一次你看我每一次修改的时候

747
00:31:46,040 --> 00:31:47,360
我第一次是不是第一次

748
00:31:47,360 --> 00:31:48,200
我是通过什么

749
00:31:48,930 --> 00:31:51,660
第一次我通过初始化执行的时候

750
00:31:51,990 --> 00:31:52,950
构建了一个依赖

751
00:31:52,950 --> 00:31:54,930
是是构建了一个依赖

752
00:31:57,660 --> 00:31:59,040
五就是二什么意思

753
00:31:59,220 --> 00:32:00,210
明没明白吗

754
00:32:00,570 --> 00:32:01,320
这块没明白

755
00:32:01,380 --> 00:32:02,730
这块明白

756
00:32:03,820 --> 00:32:05,950
你看同学们这块我是不是构建了一个依赖

757
00:32:05,980 --> 00:32:07,570
是不是这块是不是构建了依赖

758
00:32:07,570 --> 00:32:10,000
在第一次是构建了一个选举的依赖

759
00:32:10,420 --> 00:32:12,370
那他什么情况下构建了选举的依赖

760
00:32:13,060 --> 00:32:13,870
是什么情况

761
00:32:14,170 --> 00:32:15,160
只要你触发给他

762
00:32:15,160 --> 00:32:16,750
他就会去构建全局的依赖吗

763
00:32:18,320 --> 00:32:22,490
并不是说我们在这儿也会有一个什么初始化的标识

764
00:32:22,700 --> 00:32:23,810
就是我第一次

765
00:32:24,640 --> 00:32:26,110
我第一次我这个water

766
00:32:27,160 --> 00:32:28,240
构建的时候

767
00:32:29,870 --> 00:32:31,790
Water构建的时候会有一个标识

768
00:32:31,790 --> 00:32:32,120
知道吗

769
00:32:32,120 --> 00:32:32,570
同学们

770
00:32:32,810 --> 00:32:33,680
我在water

771
00:32:33,710 --> 00:32:36,680
比如说这儿water在构建的时候

772
00:32:36,800 --> 00:32:38,210
我的water是不是要构建

773
00:32:38,820 --> 00:32:40,140
我这儿也有一个构建的过程

774
00:32:40,140 --> 00:32:40,530
知道吧

775
00:32:40,860 --> 00:32:42,060
就是留一个莴笋

776
00:32:43,230 --> 00:32:44,340
一个构建的过程

777
00:32:44,430 --> 00:32:44,910
知道吧

778
00:32:45,300 --> 00:32:46,680
在构建这个water的时候

779
00:32:47,280 --> 00:32:48,480
构建这个water的时候

780
00:32:48,810 --> 00:32:50,490
这里边就是有一个标识的

781
00:32:50,640 --> 00:32:51,120
是不是啊

782
00:32:51,300 --> 00:32:52,290
这里边有个标识的

783
00:32:52,290 --> 00:32:53,610
这个标识会标是什么

784
00:32:53,760 --> 00:32:54,720
是否是第一次

785
00:32:55,200 --> 00:32:56,370
如果是第一次就什么

786
00:32:56,820 --> 00:32:58,050
就比如说就会有一个

787
00:32:58,080 --> 00:32:59,250
他就有一个

788
00:32:59,340 --> 00:33:00,450
就有一个标识

789
00:33:00,450 --> 00:33:02,580
这个比如说标识就是is first

790
00:33:03,840 --> 00:33:06,000
First first等于数

791
00:33:06,990 --> 00:33:08,250
会有标识等于数

792
00:33:08,610 --> 00:33:09,990
知道标标识等于数

793
00:33:10,200 --> 00:33:11,250
当你这个water

794
00:33:11,400 --> 00:33:13,080
当你这个render执行完了之后

795
00:33:13,110 --> 00:33:14,040
在最下边的时候

796
00:33:14,040 --> 00:33:15,120
我们是不是一个对战是吧

797
00:33:15,120 --> 00:33:15,990
同学们

798
00:33:16,240 --> 00:33:17,500
这儿执行完了之后

799
00:33:18,700 --> 00:33:19,720
在这在这一步

800
00:33:20,360 --> 00:33:22,070
他的face就会变成fourth

801
00:33:24,280 --> 00:33:25,450
相当于这块儿是个醋

802
00:33:26,810 --> 00:33:27,470
这是错

803
00:33:28,400 --> 00:33:29,690
这就是false

804
00:33:29,960 --> 00:33:31,910
同学们你说我这块儿

805
00:33:31,910 --> 00:33:34,070
你看我第一次执行这个render的时候

806
00:33:34,580 --> 00:33:35,960
我在这里边就会判断

807
00:33:35,960 --> 00:33:37,460
是不是就会判断

808
00:33:38,150 --> 00:33:40,160
判断是否有意思

809
00:33:40,220 --> 00:33:40,940
First是吧

810
00:33:40,940 --> 00:33:44,180
这个标识是否第一次是吧

811
00:33:46,780 --> 00:33:51,310
第一次的时候他才会构建什么构件映射关系是不是

812
00:33:52,280 --> 00:33:53,750
印色关系是吧

813
00:33:54,230 --> 00:33:54,860
那么

814
00:33:55,440 --> 00:33:57,060
第一次构建完映射关系之后

815
00:33:57,060 --> 00:33:59,850
你看这块儿回来重新走render render走完了之后是吧

816
00:34:00,060 --> 00:34:01,980
就是第一次执行完了之后是吧

817
00:34:01,980 --> 00:34:03,360
第一次执行完了之后是吧

818
00:34:03,660 --> 00:34:06,840
执行完给他返回数据关系构建完了之后

819
00:34:06,840 --> 00:34:08,250
然后回来回到这里边是吧

820
00:34:08,430 --> 00:34:10,530
到这里边儿走render render执行完了之后

821
00:34:11,010 --> 00:34:13,980
我们构建完之后到你那边去到这儿来是吧

822
00:34:14,010 --> 00:34:15,060
就返回到这儿了是吧

823
00:34:15,210 --> 00:34:16,380
认真执行完到这儿

824
00:34:16,470 --> 00:34:17,640
这儿就是force了是吧

825
00:34:17,940 --> 00:34:19,800
那我第一次渲染是不是就执行完了是吧

826
00:34:20,040 --> 00:34:21,600
那下一次我在修改的时候

827
00:34:21,600 --> 00:34:23,490
同学们你看我在修改的时候

828
00:34:23,920 --> 00:34:26,080
我这个东西是不是就已经为false了

829
00:34:26,620 --> 00:34:28,360
是不是我在修改的时候

830
00:34:28,360 --> 00:34:29,710
我这个东西是不是已经为负数

831
00:34:29,800 --> 00:34:30,760
我在修改的时候

832
00:34:30,760 --> 00:34:32,620
我这个water是不会在构建的

833
00:34:32,830 --> 00:34:34,210
不会再重新构建的

834
00:34:35,100 --> 00:34:35,700
明白吗

835
00:34:37,140 --> 00:34:37,800
明白吗

836
00:34:38,310 --> 00:34:39,960
所以说我在修改的时候

837
00:34:39,990 --> 00:34:42,930
我这个标识这里边儿这个标识就不是第一次了

838
00:34:42,930 --> 00:34:44,520
所以说他就不会在构建buff了

839
00:34:45,370 --> 00:34:46,240
明白了吗同学

840
00:34:46,420 --> 00:34:48,460
这个初步的思路啦

841
00:34:48,460 --> 00:34:49,030
通了吗

842
00:34:50,060 --> 00:34:51,380
初步第一次的思路

843
00:34:52,170 --> 00:34:52,680
张同学

844
00:34:52,710 --> 00:34:53,880
有没有不明白的同学

845
00:34:57,830 --> 00:34:58,940
小八小八

846
00:34:58,970 --> 00:35:00,200
小八儿不明白小吧

847
00:35:01,740 --> 00:35:02,790
还是有不明白的

848
00:35:05,140 --> 00:35:06,430
有两有几个同学不妙

849
00:35:07,500 --> 00:35:08,190
有点迷糊

850
00:35:09,920 --> 00:35:11,330
迷糊是来是在哪一点

851
00:35:11,810 --> 00:35:12,890
前边儿这些会吗

852
00:35:12,920 --> 00:35:14,690
就是出就是不

853
00:35:14,690 --> 00:35:17,000
我们不不算上初次构建这个过程

854
00:35:17,390 --> 00:35:19,400
不算上是否是初次构建的过程

855
00:35:19,460 --> 00:35:21,350
这个这个这个过程明白吗

856
00:35:21,350 --> 00:35:22,610
小八号这个call UPS

857
00:35:25,850 --> 00:35:27,320
不算上初次构建的过程

858
00:35:28,230 --> 00:35:29,070
Co UPS呢

859
00:35:30,020 --> 00:35:30,740
都明白是吧

860
00:35:30,920 --> 00:35:33,710
那意思就是说现在不明白的是

861
00:35:34,850 --> 00:35:38,030
不明白的是他怎么标识每一次是吧

862
00:35:38,060 --> 00:35:44,540
每一次是否需要初次是否需要出构建这个关系是不是这个意思是不是这个关系

863
00:35:44,570 --> 00:35:45,260
是不是这个意思

864
00:35:45,320 --> 00:35:46,220
这块不明白是不是

865
00:35:46,890 --> 00:35:47,370
是不是

866
00:35:50,520 --> 00:35:51,600
是吧

867
00:35:52,380 --> 00:35:55,560
就是不清楚的点是这块儿第一次怎么开始的

868
00:35:56,800 --> 00:35:58,990
第一次你溜AOE的时候开始的

869
00:35:59,800 --> 00:36:00,670
你留意的时候

870
00:36:00,670 --> 00:36:03,550
你留意的时候we里边的代码里边儿开始

871
00:36:05,670 --> 00:36:06,870
你流为一的时候

872
00:36:09,200 --> 00:36:10,400
你留意的时候

873
00:36:10,880 --> 00:36:12,890
We里边里边的代码

874
00:36:12,890 --> 00:36:14,000
你的VB实现

875
00:36:19,450 --> 00:36:19,930
再见啊

876
00:36:25,040 --> 00:36:26,300
你的微微一实现

877
00:36:26,860 --> 00:36:27,430
知道吗

878
00:36:27,670 --> 00:36:30,190
你第一次开始式微里边实现的一个过程

879
00:36:30,310 --> 00:36:31,630
这个我们一会儿给大家讲

880
00:36:31,630 --> 00:36:33,850
你现在只需要知道它有一个第一次

881
00:36:33,850 --> 00:36:36,820
这个第一次第一次的过程是掌控在V1的手里边

882
00:36:37,400 --> 00:36:38,840
第一次构建这个东西的时候

883
00:36:39,170 --> 00:36:40,610
掌握在V1的手里边

884
00:36:41,460 --> 00:36:43,470
你第一次他的触发源头

885
00:36:43,470 --> 00:36:44,910
你看我们第一次的处罚源头是什么

886
00:36:45,120 --> 00:36:45,630
第一步

887
00:36:47,980 --> 00:36:49,000
构建龌龊是吧

888
00:36:49,480 --> 00:36:50,080
构建

889
00:36:51,050 --> 00:36:53,450
Water是构建water

890
00:36:53,570 --> 00:36:54,350
构建water

891
00:36:54,380 --> 00:36:55,190
构建water的时候

892
00:36:55,190 --> 00:36:56,840
里边儿是不是有一个什么

893
00:36:58,050 --> 00:37:00,630
是否第一次的标识

894
00:37:00,630 --> 00:37:02,520
是不是有一个适合第一次的标识

895
00:37:02,670 --> 00:37:05,700
因为water全局只会构建一次

896
00:37:05,730 --> 00:37:08,400
我一个指令只会在全局构建一次

897
00:37:08,400 --> 00:37:10,830
他从此以后他一直就保持着这个water

898
00:37:11,510 --> 00:37:12,050
从此以后

899
00:37:12,050 --> 00:37:14,090
她就关系就一直被维护着了

900
00:37:15,160 --> 00:37:18,340
他就不会每一次你render的时候都去构建知道吗

901
00:37:19,000 --> 00:37:19,540
明白吗

902
00:37:19,960 --> 00:37:21,250
这个call up4明白吗

903
00:37:21,760 --> 00:37:24,490
所以说第一次会有一个什么构建water

904
00:37:24,490 --> 00:37:26,200
构建water是第一次的时候

905
00:37:26,410 --> 00:37:27,250
他会构建water

906
00:37:27,250 --> 00:37:30,370
就是初始化的时候会构建water

907
00:37:30,400 --> 00:37:32,740
构建water的时候就会有一个第一次的标识符

908
00:37:33,540 --> 00:37:34,470
标识符就是什么

909
00:37:34,500 --> 00:37:36,780
First是否是第一次的标识符

910
00:37:36,810 --> 00:37:38,910
然后构建water的时候

911
00:37:38,910 --> 00:37:40,470
中间会触发什么

912
00:37:40,770 --> 00:37:41,490
会触发render

913
00:37:42,700 --> 00:37:43,840
这个时候标志物是吗

914
00:37:43,900 --> 00:37:45,490
为醋是吧

915
00:37:45,550 --> 00:37:46,180
标示为醋

916
00:37:46,450 --> 00:37:49,780
然后在这个过程会触发render render会走一个什么过程

917
00:37:49,780 --> 00:37:50,890
同学们

918
00:37:50,920 --> 00:37:52,150
Render会走一个什么过程

919
00:37:52,270 --> 00:37:56,110
Render他会走一个我们去访问什么

920
00:37:56,140 --> 00:37:57,970
访问get数据的过程是吧

921
00:37:58,620 --> 00:37:59,760
因为要获取数据是吧

922
00:37:59,820 --> 00:38:01,170
访问get数据的过程是吧

923
00:38:01,170 --> 00:38:01,980
给他数据是吧

924
00:38:02,520 --> 00:38:05,400
Get数据的过程会做到什么

925
00:38:06,090 --> 00:38:07,260
在构建render之前

926
00:38:07,260 --> 00:38:09,090
是我们这块儿是不是也会加一个什么

927
00:38:10,010 --> 00:38:11,960
就是在这块儿我们会保存是吧

928
00:38:11,960 --> 00:38:13,070
受淹还会什么

929
00:38:13,370 --> 00:38:16,340
把当前的render把当前

930
00:38:17,860 --> 00:38:24,040
的把当前的render是吧保存在应该当前的water是吧

931
00:38:24,490 --> 00:38:25,420
当前的water

932
00:38:26,800 --> 00:38:28,000
保存在什么

933
00:38:28,210 --> 00:38:31,930
保存在一个全局标识符中是吧

934
00:38:32,020 --> 00:38:34,030
全局变量中是吧是吧

935
00:38:34,090 --> 00:38:35,110
全局变量中是吧

936
00:38:37,710 --> 00:38:41,250
那这个时候你的全局变量之后就是执行了

937
00:38:41,250 --> 00:38:41,580
是吧

938
00:38:41,610 --> 00:38:42,420
就是执行

939
00:38:43,240 --> 00:38:44,980
龌龊是吧是吧

940
00:38:45,190 --> 00:38:47,980
执行龌龊龌龊的时候就会什么触发点是吧

941
00:38:49,140 --> 00:38:50,640
出发的时候就为什么

942
00:38:51,180 --> 00:38:52,350
构建get是吧

943
00:38:52,980 --> 00:38:53,910
获取给他是吧

944
00:38:54,090 --> 00:38:54,750
获取给他

945
00:38:54,930 --> 00:38:58,860
那获取get的时候就会做做什么什么就会获取到数据是吧

946
00:39:00,300 --> 00:39:03,660
是不是获取了数据是同时做什么

947
00:39:03,720 --> 00:39:04,470
同时做什么

948
00:39:04,530 --> 00:39:05,850
同时能够拿到什么

949
00:39:05,970 --> 00:39:09,600
拿到你具体的当前获取到获取到什么

950
00:39:09,600 --> 00:39:11,580
获取当前的这个全局标识

951
00:39:11,610 --> 00:39:13,440
全局变量保存了

952
00:39:13,440 --> 00:39:15,660
全局变量

953
00:39:16,890 --> 00:39:20,460
保存的当前的什么water

954
00:39:20,580 --> 00:39:22,860
就是当前是谁来访问我这个数据的是吧

955
00:39:23,100 --> 00:39:25,080
当前谁来访问我这个仿

956
00:39:25,110 --> 00:39:26,550
谁来访问我这份数据

957
00:39:26,580 --> 00:39:28,290
他是全局变量保存着了

958
00:39:28,380 --> 00:39:30,120
为什么他可以保访问

959
00:39:30,420 --> 00:39:33,030
因为我们说了JS是一个同步执行的过程

960
00:39:33,030 --> 00:39:33,300
是的

961
00:39:33,510 --> 00:39:34,920
他在执行render的时候

962
00:39:35,220 --> 00:39:38,100
执行render执行到这块儿获取数据那一步的时候

963
00:39:38,460 --> 00:39:39,720
他这块儿就会暂停

964
00:39:39,840 --> 00:39:41,100
进入到哪块儿去战

965
00:39:41,100 --> 00:39:41,910
进入到这里边儿去

966
00:39:41,910 --> 00:39:43,080
是不是进入到这里边儿去

967
00:39:44,490 --> 00:39:46,560
是不是所以说这一步之前

968
00:39:47,630 --> 00:39:49,700
他只需要保存一个全局变量就行了

969
00:39:49,910 --> 00:39:51,830
就在这块儿全局保存的这个东西

970
00:39:51,860 --> 00:39:56,120
然后也知道也明白具体是哪一个数据

971
00:39:56,210 --> 00:39:58,700
数据K被使用是吧

972
00:39:59,770 --> 00:40:00,040
是啊

973
00:40:00,040 --> 00:40:00,580
被使用

974
00:40:00,640 --> 00:40:01,960
然后就怎么办

975
00:40:01,990 --> 00:40:02,920
就构建关系

976
00:40:02,920 --> 00:40:03,760
还要判断是吧

977
00:40:04,000 --> 00:40:05,080
他要判断是吧

978
00:40:05,650 --> 00:40:06,430
要判断什么

979
00:40:06,520 --> 00:40:07,720
判断是否

980
00:40:08,850 --> 00:40:10,290
这个东西是否为醋是吧

981
00:40:10,590 --> 00:40:11,700
判断是否first

982
00:40:12,180 --> 00:40:13,470
如果是构建什么

983
00:40:13,560 --> 00:40:14,430
构建关系是吧

984
00:40:14,610 --> 00:40:15,750
构建完关系之后

985
00:40:16,380 --> 00:40:17,250
数据是吧

986
00:40:17,430 --> 00:40:18,240
把数据返回

987
00:40:19,070 --> 00:40:20,630
数据是吧

988
00:40:20,870 --> 00:40:21,830
数据返回

989
00:40:22,040 --> 00:40:23,060
返回之后做什么

990
00:40:23,510 --> 00:40:26,600
Render render是不是就即使这块儿执行完了之后

991
00:40:26,690 --> 00:40:27,770
数据是不是就返回来了

992
00:40:27,770 --> 00:40:28,040
是吧

993
00:40:28,040 --> 00:40:30,230
同学们返回来之后是不是又走到这块儿来了

994
00:40:30,470 --> 00:40:32,210
到这块儿他继续往下执行了

995
00:40:32,300 --> 00:40:34,010
是不是就render render

996
00:40:34,700 --> 00:40:35,270
Render

997
00:40:36,360 --> 00:40:38,460
Render是不是render又执行是吧

998
00:40:41,680 --> 00:40:43,030
不是为了什么浪费内存

999
00:40:43,630 --> 00:40:46,090
是为了不需要每一次都去构建关系

1000
00:40:47,590 --> 00:40:48,340
构建完关系

1001
00:40:48,340 --> 00:40:49,420
你每次你有一个water

1002
00:40:49,420 --> 00:40:50,650
你的引用都不一样

1003
00:40:50,770 --> 00:40:51,700
你的引用不一样

1004
00:40:51,700 --> 00:40:53,290
你店铺里面保存的是什么

1005
00:40:53,290 --> 00:40:54,340
保存的是引用

1006
00:40:55,060 --> 00:40:57,730
你的卡里面就算保你的卡里面保存的是方法

1007
00:40:57,730 --> 00:41:00,610
但是方法是引用明白吗

1008
00:41:03,180 --> 00:41:06,240
首先你看这一步就是什么构建关系是吧

1009
00:41:06,360 --> 00:41:07,080
返回数据了

1010
00:41:07,170 --> 00:41:08,670
那么第一次渲染是不是就完了

1011
00:41:08,670 --> 00:41:10,440
同学们第一次渲染是吧

1012
00:41:10,470 --> 00:41:12,480
还有这块儿render执行完了之后是吧

1013
00:41:12,600 --> 00:41:14,070
数据返回render执行完

1014
00:41:14,160 --> 00:41:15,030
任务执行完了之后

1015
00:41:15,030 --> 00:41:16,500
是不是要到这一步了是吧

1016
00:41:16,500 --> 00:41:19,140
到这一步了他就又继续走了是吧

1017
00:41:19,410 --> 00:41:21,480
是什么标识符是吧

1018
00:41:22,160 --> 00:41:23,750
是否is first

1019
00:41:24,430 --> 00:41:25,030
变成什么

1020
00:41:25,060 --> 00:41:26,020
变成first是吧

1021
00:41:26,500 --> 00:41:27,640
Is first变成什么

1022
00:41:28,690 --> 00:41:29,380
Boss是吧

1023
00:41:29,560 --> 00:41:31,690
变成粉丝之后同学们怎么办

1024
00:41:32,020 --> 00:41:33,100
变成boss之后怎么办

1025
00:41:33,610 --> 00:41:34,390
那就很简单了

1026
00:41:34,390 --> 00:41:35,770
是不是就完了

1027
00:41:35,830 --> 00:41:37,090
第一次卷就完了是吧

1028
00:41:37,240 --> 00:41:40,990
变成粉丝之后他render render完了之后就是生成虚拟动虚拟DOM

1029
00:41:40,990 --> 00:41:42,040
就是去做什么

1030
00:41:42,250 --> 00:41:44,890
去做真正的什么页面需修改是吧

1031
00:41:45,600 --> 00:41:45,990
是吧

1032
00:41:46,170 --> 00:41:48,210
那这一步完了之后就做什么什么

1033
00:41:48,840 --> 00:41:49,620
这不完了之后

1034
00:41:51,790 --> 00:41:52,990
就是这么个过程

1035
00:41:52,990 --> 00:41:53,740
是什么过程

1036
00:41:55,250 --> 00:41:56,960
数据发生修改的时候是吧

1037
00:41:57,410 --> 00:41:59,720
当数据发生修改是吧

1038
00:41:59,870 --> 00:42:04,310
发生修改的时候怎么办数据发生修改的时候怎么办

1039
00:42:05,040 --> 00:42:05,400
怎么办

1040
00:42:05,670 --> 00:42:08,520
他就会去做一个什么过程做一个什么过程

1041
00:42:09,380 --> 00:42:11,000
他会把我们当前这个

1042
00:42:11,910 --> 00:42:13,260
出就会出发赛特是吧

1043
00:42:13,500 --> 00:42:13,800
哇塞

1044
00:42:14,040 --> 00:42:16,890
那么出发SP的时候就是什么拿到我整个的什么

1045
00:42:17,780 --> 00:42:19,160
音色算构件

1046
00:42:19,880 --> 00:42:20,660
构建关系是吧

1047
00:42:20,660 --> 00:42:21,980
拿到我们的关系是吧

1048
00:42:22,160 --> 00:42:22,550
是吧

1049
00:42:22,880 --> 00:42:24,950
拿我们的关系通过通过什么

1050
00:42:24,980 --> 00:42:26,090
通过K是吧

1051
00:42:27,590 --> 00:42:29,240
通过K是去执行是吧

1052
00:42:29,480 --> 00:42:29,990
执行

1053
00:42:33,880 --> 00:42:35,440
是不是执行render

1054
00:42:35,860 --> 00:42:37,210
执行render执行的是什么

1055
00:42:37,270 --> 00:42:38,080
执行water

1056
00:42:38,080 --> 00:42:38,920
执行water是吧

1057
00:42:40,270 --> 00:42:41,770
执行water执行的water什么

1058
00:42:41,830 --> 00:42:45,490
执行water执行了他是他你保存的这个函数

1059
00:42:45,640 --> 00:42:48,790
并不是你整个water初始化的时候这个过程

1060
00:42:49,350 --> 00:42:50,730
所以说他只会执行这一块儿

1061
00:42:50,730 --> 00:42:51,750
这里边就不会执行了

1062
00:42:51,990 --> 00:42:54,330
那执行这一块儿的时候又去做什么

1063
00:42:54,750 --> 00:42:56,130
执行握手又会执行什么

1064
00:42:56,610 --> 00:43:01,440
Render是不是是不是是不是执行render又到了一块儿

1065
00:43:01,960 --> 00:43:03,130
又到了一块儿

1066
00:43:03,190 --> 00:43:03,820
同学们

1067
00:43:05,000 --> 00:43:06,650
又是不是又到这一块儿获取数据啦

1068
00:43:06,650 --> 00:43:07,040
是吧

1069
00:43:07,460 --> 00:43:08,390
就是给它里面啦

1070
00:43:08,420 --> 00:43:08,870
是吧

1071
00:43:09,170 --> 00:43:11,090
又到我们这块儿给他获取数据

1072
00:43:11,990 --> 00:43:13,550
但是get获取数据的时候

1073
00:43:13,550 --> 00:43:15,500
这个时候他已经是什么

1074
00:43:15,680 --> 00:43:16,940
已经是fourth了

1075
00:43:17,060 --> 00:43:19,040
是不是这个时候已经是fourth了

1076
00:43:19,040 --> 00:43:23,810
这个这里边这我们没有地方把他之前没有把它变成醋是不是

1077
00:43:24,370 --> 00:43:25,870
所以说这块儿就指挥怎么

1078
00:43:25,990 --> 00:43:26,830
指挥走什么

1079
00:43:26,860 --> 00:43:28,450
我们的render获取数据返回

1080
00:43:29,020 --> 00:43:31,240
获取数据返回render明白了吗

1081
00:43:32,850 --> 00:43:33,450
明白了吧

1082
00:43:34,920 --> 00:43:35,160
所以

1083
00:43:35,160 --> 00:43:35,610
同学

1084
00:43:36,270 --> 00:43:36,930
小八

1085
00:43:37,410 --> 00:43:39,540
还有这个call off

1086
00:43:40,080 --> 00:43:40,770
我可记

1087
00:43:40,770 --> 00:43:41,640
我可记着了

1088
00:43:44,220 --> 00:43:44,760
是吧

1089
00:43:46,090 --> 00:43:49,570
就说这个大架构在代码之上是不是又拉了一遍

1090
00:43:49,600 --> 00:43:51,790
又又稍微渗透了一下

1091
00:43:51,970 --> 00:43:54,820
我们再来再来这是整个流程是吧

1092
00:43:55,120 --> 00:43:55,660
那么再来

1093
00:43:56,730 --> 00:43:58,080
再聊这个observer

1094
00:43:59,040 --> 00:44:01,860
再聊这个observer这块有一个考题

1095
00:44:03,390 --> 00:44:06,000
O2是不是可以监听数据数对象是吧

1096
00:44:06,570 --> 00:44:08,040
这块一般会出一个考题

1097
00:44:08,040 --> 00:44:09,570
就是observer

1098
00:44:10,120 --> 00:44:11,860
恕微数据

1099
00:44:12,070 --> 00:44:15,970
那个什么微里边儿数组监听是怎么处理的

1100
00:44:16,670 --> 00:44:18,290
Object DeFine property

1101
00:44:18,290 --> 00:44:21,890
应该有同学听过这个object DeFine property可以监听数组吗

1102
00:44:23,080 --> 00:44:24,070
同学们想一下

1103
00:44:24,930 --> 00:44:26,880
Object DeFine property可以监听数组吗

1104
00:44:27,330 --> 00:44:28,020
是否

1105
00:44:29,120 --> 00:44:31,640
是否可以监听速度

1106
00:44:33,280 --> 00:44:33,790
可以吗

1107
00:44:38,700 --> 00:44:39,690
有的方法可以

1108
00:44:41,420 --> 00:44:42,590
大多数同学说不行

1109
00:44:42,590 --> 00:44:43,220
其他同学

1110
00:44:43,970 --> 00:44:44,630
其他同学

1111
00:44:46,960 --> 00:44:47,590
有人说可以

1112
00:44:47,590 --> 00:44:48,310
有人说不行

1113
00:44:48,310 --> 00:44:49,030
到底行不行

1114
00:44:49,930 --> 00:44:51,760
你们有没有去试验过

1115
00:44:51,790 --> 00:44:52,240
先说

1116
00:44:53,730 --> 00:44:56,640
没有百分之100%的人应该没有

1117
00:44:58,170 --> 00:44:59,070
通过索引不行

1118
00:44:59,580 --> 00:45:00,630
通过索引怎么不行

1119
00:45:01,420 --> 00:45:02,440
通过索引就行

1120
00:45:03,740 --> 00:45:04,580
所以怎么不行

1121
00:45:07,840 --> 00:45:08,500
看一下吧

1122
00:45:09,990 --> 00:45:10,680
我问你

1123
00:45:12,050 --> 00:45:13,220
这个东西监听

1124
00:45:13,550 --> 00:45:14,720
Object监听

1125
00:45:15,390 --> 00:45:17,100
不应该监听OB叫做什么

1126
00:45:17,100 --> 00:45:18,000
重写是吧

1127
00:45:18,270 --> 00:45:18,810
它是什么

1128
00:45:18,990 --> 00:45:20,010
它是重写

1129
00:45:22,700 --> 00:45:24,050
重写对象的K是吧

1130
00:45:31,710 --> 00:45:33,960
重写对象的K是重写对象的

1131
00:45:33,960 --> 00:45:34,650
我现在问你

1132
00:45:36,030 --> 00:45:36,930
宿主也可以马

1133
00:45:39,850 --> 00:45:40,600
速度也可以吗

1134
00:45:42,520 --> 00:45:43,000
有的

1135
00:45:43,540 --> 00:45:43,930
是吧

1136
00:45:44,440 --> 00:45:44,890
有没有

1137
00:45:45,800 --> 00:45:46,400
数字有吗

1138
00:45:51,980 --> 00:45:52,910
速度有K

1139
00:45:53,780 --> 00:45:54,530
很简单

1140
00:45:57,040 --> 00:45:57,550
是不是K

1141
00:45:57,550 --> 00:45:58,450
不这这是零

1142
00:45:58,630 --> 00:45:59,260
这试一试吧

1143
00:45:59,500 --> 00:46:00,940
这是不是K是

1144
00:46:01,510 --> 00:46:02,290
那速度有K

1145
00:46:02,470 --> 00:46:03,760
那他为什么不能见的速度

1146
00:46:04,500 --> 00:46:05,610
怎么就不能接听数组

1147
00:46:06,090 --> 00:46:08,490
它监听数组也是遍历数组的每一个K去监听

1148
00:46:10,950 --> 00:46:13,140
所以说你们平时看的文章都是有问题的

1149
00:46:13,140 --> 00:46:13,530
知道吧

1150
00:46:14,160 --> 00:46:15,420
我经常跟他的同学说

1151
00:46:15,600 --> 00:46:18,330
你们要去自己动手实践

1152
00:46:18,690 --> 00:46:19,890
不要去看别人怎么写

1153
00:46:20,250 --> 00:46:21,150
很简单的一个API

1154
00:46:21,150 --> 00:46:22,260
看文章就可以看懵了

1155
00:46:23,840 --> 00:46:24,980
所以说他可以接听速度

1156
00:46:25,280 --> 00:46:28,220
我们平时在这里边儿一般怎么怎么使用的

1157
00:46:28,220 --> 00:46:29,090
是怎么使用的

1158
00:46:29,090 --> 00:46:29,450
看吧

1159
00:46:29,930 --> 00:46:31,280
我们拿到这个对象

1160
00:46:31,340 --> 00:46:32,750
我们如果要坚定一个对象是吧

1161
00:46:32,960 --> 00:46:34,760
我们拿到这个对象的所有地市

1162
00:46:35,340 --> 00:46:36,480
拿到所有对象的K

1163
00:46:36,750 --> 00:46:38,310
然后去遍历每一个K是吧

1164
00:46:38,430 --> 00:46:39,450
遍历每一个K的时候

1165
00:46:39,450 --> 00:46:41,730
然后你看我们的这个方法封装了一下

1166
00:46:41,970 --> 00:46:42,690
怎么封装

1167
00:46:42,870 --> 00:46:44,310
封装了这个对象的事吗

1168
00:46:44,960 --> 00:46:45,770
推塔是吧

1169
00:46:45,860 --> 00:46:47,270
具体这个data是不是

1170
00:46:49,400 --> 00:46:49,910
是不是

1171
00:46:52,540 --> 00:46:53,080
是不是

1172
00:46:55,300 --> 00:46:56,650
是不是带塔是不是

1173
00:46:57,500 --> 00:47:00,050
重写我们这块儿封装是什么封装呢

1174
00:47:00,350 --> 00:47:01,370
他直接就是一个data

1175
00:47:01,370 --> 00:47:02,240
还有具体是什么

1176
00:47:02,820 --> 00:47:05,340
这个data上面的这个数据上面的是吧

1177
00:47:05,370 --> 00:47:06,390
就这么风刮了一下

1178
00:47:06,540 --> 00:47:10,830
因为我这个数据既然要给它是整个数据每一个K都要接听是吧

1179
00:47:11,160 --> 00:47:11,550
是不是

1180
00:47:12,860 --> 00:47:13,340
是不是

1181
00:47:16,260 --> 00:47:16,740
对

1182
00:47:17,590 --> 00:47:18,670
那么数组怎么办

1183
00:47:18,850 --> 00:47:19,870
数组也很简单

1184
00:47:20,230 --> 00:47:21,070
数组也是

1185
00:47:21,720 --> 00:47:24,300
你看我们这个样子是不是获取每个K是吧

1186
00:47:24,300 --> 00:47:25,320
我们获取每个K

1187
00:47:25,470 --> 00:47:25,980
然后做出来

1188
00:47:25,980 --> 00:47:27,090
我们看一下这个

1189
00:47:27,540 --> 00:47:28,320
运营一下这个

1190
00:47:28,710 --> 00:47:33,540
你看一下这个之后是不是这个方案是不是就这个样子获取所有的K

1191
00:47:35,620 --> 00:47:41,380
你看我们拿到L1L1.a你看是不是获取嘛

1192
00:47:41,410 --> 00:47:43,030
就这个样子的阶梯呢

1193
00:47:43,030 --> 00:47:44,470
我们来看一下数组

1194
00:47:45,710 --> 00:47:46,160
速度

1195
00:47:48,580 --> 00:47:50,290
数组也是这个样子是吧

1196
00:47:50,440 --> 00:47:51,430
同样的鉴定方法

1197
00:47:51,460 --> 00:47:52,570
数组给他之后

1198
00:47:52,750 --> 00:47:54,490
他也是这个东西拿到数值K

1199
00:47:55,290 --> 00:47:57,270
是不是也是同样的方法拿到数据的

1200
00:47:57,270 --> 00:48:03,720
比如我们用这个他也是同样的方法拿到数据的K是不是是不是拿到数组的K之后他做什么

1201
00:48:04,580 --> 00:48:04,940
对

1202
00:48:05,620 --> 00:48:07,300
也是去鉴定具体的K

1203
00:48:07,300 --> 00:48:08,170
然后去执行

1204
00:48:08,780 --> 00:48:09,770
落到这块儿就会

1205
00:48:09,860 --> 00:48:11,840
你看我们是不是在这块儿运行一下

1206
00:48:12,950 --> 00:48:14,090
我们a是吧

1207
00:48:14,540 --> 00:48:15,860
爱若玲是吧

1208
00:48:16,710 --> 00:48:18,390
给他修改一下二零

1209
00:48:18,390 --> 00:48:19,290
比如说修改成什么

1210
00:48:20,520 --> 00:48:22,590
修改一下是不是也可以触发set

1211
00:48:22,590 --> 00:48:22,950
是吧

1212
00:48:23,130 --> 00:48:23,970
也可以触发set

1213
00:48:23,970 --> 00:48:26,370
触发set是不是就监听得到是不是

1214
00:48:27,330 --> 00:48:29,040
是不是我获取

1215
00:48:29,070 --> 00:48:33,420
我获取的时候是不是也可以获取得到我获取的时候也可以获取到是不是

1216
00:48:33,540 --> 00:48:35,490
你看获取的时候是不是也可以获取得到

1217
00:48:37,880 --> 00:48:40,220
那什么情况下接听不到同学们

1218
00:48:40,300 --> 00:48:42,670
你看我们这儿是具体重写的是吗

1219
00:48:42,790 --> 00:48:44,320
重写数组的K

1220
00:48:44,740 --> 00:48:45,340
那我问你

1221
00:48:45,940 --> 00:48:49,030
没有被重写的可以可以背箭道吗

1222
00:48:49,360 --> 00:48:52,390
这个东西没有被重写的可以可以见证了吗

1223
00:48:52,630 --> 00:48:54,910
没有被重写的

1224
00:48:56,080 --> 00:48:57,910
可以可以被监听到吗

1225
00:48:58,570 --> 00:48:59,530
可以听到吗

1226
00:49:00,220 --> 00:49:02,080
如果用这个OB的地方发出去

1227
00:49:02,890 --> 00:49:03,790
没有被重写了

1228
00:49:06,600 --> 00:49:09,180
其实我一开始我比如说我一开始把对象

1229
00:49:10,430 --> 00:49:12,170
我一开始给他监听的对象是吗

1230
00:49:12,770 --> 00:49:14,660
是A1是吧

1231
00:49:14,930 --> 00:49:19,340
然后这个时候我把这个对象里边加一个属性B是不是

1232
00:49:19,920 --> 00:49:21,690
这个时候我拿去接听接听是吧

1233
00:49:22,540 --> 00:49:23,740
这个时候我给他鉴定

1234
00:49:23,890 --> 00:49:25,120
那我现在给他B

1235
00:49:25,270 --> 00:49:26,500
我问你可以见到吗

1236
00:49:26,530 --> 00:49:28,090
也听不到听不到

1237
00:49:28,330 --> 00:49:30,130
这个不只是数组的东西

1238
00:49:30,220 --> 00:49:32,140
这个是对象你都不行

1239
00:49:32,140 --> 00:49:34,150
知不知道我们这块儿执行一下这个东西

1240
00:49:34,600 --> 00:49:36,160
这个是你的对象就不行

1241
00:49:38,580 --> 00:49:40,560
L1L1钻

1242
00:49:42,210 --> 00:49:45,600
这个是我们的L一世一世

1243
00:49:45,600 --> 00:49:47,130
我们的这个数组对象是吧

1244
00:49:47,220 --> 00:49:48,060
拿到a是吧

1245
00:49:48,600 --> 00:49:51,300
然后我现在设置比如C是吧

1246
00:49:53,100 --> 00:49:53,940
会触发CD吗

1247
00:49:54,030 --> 00:49:55,110
应该没有出发的

1248
00:49:55,680 --> 00:49:56,520
也没有出来给他

1249
00:49:56,520 --> 00:49:57,210
我获取是吧

1250
00:49:57,210 --> 00:49:58,140
也没出来给他

1251
00:49:59,090 --> 00:50:02,180
这个东西是你宿主只要是新增的K

1252
00:50:02,330 --> 00:50:05,180
就是说新增的key新增的

1253
00:50:09,300 --> 00:50:11,490
新增的K都监听不到知道吧

1254
00:50:11,550 --> 00:50:12,480
都监听不到

1255
00:50:14,580 --> 00:50:15,870
都监听不到这个东西

1256
00:50:15,870 --> 00:50:16,560
你们得明白

1257
00:50:16,890 --> 00:50:18,390
这不只是对象

1258
00:50:18,390 --> 00:50:19,620
不只是入主对象也是

1259
00:50:19,620 --> 00:50:21,840
所以说你们平时会用一个什么dollars

1260
00:50:21,840 --> 00:50:24,720
我记得应该是我好久没有V了

1261
00:50:24,720 --> 00:50:28,350
V2是一个大人在她她说你用心的K的时候是用这个东西

1262
00:50:28,380 --> 00:50:29,820
是不是就是这个原因

1263
00:50:30,280 --> 00:50:30,910
就这个原因

1264
00:50:31,060 --> 00:50:32,680
因为你调单人赛的时候

1265
00:50:32,740 --> 00:50:33,700
就是掉了这个方法

1266
00:50:34,150 --> 00:50:34,990
就掉了这个方法

1267
00:50:35,020 --> 00:50:36,970
重新去做一下处理是不是

1268
00:50:38,200 --> 00:50:38,620
是不是

1269
00:50:41,250 --> 00:50:45,300
是不是为什么达人sight才能触发数字动物更新

1270
00:50:45,720 --> 00:50:47,880
因为只有单身才能鉴定到K

1271
00:50:48,090 --> 00:50:49,530
见到K才会触发什么

1272
00:50:49,680 --> 00:50:51,240
触发你整个render的过程

1273
00:50:51,780 --> 00:50:52,230
是不是

1274
00:50:54,050 --> 00:50:54,440
明白吗

1275
00:50:54,440 --> 00:50:54,950
这些同学

1276
00:50:54,980 --> 00:50:58,370
同学这块儿这块儿这块儿明不明白我就

1277
00:51:01,550 --> 00:51:03,320
是不是就这个原因

1278
00:51:04,010 --> 00:51:05,420
那现在我问题又来了

1279
00:51:06,690 --> 00:51:08,760
既然数组能够

1280
00:51:09,090 --> 00:51:11,520
你们平时是不是你们平时都是看文章

1281
00:51:11,520 --> 00:51:13,200
有没有同学说看文章的时候

1282
00:51:16,830 --> 00:51:17,340
对啊

1283
00:51:17,370 --> 00:51:18,450
必须这个过程

1284
00:51:19,130 --> 00:51:21,170
是不是你们平时看文章的时候

1285
00:51:21,170 --> 00:51:22,700
是不是说数组不能够被接听

1286
00:51:22,700 --> 00:51:23,600
数组可以被监听吗

1287
00:51:23,690 --> 00:51:24,920
数组是不是可以被监听

1288
00:51:24,980 --> 00:51:26,870
我们现在学了是不是数组可以被监听

1289
00:51:27,350 --> 00:51:28,220
是呢

1290
00:51:28,220 --> 00:51:30,380
被为什么别人说数组不能被监听

1291
00:51:30,650 --> 00:51:33,980
为什么说是他表达式数组不能被监听

1292
00:51:34,220 --> 00:51:35,120
宿主

1293
00:51:36,680 --> 00:51:37,400
不能

1294
00:51:38,540 --> 00:51:39,680
被监听

1295
00:51:41,360 --> 00:51:41,780
是

1296
00:51:41,780 --> 00:51:42,530
不能被监听

1297
00:51:42,560 --> 00:51:43,610
然后导致什么

1298
00:51:43,700 --> 00:51:44,420
要重写

1299
00:51:44,600 --> 00:51:45,710
重写速度是吧

1300
00:51:46,130 --> 00:51:47,180
重写速度是吧

1301
00:51:49,370 --> 00:51:51,140
是不是有这个过程

1302
00:51:51,290 --> 00:51:52,940
同学们是有这个过程

1303
00:51:53,180 --> 00:51:55,310
这个过程你们之前是不是学有没有

1304
00:51:55,370 --> 00:51:57,050
有没有明白这个过程

1305
00:51:57,640 --> 00:51:59,440
你们看看过这些文章有没有

1306
00:51:59,440 --> 00:52:01,930
有没有看过这种这种类型的文章

1307
00:52:02,660 --> 00:52:03,200
看过是吧

1308
00:52:03,590 --> 00:52:05,270
这个东西是有问题的

1309
00:52:05,360 --> 00:52:06,320
数组可以被监听

1310
00:52:06,500 --> 00:52:09,080
只是说数组新增的缩影不能够被监听是吧

1311
00:52:10,780 --> 00:52:11,290
是啊

1312
00:52:11,960 --> 00:52:14,240
是不是数组新增的缩影是不能被接听

1313
00:52:14,270 --> 00:52:15,890
我们这个这个同样也是

1314
00:52:16,070 --> 00:52:18,530
这东西数组新增的声音是不是也能也不能被监听

1315
00:52:19,160 --> 00:52:24,020
我们这块儿给他搞一个什么算寺是吧

1316
00:52:24,590 --> 00:52:28,340
搞个四是不是是不是也也不能被监听

1317
00:52:29,210 --> 00:52:30,470
是不是也不能被监听是不是

1318
00:52:31,670 --> 00:52:33,380
老猿题库那个

1319
00:52:33,380 --> 00:52:37,310
因为那个题库是找找找找我们班的一些学生

1320
00:52:37,700 --> 00:52:38,450
那些学生呢

1321
00:52:38,450 --> 00:52:40,130
一开始可能是比较老的学生

1322
00:52:40,130 --> 00:52:42,290
那个时候比较老的学生不是我带知道吧

1323
00:52:43,990 --> 00:52:45,160
所以说有的学生呢

1324
00:52:45,160 --> 00:52:46,630
而且很多学生的知识面

1325
00:52:47,140 --> 00:52:48,610
他是不听我的课的

1326
00:52:49,420 --> 00:52:51,070
就跟你们咱们班也有

1327
00:52:51,660 --> 00:52:52,050
知道吧

1328
00:52:52,880 --> 00:52:53,720
咱们班也有

1329
00:52:54,810 --> 00:52:56,910
咱们班现在45个学生

1330
00:52:57,520 --> 00:52:59,320
我现在把这个东西讲了是吧

1331
00:52:59,800 --> 00:53:01,330
我这我把这个东西给你们讲了

1332
00:53:02,740 --> 00:53:05,170
然后你们下来之后照样是去看文章

1333
00:53:05,920 --> 00:53:06,490
很多同学

1334
00:53:06,490 --> 00:53:07,750
应该说20个同学

1335
00:53:08,420 --> 00:53:10,910
现在最多有20个同学在在仔细听课

1336
00:53:11,360 --> 00:53:13,040
还有20多个同学就梦游了

1337
00:53:13,250 --> 00:53:14,480
他不知道我讲的是什么东西

1338
00:53:14,570 --> 00:53:16,640
然后下来之后看了文章说那个不能接听

1339
00:53:17,490 --> 00:53:18,150
他也不能见

1340
00:53:18,180 --> 00:53:19,140
他也说不能接听

1341
00:53:20,000 --> 00:53:20,480
是不是

1342
00:53:23,370 --> 00:53:28,560
那个题库那个东西是是一些一些一些一些学生做的

1343
00:53:29,130 --> 00:53:33,420
那些学生可能是那些学生就是也自己也没学明白是吧

1344
00:53:35,930 --> 00:53:36,320
对

1345
00:53:36,320 --> 00:53:37,040
就是我跟你说了

1346
00:53:37,040 --> 00:53:38,150
你还是说不会接听

1347
00:53:38,930 --> 00:53:40,730
所以说你要跟面试官怎么聊

1348
00:53:41,300 --> 00:53:44,300
你要问他数组object的方法不对

1349
00:53:44,300 --> 00:53:45,200
他怎么监听的

1350
00:53:45,230 --> 00:53:46,070
到底是怎么监听

1351
00:53:46,190 --> 00:53:47,000
他是从几K

1352
00:53:47,210 --> 00:53:48,020
那你就问他

1353
00:53:48,050 --> 00:53:49,940
你就把它引到了你的思路上来

1354
00:53:51,800 --> 00:53:52,550
你要问问

1355
00:53:52,550 --> 00:53:54,110
把它引到你的思路上来

1356
00:53:55,750 --> 00:54:00,430
是不是那既然那既然那既然那既然是重写K

1357
00:54:00,430 --> 00:54:02,710
为什么我的数组没有K吗

1358
00:54:02,710 --> 00:54:04,030
你就问他数组没有K吗

1359
00:54:05,340 --> 00:54:07,170
他会对

1360
00:54:07,170 --> 00:54:07,920
速度也OK

1361
00:54:08,550 --> 00:54:10,530
他心里也会对你产生一个敬畏

1362
00:54:10,560 --> 00:54:11,010
知道吧

1363
00:54:11,660 --> 00:54:11,900
哎哟

1364
00:54:19,160 --> 00:54:20,840
就这种知道

1365
00:54:21,950 --> 00:54:26,480
就是说有些90%的面试官这些东西都是都是这个样子

1366
00:54:27,520 --> 00:54:31,090
就是所以说前端领域的人很多很多

1367
00:54:31,150 --> 00:54:32,620
你能够往上走的原因

1368
00:54:34,220 --> 00:54:35,690
你能够往上走的原因

1369
00:54:37,820 --> 00:54:41,030
就撒于在很多知识体系不能够

1370
00:54:42,080 --> 00:54:43,430
自己去实践的过程

1371
00:54:44,000 --> 00:54:45,140
那这个实践的过程

1372
00:54:47,590 --> 00:54:49,780
就是你正在往上走的过程

1373
00:54:49,780 --> 00:54:52,750
你不能人云亦云去看别人怎么说怎么说怎么弄

1374
00:54:53,050 --> 00:54:54,010
咱们是写代码的

1375
00:54:54,220 --> 00:54:55,030
咱们不是看代码的

1376
00:54:55,030 --> 00:54:56,410
也不是听别人理论的

1377
00:54:56,410 --> 00:54:56,740
知道吧

1378
00:54:56,950 --> 00:55:00,100
所以这块儿为什么数组数组能够被接听

1379
00:55:00,100 --> 00:55:02,230
为什么数组又要需要被重写是吧

1380
00:55:02,470 --> 00:55:05,890
为什么数组可以被可以被有些东西接听

1381
00:55:05,920 --> 00:55:08,110
为什么数组要重组重写

1382
00:55:08,910 --> 00:55:10,290
这块我给大家举个例子

1383
00:55:10,770 --> 00:55:11,625
那我现在问你

1384
00:55:11,625 --> 00:55:15,210
我如果数组在这上边儿添加一个on shift

1385
00:55:15,240 --> 00:55:17,580
在数组的头部添加一个

1386
00:55:17,580 --> 00:55:18,570
比如说一灯

1387
00:55:20,400 --> 00:55:21,600
我问你现在会打印什么

1388
00:55:21,600 --> 00:55:23,310
同学们会打印什么

1389
00:55:24,210 --> 00:55:25,290
我如果执行这个东西

1390
00:55:25,350 --> 00:55:26,070
他会打印什么

1391
00:55:27,660 --> 00:55:28,560
我执行这个方法

1392
00:55:32,020 --> 00:55:32,410
一单

1393
00:55:33,710 --> 00:55:34,190
会打印什么

1394
00:55:34,190 --> 00:55:35,150
同学们看一下

1395
00:55:35,150 --> 00:55:36,560
我这里边儿是给他是吧

1396
00:55:36,800 --> 00:55:37,880
他会打印给他是吧

1397
00:55:38,540 --> 00:55:38,960
是不是

1398
00:55:40,190 --> 00:55:42,980
能背景看一下他打印了什么

1399
00:55:43,950 --> 00:55:46,710
哈哈哈哈哈哈

1400
00:55:47,010 --> 00:55:47,670
打印什么

1401
00:55:55,080 --> 00:55:56,340
打了什么这些东西

1402
00:55:57,140 --> 00:56:01,130
但是我现在只是只是往头部添加了一个一灯

1403
00:56:01,550 --> 00:56:04,130
那为什么就触发了这么多次get和set

1404
00:56:07,660 --> 00:56:08,320
为什么

1405
00:56:08,920 --> 00:56:10,000
Luo落队

1406
00:56:10,690 --> 00:56:11,470
对挪啦

1407
00:56:11,470 --> 00:56:12,190
这个就很

1408
00:56:13,340 --> 00:56:13,970
对

1409
00:56:15,050 --> 00:56:17,120
所以说这就是数组的原因就在这儿

1410
00:56:17,150 --> 00:56:17,690
知道吧

1411
00:56:18,020 --> 00:56:20,030
数组不能要重写的原因在这儿

1412
00:56:20,030 --> 00:56:21,800
什么原因看一下同学们

1413
00:56:22,420 --> 00:56:24,340
比如我现在原来的数组是三个是吧

1414
00:56:25,010 --> 00:56:26,000
现在是三个

1415
00:56:26,880 --> 00:56:28,350
比如说这是五是吧

1416
00:56:28,920 --> 00:56:29,910
这是七

1417
00:56:30,270 --> 00:56:31,140
这是酒是不是

1418
00:56:31,870 --> 00:56:33,610
我现在要往这个头部是吧

1419
00:56:34,260 --> 00:56:35,610
我现在要往这头不

1420
00:56:36,550 --> 00:56:37,270
添加是吧

1421
00:56:37,300 --> 00:56:38,380
添加内容添加

1422
00:56:38,380 --> 00:56:39,550
比如说添加个儿是不是

1423
00:56:40,090 --> 00:56:40,870
那我问大家

1424
00:56:40,990 --> 00:56:43,330
数组存储的时候存储的是什么

1425
00:56:43,720 --> 00:56:45,460
存储的是你的起始值

1426
00:56:45,490 --> 00:56:48,100
它在内存里面存储的什么起始地址

1427
00:56:48,220 --> 00:56:50,290
还有什么数组长度是不是

1428
00:56:51,600 --> 00:56:53,970
是不是起始地址和数组长度是不是

1429
00:56:55,340 --> 00:56:58,850
那这个时候我需要我的事

1430
00:56:58,850 --> 00:57:00,920
我需要往头部去添加一个内容

1431
00:57:00,920 --> 00:57:02,330
我应该怎么办

1432
00:57:03,050 --> 00:57:04,790
需要头部添加怎么内容怎么办

1433
00:57:04,880 --> 00:57:06,440
难道我在后边儿地址不变

1434
00:57:06,680 --> 00:57:08,300
去改变前面地地址

1435
00:57:08,420 --> 00:57:11,090
前面的地址内存空间去减减一部分

1436
00:57:11,270 --> 00:57:13,130
然后往这边儿肯定不是是吧

1437
00:57:13,310 --> 00:57:15,350
对把后边的数据往后挪

1438
00:57:15,930 --> 00:57:17,160
那么把后边的数据往后挪

1439
00:57:17,160 --> 00:57:19,230
就就是一个什么过程

1440
00:57:19,350 --> 00:57:20,430
就是把九

1441
00:57:21,830 --> 00:57:22,280
是吧

1442
00:57:22,310 --> 00:57:23,840
他这块儿会开辟一个新的位置

1443
00:57:23,840 --> 00:57:26,030
把灸挪到这块儿来是吧

1444
00:57:26,210 --> 00:57:27,170
把酒挪到这块儿来

1445
00:57:27,170 --> 00:57:27,860
它会触发什么

1446
00:57:27,860 --> 00:57:30,620
给它就会获取到这是第一位是吧

1447
00:57:30,620 --> 00:57:31,340
这是第一位

1448
00:57:31,370 --> 00:57:32,330
这是第二位是吧

1449
00:57:32,510 --> 00:57:34,400
就会获取到第二位的

1450
00:57:34,400 --> 00:57:36,170
你看第二位的K是吧

1451
00:57:36,260 --> 00:57:39,140
第二位的你看这get到第二位的K是吧

1452
00:57:39,440 --> 00:57:40,760
Get到第二位拿到之后

1453
00:57:40,760 --> 00:57:41,750
往这里边去吸它

1454
00:57:41,960 --> 00:57:43,220
但是往这边sight的时候

1455
00:57:43,220 --> 00:57:45,110
因为这一块儿这个K没有被监听

1456
00:57:45,110 --> 00:57:46,130
所以说不会触发set

1457
00:57:46,580 --> 00:57:46,850
是吧

1458
00:57:47,060 --> 00:57:49,550
只会触发这个这块地给他明白了吗

1459
00:57:50,570 --> 00:57:51,260
明白吗

1460
00:57:52,390 --> 00:57:53,710
这块地给出发完了之后

1461
00:57:53,710 --> 00:57:54,790
这块儿来了是吧

1462
00:57:55,450 --> 00:57:56,860
这个东西也会获取

1463
00:57:56,860 --> 00:57:59,050
获取的时候就触发第一位的这个这个位置是吧

1464
00:57:59,260 --> 00:58:00,580
第一位的这个给他

1465
00:58:00,670 --> 00:58:04,570
然后把这个给他拿到里面去或去触发设置

1466
00:58:04,600 --> 00:58:06,220
设置第二位的塞特

1467
00:58:06,430 --> 00:58:07,780
第二位set不就是什么

1468
00:58:08,310 --> 00:58:09,990
出发第二位的了是吧

1469
00:58:10,380 --> 00:58:12,240
是不是就出发第二位的了是吧

1470
00:58:13,430 --> 00:58:14,720
所以说这儿就会出来这个

1471
00:58:14,780 --> 00:58:17,690
然后这一位又又这个过程

1472
00:58:17,690 --> 00:58:20,780
这一位操作进来明白了吗

1473
00:58:20,810 --> 00:58:21,500
明白了吗

1474
00:58:22,020 --> 00:58:23,010
On safe是吧

1475
00:58:23,800 --> 00:58:25,330
那这一块儿就会有一个什么过程

1476
00:58:25,330 --> 00:58:25,720
同学们

1477
00:58:25,990 --> 00:58:27,310
这还只是on shift啊

1478
00:58:28,050 --> 00:58:29,160
是不是还有很多东西

1479
00:58:29,160 --> 00:58:30,840
比如说a还有什么

1480
00:58:31,440 --> 00:58:32,820
比如说short是吧

1481
00:58:33,500 --> 00:58:34,040
绣的

1482
00:58:35,760 --> 00:58:36,360
Receive嘛

1483
00:58:36,360 --> 00:58:39,060
这个东西是不是他也是不是也会重新挪

1484
00:58:39,060 --> 00:58:40,050
是不是也会重新挪

1485
00:58:40,050 --> 00:58:40,680
也会重新排

1486
00:58:40,860 --> 00:58:41,670
是不是他

1487
00:58:42,470 --> 00:58:42,890
是吧

1488
00:58:44,420 --> 00:58:45,230
是不是也会重新挪

1489
00:58:45,230 --> 00:58:46,340
也会重新拍是吧

1490
00:58:47,600 --> 00:58:48,080
是吧

1491
00:58:49,610 --> 00:58:51,380
所以说只要

1492
00:58:52,210 --> 00:58:57,490
是操作数字索引的东西都会造成什么多次

1493
00:58:58,060 --> 00:58:59,560
因为数组是内存

1494
00:58:59,560 --> 00:59:00,580
连续内存是吧

1495
00:59:00,790 --> 00:59:01,570
连续

1496
00:59:02,480 --> 00:59:04,220
内存多少是吧

1497
00:59:04,760 --> 00:59:07,760
所以说会造成什么修改的时候

1498
00:59:09,650 --> 00:59:10,940
数据移动是吧

1499
00:59:11,270 --> 00:59:16,310
数据移动就会造成的处理的处理就会造成频繁

1500
00:59:17,560 --> 00:59:19,150
到末频繁

1501
00:59:23,230 --> 00:59:26,050
触发给他是不是

1502
00:59:26,500 --> 00:59:28,990
是不是频繁触发给他射他

1503
00:59:29,380 --> 00:59:33,760
那么频繁触发get和set之后就会做什么就做什么

1504
00:59:34,940 --> 00:59:38,480
我们吃完get之后就坐我们前面联系了

1505
00:59:38,570 --> 00:59:40,010
就是什么

1506
00:59:40,310 --> 00:59:40,970
是不是water

1507
00:59:40,970 --> 00:59:42,830
就render这些东西是不是就来了

1508
00:59:43,360 --> 00:59:47,110
Render后边是不是就是虚拟多么多么的负修改页面

1509
00:59:47,110 --> 00:59:48,280
是不是这些东西就来了

1510
00:59:48,610 --> 00:59:50,440
就算他后边有一些优化

1511
00:59:50,680 --> 00:59:53,020
有些有些比如说有些节流的优化

1512
00:59:53,110 --> 00:59:57,220
他是不是也会也会因为你这些原因导致很多内存的浪费

1513
00:59:57,250 --> 00:59:59,590
多次的执行没有必要的意义是不是

1514
01:00:00,140 --> 01:00:00,560
是不是

1515
01:00:01,370 --> 01:00:05,360
所以说这一块儿它就会导致什么平凡的render吧

1516
01:00:05,870 --> 01:00:07,130
没必要的一些东西浪费

1517
01:00:07,250 --> 01:00:09,890
所以说这块儿就是重写数组的原因

1518
01:00:15,180 --> 01:00:15,840
明白了吗

1519
01:00:16,050 --> 01:00:17,190
这是重写数组的原因

1520
01:00:17,190 --> 01:00:19,590
同学们这会儿明白吗

1521
01:00:20,640 --> 01:00:21,300
明白了吧

1522
01:00:25,400 --> 01:00:27,950
所以说你们那么这块儿

1523
01:00:28,010 --> 01:00:29,540
所以说性能优化这些东西

1524
01:00:29,540 --> 01:00:32,870
你看这其实一聊一聊完全就这就是优化

1525
01:00:32,900 --> 01:00:34,520
这一聊一聊就完全聊到优化

1526
01:00:34,520 --> 01:00:36,320
就可以聊到rock的很多东西上面去了

1527
01:00:36,800 --> 01:00:38,090
那数组怎么重写的

1528
01:00:38,740 --> 01:00:39,490
数字怎么写的

1529
01:00:39,490 --> 01:00:40,210
怎么监听的

1530
01:00:40,880 --> 01:00:42,410
他这个observer到底是怎么鉴定的

1531
01:00:42,410 --> 01:00:43,430
来我们就看源码

1532
01:00:43,430 --> 01:00:45,470
所以说这块我们是一层一层叠近了

1533
01:00:45,470 --> 01:00:47,900
我们要看源码源码

1534
01:00:48,730 --> 01:00:51,070
看我们的源码在低位里边儿是吧

1535
01:00:51,130 --> 01:00:51,850
在第一位里边

1536
01:00:52,690 --> 01:00:54,340
你把V2就明白了

1537
01:00:54,340 --> 01:00:58,090
V3这里边我们就完全不需要浪费时间讲数组这块为三的数组

1538
01:00:58,090 --> 01:00:59,710
它这块儿照样也重写了一下

1539
01:01:00,280 --> 01:01:01,090
是吧

1540
01:01:01,090 --> 01:01:02,140
V3他就算proxy

1541
01:01:02,440 --> 01:01:06,880
只要是所有东西都会造成数组是连续内存

1542
01:01:06,880 --> 01:01:07,870
它避免不了

1543
01:01:08,420 --> 01:01:08,780
是吧

1544
01:01:08,810 --> 01:01:09,320
避免不了

1545
01:01:09,320 --> 01:01:10,190
所以说不管怎么样

1546
01:01:10,190 --> 01:01:12,200
他都会造成连续频繁移动

1547
01:01:12,230 --> 01:01:12,800
懂不懂

1548
01:01:17,140 --> 01:01:18,040
所以在这一块儿

1549
01:01:18,070 --> 01:01:19,300
我们又回到这里边儿

1550
01:01:19,660 --> 01:01:22,510
哪个里边来我们的这个observer是吧

1551
01:01:22,510 --> 01:01:23,230
Observer是做什么

1552
01:01:23,230 --> 01:01:24,130
监听数据是吧

1553
01:01:24,280 --> 01:01:24,940
监听数据

1554
01:01:25,030 --> 01:01:25,840
那他怎么监听数据

1555
01:01:25,840 --> 01:01:26,350
我们说了

1556
01:01:26,440 --> 01:01:27,820
他会有一个observer是吧

1557
01:01:27,940 --> 01:01:31,090
这个observer我们是把把数据变成什么响应式数据

1558
01:01:31,360 --> 01:01:31,960
我们也说了

1559
01:01:31,960 --> 01:01:33,040
Observer是一个什么过程

1560
01:01:33,220 --> 01:01:34,930
是一个去监听数据的过程

1561
01:01:34,930 --> 01:01:35,860
所以说你看这块儿

1562
01:01:35,890 --> 01:01:37,630
我们会把这个东西拿到什么

1563
01:01:37,810 --> 01:01:40,090
把这个数据给到我们这个欧博尔

1564
01:01:40,090 --> 01:01:41,350
这是这是你的数据

1565
01:01:41,530 --> 01:01:42,250
有个电话本

1566
01:01:42,250 --> 01:01:43,720
电话本现在你先不用管

1567
01:01:43,720 --> 01:01:44,260
你先不用管

1568
01:01:44,260 --> 01:01:45,940
你先只管电梯数据这一块儿

1569
01:01:46,790 --> 01:01:47,570
所以说你看这一步

1570
01:01:47,570 --> 01:01:50,810
它会把我们可响应的数据加一个标识

1571
01:01:50,810 --> 01:01:53,150
这是重写原型链重写原型儿这块儿

1572
01:01:53,420 --> 01:01:58,400
那么重写重写这个数组的这个数据的这个K

1573
01:01:58,430 --> 01:02:04,460
这个这个这个私有属性K表示这个数据是什么响应式数据好吧

1574
01:02:04,490 --> 01:02:07,430
然后它会判断你给进来的这个数据是否是数组

1575
01:02:07,980 --> 01:02:10,830
如果是数组去做数组里我们来看不是数组

1576
01:02:10,980 --> 01:02:12,060
如果不是数组

1577
01:02:12,360 --> 01:02:17,550
This week调用this week this week这里边儿数据拿过来获取看看了吗

1578
01:02:17,610 --> 01:02:19,380
获取到你所有的BG是吧

1579
01:02:19,530 --> 01:02:21,300
获取到你所有的K是吧

1580
01:02:21,360 --> 01:02:22,410
如果我做主是这个

1581
01:02:22,440 --> 01:02:25,860
他会就会获取了什么这一块儿是不是获取了K之后

1582
01:02:25,860 --> 01:02:27,990
同学们是不是便利K

1583
01:02:28,630 --> 01:02:30,130
便利可以不用说了吧

1584
01:02:30,250 --> 01:02:34,930
点了吧便立刻完了之后是不是a是不是就我们我们这个东西一模一样

1585
01:02:35,140 --> 01:02:35,830
有区别吗

1586
01:02:36,190 --> 01:02:37,210
这就是我们的东西

1587
01:02:37,540 --> 01:02:38,980
就是我们这里头的东西是吧

1588
01:02:39,540 --> 01:02:39,900
是不是

1589
01:02:41,410 --> 01:02:42,160
什么东西

1590
01:02:42,800 --> 01:02:44,240
是不是这种东西

1591
01:02:47,090 --> 01:02:47,570
明白吗

1592
01:02:47,600 --> 01:02:48,470
就这一套东西

1593
01:02:49,160 --> 01:02:49,790
就这一坨

1594
01:02:50,840 --> 01:02:52,880
所以说这块儿你看这块便利

1595
01:02:52,880 --> 01:02:53,720
便利完了之后

1596
01:02:53,720 --> 01:02:55,910
同学们便利完了之后

1597
01:02:56,180 --> 01:02:57,110
便利K完了之后

1598
01:02:57,110 --> 01:02:58,580
这里边儿就有一个什么过程

1599
01:02:58,610 --> 01:03:00,170
你看它会变成一个什么过程

1600
01:03:00,290 --> 01:03:00,590
A

1601
01:03:01,790 --> 01:03:04,010
relative DeFine re active在这里边儿了是吧

1602
01:03:04,660 --> 01:03:06,280
这个六这个电话儿你先不用管

1603
01:03:06,280 --> 01:03:07,450
这个电话儿你不用管

1604
01:03:07,510 --> 01:03:08,380
这是我们的数据是吧

1605
01:03:08,380 --> 01:03:10,360
这是我们数据这里边你看

1606
01:03:11,610 --> 01:03:11,910
是吧

1607
01:03:11,910 --> 01:03:15,270
这里边儿这些有一些它的兼容的一些处理

1608
01:03:15,540 --> 01:03:16,350
各种兼容的处理

1609
01:03:16,350 --> 01:03:17,880
你不用管这里边儿

1610
01:03:19,160 --> 01:03:19,700
这就完了

1611
01:03:20,000 --> 01:03:20,570
看到吗

1612
01:03:20,900 --> 01:03:21,740
这就是数据

1613
01:03:21,830 --> 01:03:22,760
这是你的数据

1614
01:03:23,000 --> 01:03:24,170
数据拿过来你的K

1615
01:03:24,200 --> 01:03:25,550
这是你具体的K是吧

1616
01:03:25,550 --> 01:03:26,390
你要监听的K

1617
01:03:26,750 --> 01:03:27,980
然后拿过来接听K

1618
01:03:28,160 --> 01:03:30,080
然后这里边你看他去做什么

1619
01:03:30,080 --> 01:03:34,850
同学们就是给他给他他就会什么触发我们的给他去获取数据

1620
01:03:34,850 --> 01:03:35,300
看见吗

1621
01:03:35,690 --> 01:03:36,830
把数据给到他

1622
01:03:37,070 --> 01:03:39,140
然后你看这里边就会有标识

1623
01:03:39,140 --> 01:03:40,460
你看这块儿有个标识

1624
01:03:40,730 --> 01:03:43,280
这个标识就会把把你这个东西

1625
01:03:44,190 --> 01:03:45,360
添加到电话本儿里边儿

1626
01:03:45,360 --> 01:03:46,500
你看这就是电话本

1627
01:03:47,150 --> 01:03:49,400
Dip就是添加电话本儿里边儿明白吗

1628
01:03:49,730 --> 01:03:51,920
这块就是添加电话本里边儿知道吧

1629
01:03:51,950 --> 01:03:53,090
这标识添加电话本

1630
01:03:53,150 --> 01:03:54,410
所以在这一步你看

1631
01:03:56,230 --> 01:03:57,850
这是添加电话本儿是不是拉通了

1632
01:03:58,030 --> 01:03:59,680
这里边儿具体怎么添加电话本儿

1633
01:03:59,680 --> 01:04:01,810
你先不用管什么时候添加电话本儿

1634
01:04:01,810 --> 01:04:02,710
我们刚刚给大家说了

1635
01:04:02,710 --> 01:04:04,930
但是与代码这一块儿你也先不用管

1636
01:04:04,930 --> 01:04:06,730
你先把这个数据监听这一块搞明白

1637
01:04:07,090 --> 01:04:08,260
东西先拿桶好不好

1638
01:04:08,470 --> 01:04:10,240
然后给他更不用说了吧

1639
01:04:10,270 --> 01:04:10,810
是吧

1640
01:04:10,810 --> 01:04:11,830
Sight不用说了吧

1641
01:04:11,830 --> 01:04:12,130
是吧

1642
01:04:12,340 --> 01:04:14,380
拿到你对应的原来的数据是吧

1643
01:04:14,650 --> 01:04:16,810
拿到你原来的数据和现在的数据对比

1644
01:04:16,840 --> 01:04:18,850
如果数据是一样的返回是吧

1645
01:04:18,850 --> 01:04:19,600
就没有话费了

1646
01:04:19,840 --> 01:04:20,800
如果数据不一样

1647
01:04:20,830 --> 01:04:21,910
那怎么办

1648
01:04:22,740 --> 01:04:23,280
怎么办

1649
01:04:23,880 --> 01:04:25,770
触发一个打电话是吧

1650
01:04:25,860 --> 01:04:28,620
打电话被通知被所有数据被修改是吧

1651
01:04:29,370 --> 01:04:29,850
是吧

1652
01:04:30,210 --> 01:04:30,780
明白了吗

1653
01:04:30,810 --> 01:04:31,080
是吧

1654
01:04:31,080 --> 01:04:31,500
同学们

1655
01:04:31,680 --> 01:04:35,400
所以说这个LV这个这个object地方party是不是就这样

1656
01:04:35,580 --> 01:04:40,440
这个observer数组那块儿我们还没还没说这块儿我们这块儿嘛

1657
01:04:40,440 --> 01:04:42,540
所以我们现在回到这块儿来看数组是吧

1658
01:04:42,570 --> 01:04:44,460
这是我们正常对象的一个走法是吧

1659
01:04:44,970 --> 01:04:46,110
正常对象的走法是吧

1660
01:04:46,200 --> 01:04:47,190
正常对象走这块儿

1661
01:04:48,080 --> 01:04:48,470
是吧

1662
01:04:48,620 --> 01:04:49,880
找对象走一块儿是吧

1663
01:04:50,560 --> 01:04:51,760
咱们再来看数组

1664
01:04:52,660 --> 01:04:53,500
如果是数组

1665
01:04:53,950 --> 01:04:55,120
如果是数组怎么办

1666
01:04:55,840 --> 01:04:59,110
他会去你看判断是否是宿主是吧

1667
01:04:59,170 --> 01:05:01,120
是否是主是否是数组

1668
01:05:01,120 --> 01:05:01,840
如果是数组

1669
01:05:01,870 --> 01:05:03,040
它会重写一下原型链

1670
01:05:03,040 --> 01:05:05,530
你看这块就重写一下这个原型

1671
01:05:05,530 --> 01:05:07,060
他这块儿会有一个不同的方式

1672
01:05:07,360 --> 01:05:08,620
所以说有一个兼容的处理

1673
01:05:08,620 --> 01:05:09,970
这块儿先不用也不用管它

1674
01:05:10,300 --> 01:05:11,350
它会重写一个圆形儿

1675
01:05:11,350 --> 01:05:12,670
你看我们重写原型链

1676
01:05:12,670 --> 01:05:14,770
你看拿到我们这个数组的原型链

1677
01:05:14,830 --> 01:05:16,840
这是你住数组本身的这个原型链

1678
01:05:17,320 --> 01:05:18,160
然后来重写

1679
01:05:18,370 --> 01:05:22,990
所以你看我们这一步会拿到你这个数组本身重写它的原型儿

1680
01:05:23,170 --> 01:05:24,340
是不是重写它的原型

1681
01:05:24,520 --> 01:05:25,840
这个同心圆系列是什么意思呢

1682
01:05:25,840 --> 01:05:26,170
同学们

1683
01:05:27,090 --> 01:05:28,800
今天这个就不用了吧

1684
01:05:28,800 --> 01:05:29,880
这就不用说了吧

1685
01:05:31,370 --> 01:05:31,970
宿主

1686
01:05:44,320 --> 01:05:45,010
不能说了吧

1687
01:05:45,040 --> 01:05:46,600
这是它的原型对象是不是

1688
01:05:46,900 --> 01:05:48,130
是不是就是它的原型对象

1689
01:05:48,790 --> 01:05:51,220
是不是就是他最根本的数组的方法

1690
01:05:51,220 --> 01:05:54,580
是不是都在这里边说这一步它会重写这个东西怎么重写

1691
01:05:54,580 --> 01:05:55,180
我们来看

1692
01:05:56,440 --> 01:05:58,090
重写重写重写这个东西

1693
01:05:58,300 --> 01:06:00,760
重写就是你看直接把这个东西写的对象

1694
01:06:00,820 --> 01:06:03,160
所以我们要看它的原型对象怎么被重写了

1695
01:06:03,310 --> 01:06:04,660
这是她被重写的原型对象

1696
01:06:04,810 --> 01:06:05,980
主要改的是重写数组

1697
01:06:05,980 --> 01:06:07,030
就是改的原型对象

1698
01:06:07,570 --> 01:06:10,210
首先我们拿到它整个的什么数组的

1699
01:06:10,820 --> 01:06:11,630
原型对象是吧

1700
01:06:11,840 --> 01:06:14,360
原型定向原型对象就是你剩整个数组的什么

1701
01:06:14,630 --> 01:06:16,040
最初始的这个对象是吧

1702
01:06:16,340 --> 01:06:21,590
最初始的对象就这个东西是最初始的速度的对象是吧

1703
01:06:22,610 --> 01:06:24,830
是不是是不是最初始的原型对象

1704
01:06:24,860 --> 01:06:26,510
然后拿这个最初的原型对象之后

1705
01:06:26,510 --> 01:06:28,130
基于这个原型对象构建一个是吗

1706
01:06:28,650 --> 01:06:29,910
构建一个新的对象是吧

1707
01:06:29,970 --> 01:06:30,810
构建一个新的对象

1708
01:06:30,900 --> 01:06:33,120
这个有没有构建一个新的对象

1709
01:06:35,880 --> 01:06:36,330
是不是

1710
01:06:40,300 --> 01:06:41,260
这个不用说吧

1711
01:06:41,440 --> 01:06:43,330
你看就够一个原型对象

1712
01:06:43,750 --> 01:06:45,520
然后在这一步构建完了之后

1713
01:06:45,880 --> 01:06:46,390
他这块儿

1714
01:06:46,970 --> 01:06:49,940
就要去判断哪些数组会被需要被重写

1715
01:06:49,970 --> 01:06:52,550
哪些数组需要被同学不写

1716
01:06:52,550 --> 01:06:56,420
是不是会就是会改变数组索引的东西是不是都需要被重写

1717
01:06:56,690 --> 01:06:58,970
这些东西是不是都会改变数组索引是吧

1718
01:06:59,920 --> 01:07:03,310
是不是所以说改变数字索引的东西他都需要被重写

1719
01:07:03,520 --> 01:07:04,180
那怎么重写

1720
01:07:05,610 --> 01:07:06,690
他会便秘

1721
01:07:07,320 --> 01:07:09,210
我这个所有的K是不是便利

1722
01:07:09,210 --> 01:07:11,370
我这个所有的哪些数组是要被重写

1723
01:07:11,430 --> 01:07:12,720
哪些方法被重写

1724
01:07:12,930 --> 01:07:14,610
这个方法然后拿过来之后

1725
01:07:15,200 --> 01:07:16,160
去辨别我这个K

1726
01:07:16,190 --> 01:07:17,270
便利我这个K之后

1727
01:07:17,480 --> 01:07:18,680
我是不是要获取数组

1728
01:07:18,680 --> 01:07:19,640
如果要发生修改

1729
01:07:19,640 --> 01:07:22,370
我是不是需要让数组本身发生修改

1730
01:07:22,430 --> 01:07:24,590
我就需要去调查数组本身的方法

1731
01:07:25,160 --> 01:07:26,630
所以我这拿到K拿到什么

1732
01:07:26,660 --> 01:07:27,710
拿到这个谱系

1733
01:07:27,710 --> 01:07:28,400
你看我这个铺

1734
01:07:28,490 --> 01:07:29,900
比如说我这个master拿到什么

1735
01:07:29,960 --> 01:07:31,040
就是我这个谱系是吧

1736
01:07:31,280 --> 01:07:32,840
然后我在原型对象上

1737
01:07:32,870 --> 01:07:36,110
这个原型对象上去拿到我最原始的这个方法是吧

1738
01:07:36,170 --> 01:07:38,120
圆形的这个破十破十方法是吧

1739
01:07:38,780 --> 01:07:40,640
是不是最充实的剖析方法

1740
01:07:40,760 --> 01:07:43,640
就是拿到我最原原始的这个谱系方法

1741
01:07:44,290 --> 01:07:45,190
拿到这个复习方法

1742
01:07:45,190 --> 01:07:46,210
然后在这保留下来

1743
01:07:46,450 --> 01:07:47,410
保留下来之后

1744
01:07:47,410 --> 01:07:48,250
然后同学们怎么办

1745
01:07:48,580 --> 01:07:56,560
重写重写我这个方法这块是重写重写你看重写这个是重写我这个数组原型对象上面的剖析方法看见了吗

1746
01:07:57,160 --> 01:07:58,660
把这个MR了拿进来重写

1747
01:07:58,720 --> 01:07:59,320
这是一个什么

1748
01:07:59,350 --> 01:07:59,800
这是我

1749
01:08:00,130 --> 01:08:02,470
这是我们刚刚那个构建出来的新对象是吧

1750
01:08:02,860 --> 01:08:06,280
然后这个你看重写这是我们具体的方法是吧

1751
01:08:06,460 --> 01:08:08,380
然后这是我们重写方法的值

1752
01:08:08,380 --> 01:08:10,720
是不是就是重写了这个方法看见了吗

1753
01:08:10,840 --> 01:08:14,200
重写了这个这个这个对象的这个剖析的方法

1754
01:08:14,200 --> 01:08:15,940
是不是他重写了这个方法

1755
01:08:15,970 --> 01:08:16,930
怎么重写的同学

1756
01:08:17,990 --> 01:08:21,290
重写的内容就相当于你之后吊铺写调的是什么

1757
01:08:21,470 --> 01:08:23,180
调的就是这个内容是不是掉的

1758
01:08:23,180 --> 01:08:24,650
就是这个内容是不是掉了

1759
01:08:24,650 --> 01:08:27,170
你之后的数组掉了是不是就是这个内容

1760
01:08:27,170 --> 01:08:29,750
你接听之后的数组调的内容是不是全是这个内容了

1761
01:08:30,020 --> 01:08:31,700
复习方法是掉了这个方法了

1762
01:08:31,880 --> 01:08:32,540
那怎么调的

1763
01:08:32,780 --> 01:08:34,490
首先第一点拿到你的原形了

1764
01:08:34,610 --> 01:08:36,050
你拿到了他的原始方法是吧

1765
01:08:36,200 --> 01:08:37,940
这个原始方法拿到原始方法

1766
01:08:38,000 --> 01:08:39,200
既然我们要族谱写

1767
01:08:39,200 --> 01:08:40,340
我原来是这个样子是吧

1768
01:08:40,770 --> 01:08:42,180
原来是这个数是这个样子

1769
01:08:42,300 --> 01:08:43,500
我现在普及了这个

1770
01:08:43,680 --> 01:08:45,090
那我是不是返回值应该这个

1771
01:08:45,180 --> 01:08:46,830
那这个过程一定是通过谁来做

1772
01:08:46,980 --> 01:08:49,680
一定是通过数组最原始的方法来做

1773
01:08:49,680 --> 01:08:52,110
所以说我们要执行它最原始的这个方法是吧

1774
01:08:52,320 --> 01:08:54,210
把它你拿到这个参数拿进来

1775
01:08:54,420 --> 01:08:55,020
然后执行

1776
01:08:55,140 --> 01:08:58,290
是不是就是说返回就是这个这一步明白

1777
01:08:58,680 --> 01:09:00,660
宿主重写这一步能明白吧

1778
01:09:00,990 --> 01:09:02,430
所以说这一步拿到之后

1779
01:09:02,580 --> 01:09:03,720
然后会拿到什么

1780
01:09:03,930 --> 01:09:07,290
我们当前这个当前这个数据的observer对象

1781
01:09:07,320 --> 01:09:08,730
就是我当前这个observer

1782
01:09:09,060 --> 01:09:11,760
当前这个维护我这个数据的observer对象

1783
01:09:12,120 --> 01:09:12,810
我们这个东西吗

1784
01:09:13,110 --> 01:09:13,440
对吧

1785
01:09:13,620 --> 01:09:16,620
当前维护我这个数据这个整个的这个实力

1786
01:09:16,620 --> 01:09:18,750
我找我对象拿了东西之后

1787
01:09:18,810 --> 01:09:21,300
同学们这一步这块儿拿了之后

1788
01:09:21,510 --> 01:09:22,440
他会判断什么

1789
01:09:22,470 --> 01:09:24,180
判断你的方法什么方法

1790
01:09:25,470 --> 01:09:26,190
有新的

1791
01:09:26,190 --> 01:09:30,840
有些方法是不是会有新的来源是什么意思

1792
01:09:31,110 --> 01:09:34,980
就是说我向pushy he on shift s ines这些方法

1793
01:09:35,340 --> 01:09:37,020
他是不是会插入新的值

1794
01:09:37,290 --> 01:09:39,060
是不是会给数组插入新的值

1795
01:09:39,270 --> 01:09:42,510
是不是是不是是不是会给数组插入新的值

1796
01:09:43,730 --> 01:09:44,750
速度插入新的值

1797
01:09:44,750 --> 01:09:46,670
如果插入的是对象是不是

1798
01:09:46,940 --> 01:09:48,860
如果插入的是对象吧

1799
01:09:48,860 --> 01:09:50,120
如果插入的这种对象

1800
01:09:50,830 --> 01:09:51,760
我是不是这个对象

1801
01:09:51,760 --> 01:09:52,990
我一我这个对象

1802
01:09:54,130 --> 01:09:55,570
我的数组是不是变成了什么

1803
01:09:55,840 --> 01:09:57,400
我的数字是变成了这个样子是吧

1804
01:09:57,400 --> 01:09:58,960
咱们是变成这个样子

1805
01:09:58,990 --> 01:09:59,650
这是我的对象

1806
01:09:59,770 --> 01:10:00,235
那我问你

1807
01:10:00,235 --> 01:10:03,730
我这个对象是不是也应该被变变成可监听的对象

1808
01:10:03,820 --> 01:10:06,370
因为你在访问的时候访问什么error

1809
01:10:06,900 --> 01:10:08,310
六点儿什么

1810
01:10:08,370 --> 01:10:09,570
这个是你这个样子

1811
01:10:09,570 --> 01:10:10,350
我是虚

1812
01:10:10,440 --> 01:10:12,660
这个对象是不是也需要变成可见的对象

1813
01:10:13,110 --> 01:10:13,950
这不明白吗

1814
01:10:15,770 --> 01:10:18,620
是我这个K这个a是不是也要变成可监听的

1815
01:10:18,860 --> 01:10:20,690
不然别人再用这个a的时候

1816
01:10:20,720 --> 01:10:23,600
完全就接听不到你的这个更改是吧

1817
01:10:23,720 --> 01:10:25,970
所以我这个a是不是要变成变成可见

1818
01:10:26,030 --> 01:10:27,020
那变成可见的

1819
01:10:27,050 --> 01:10:28,280
但是我现在就应该怎么办

1820
01:10:28,430 --> 01:10:30,710
应该拦截到你具体

1821
01:10:31,220 --> 01:10:32,000
插入的是什么

1822
01:10:32,000 --> 01:10:34,700
就比如我现在是135135我现在要普及

1823
01:10:34,700 --> 01:10:36,020
普及完了之后普及的是吗

1824
01:10:36,640 --> 01:10:38,560
我叫复习的内容是这个是吧

1825
01:10:38,740 --> 01:10:40,030
但是这个内容我应该怎么办

1826
01:10:40,090 --> 01:10:41,410
我在访问这个内容的时候

1827
01:10:41,410 --> 01:10:45,130
现在我就是我的a to Xi之后我要访问就放这个K是吧

1828
01:10:45,250 --> 01:10:46,270
我访问这个的时候

1829
01:10:46,360 --> 01:10:49,210
我需要把它变成一个什么可监听的事吧

1830
01:10:49,330 --> 01:10:50,380
我的视图里边

1831
01:10:50,380 --> 01:10:51,520
如果访问这个数据的时候

1832
01:10:51,640 --> 01:10:52,330
我需要处罚

1833
01:10:52,360 --> 01:10:53,440
处罚我的gate是吧

1834
01:10:53,950 --> 01:10:57,010
我修改这个东西的时候也需要处什么处罚我的ST是不是

1835
01:10:57,220 --> 01:10:57,760
是不是

1836
01:10:58,000 --> 01:10:59,740
是不是去修改页面是不是

1837
01:10:59,890 --> 01:11:01,840
所以说这一步他需要变成可见的

1838
01:11:01,900 --> 01:11:03,010
那他怎么变成可见的

1839
01:11:03,250 --> 01:11:04,330
我先把它记录下来

1840
01:11:04,420 --> 01:11:05,920
这个应设置的对象记录下来

1841
01:11:06,190 --> 01:11:07,090
记录下来之后

1842
01:11:07,180 --> 01:11:10,270
如果我这一步有可监听的数据

1843
01:11:11,400 --> 01:11:12,150
重新调用

1844
01:11:13,040 --> 01:11:13,490
可以吗

1845
01:11:13,550 --> 01:11:16,730
我重新调用我这个东西的opera可以吗

1846
01:11:17,670 --> 01:11:19,560
是不是重新调用我这个里边

1847
01:11:19,710 --> 01:11:20,250
看了吗

1848
01:11:20,900 --> 01:11:23,900
这是我我的observer点这个东西重新调用

1849
01:11:24,080 --> 01:11:25,250
调用这个observer

1850
01:11:25,610 --> 01:11:26,510
这是我们的L码

1851
01:11:26,510 --> 01:11:28,340
重新用这个方法可以吗

1852
01:11:28,520 --> 01:11:31,220
便利你所有的插入的选项是吧

1853
01:11:31,310 --> 01:11:32,420
插入你所有的选项

1854
01:11:32,420 --> 01:11:33,800
因为我们拿到这个数组吗

1855
01:11:33,830 --> 01:11:34,100
是吧

1856
01:11:34,160 --> 01:11:39,680
这个insert a拿到这个参数是不是数组这个参数是不是参数参数化数组是吧

1857
01:11:40,270 --> 01:11:40,750
是吧

1858
01:11:40,930 --> 01:11:42,880
所以说这块儿拿到遍历所有的参数

1859
01:11:42,910 --> 01:11:44,980
插入的象插入相之后

1860
01:11:44,980 --> 01:11:45,550
然后便利

1861
01:11:46,190 --> 01:11:47,750
是不是变完了之后

1862
01:11:47,780 --> 01:11:49,100
每一项又重新走

1863
01:11:49,100 --> 01:11:50,090
我们这个递归的方法

1864
01:11:50,360 --> 01:11:51,620
看到每项又重新走

1865
01:11:51,620 --> 01:11:52,520
我们这个递归的方法

1866
01:11:55,250 --> 01:11:56,600
不知道是不是这一步

1867
01:11:56,630 --> 01:12:00,470
这一步在一块儿是不是就找不到明白了吗

1868
01:12:03,260 --> 01:12:05,900
那这块儿那块儿我修改了数组是吧

1869
01:12:05,930 --> 01:12:07,280
我现在修改了数组

1870
01:12:07,490 --> 01:12:09,590
修改数组我们只应该应该做什么

1871
01:12:10,010 --> 01:12:11,210
不应该只是

1872
01:12:12,060 --> 01:12:13,230
我们修改数字之后

1873
01:12:13,230 --> 01:12:14,820
最最终要做的是什么

1874
01:12:15,210 --> 01:12:16,410
最重要处罚的是什么

1875
01:12:17,510 --> 01:12:18,290
最终要出发的事

1876
01:12:18,290 --> 01:12:19,880
让他重新去render是不是

1877
01:12:20,240 --> 01:12:21,980
是不是修改完一个数据之后

1878
01:12:21,980 --> 01:12:23,420
最终要让他重新render

1879
01:12:23,510 --> 01:12:24,800
那怎么重新扔的同学们

1880
01:12:26,410 --> 01:12:26,950
Sight的

1881
01:12:26,950 --> 01:12:28,180
这是怎么认得的

1882
01:12:28,330 --> 01:12:29,770
打电话是吧是吧

1883
01:12:29,800 --> 01:12:30,130
打电话

1884
01:12:30,190 --> 01:12:31,630
那我重写方法的时候

1885
01:12:31,660 --> 01:12:33,280
我这儿直接让他打电话不就行了吗

1886
01:12:34,000 --> 01:12:34,390
是吧

1887
01:12:34,480 --> 01:12:35,980
我直接让他打电话不就行吗

1888
01:12:36,190 --> 01:12:40,180
直接去打给我这个数组监听的上面去重新打电话不就行了吗

1889
01:12:40,300 --> 01:12:42,280
所以说这块儿打电话了吗

1890
01:12:42,580 --> 01:12:44,680
这个楼盘打电话懂了吗

1891
01:12:44,680 --> 01:12:47,140
同学数组就是这么抽血的

1892
01:12:48,470 --> 01:12:50,780
明不明白自己就是这么写的

1893
01:12:53,450 --> 01:12:54,140
同学

1894
01:12:58,380 --> 01:12:58,980
明白啊

1895
01:12:59,190 --> 01:13:00,030
我们继续了

1896
01:13:01,090 --> 01:13:06,010
好速速这块observer observer这块我们继续OB的地方吧

1897
01:13:06,860 --> 01:13:09,050
这个我们说了它的作用是吧

1898
01:13:09,870 --> 01:13:11,310
然后这个water

1899
01:13:12,430 --> 01:13:14,740
订阅abra abra这块是吧

1900
01:13:15,790 --> 01:13:16,240
饿不着

1901
01:13:16,240 --> 01:13:17,470
而我们往这里边儿

1902
01:13:19,540 --> 01:13:20,440
我们来看一下这个

1903
01:13:22,360 --> 01:13:23,470
这是我们的打电话是吧

1904
01:13:23,740 --> 01:13:25,810
我们来看一下打电话的过程是怎么实现的是吧

1905
01:13:26,200 --> 01:13:28,270
那么你们说打电话的过程怎么实现的

1906
01:13:28,950 --> 01:13:30,270
打电话的过程是怎么实现的

1907
01:13:32,080 --> 01:13:34,540
打电话的过程给大家看我们这个简版的意思

1908
01:13:35,370 --> 01:13:36,000
看这个

1909
01:13:36,270 --> 01:13:37,650
看这个简单简单的例子

1910
01:13:38,400 --> 01:13:40,410
看看一下这个打电话的过程怎么实现的

1911
01:13:41,770 --> 01:13:42,280
你看

1912
01:13:42,280 --> 01:13:43,360
我这是一个地铺

1913
01:13:43,600 --> 01:13:44,980
我这是个电话本是不是

1914
01:13:44,980 --> 01:13:46,120
我这是不是个电话本儿

1915
01:13:46,210 --> 01:13:47,890
是同学这是个电话本

1916
01:13:48,010 --> 01:13:49,570
我的电话本上面有两个方法

1917
01:13:51,010 --> 01:13:52,300
第一个方法是什么

1918
01:13:52,330 --> 01:13:53,530
就是一个数组是吧

1919
01:13:53,620 --> 01:13:55,210
我的电话本就是个数组

1920
01:13:55,510 --> 01:13:56,380
那么怎么过程

1921
01:13:56,770 --> 01:13:58,450
我往这里边去添加

1922
01:13:58,450 --> 01:13:58,810
是吧

1923
01:13:58,990 --> 01:14:00,700
往这个数组里面去添加是吧

1924
01:14:02,080 --> 01:14:02,620
看到吗

1925
01:14:04,410 --> 01:14:06,030
往这个数组里面去添加

1926
01:14:06,300 --> 01:14:07,350
添加我这个什么

1927
01:14:08,870 --> 01:14:10,340
添加我这所有的什么

1928
01:14:10,790 --> 01:14:12,110
添加我所有的是吧

1929
01:14:12,760 --> 01:14:13,330
看见了吗

1930
01:14:13,600 --> 01:14:16,810
就是你具体什么是什么电话

1931
01:14:17,020 --> 01:14:19,060
我我这个数组里面去添加

1932
01:14:19,420 --> 01:14:20,320
添加完了之后

1933
01:14:21,230 --> 01:14:22,550
通知怎么通知我

1934
01:14:22,550 --> 01:14:23,810
便利我这个数字

1935
01:14:23,870 --> 01:14:25,430
便利我这个数组打电话

1936
01:14:25,760 --> 01:14:28,070
调用water上面打电话的功能是吧

1937
01:14:28,130 --> 01:14:29,330
Update a是吧

1938
01:14:29,690 --> 01:14:32,240
通知的功能就这个过程明白吗

1939
01:14:32,270 --> 01:14:32,870
这就是

1940
01:14:33,890 --> 01:14:35,990
怎么订阅发布的过过程

1941
01:14:36,660 --> 01:14:37,230
没有啊

1942
01:14:38,400 --> 01:14:39,720
我们在这儿再串一下

1943
01:14:39,750 --> 01:14:41,190
是不是就就明白了

1944
01:14:42,050 --> 01:14:42,950
在这儿再看一下

1945
01:14:42,950 --> 01:14:44,690
是不是就明白了他是一个什么过程

1946
01:14:48,240 --> 01:14:49,890
维护订阅怎么维护订阅

1947
01:14:50,610 --> 01:14:52,500
这个K上面维护了一个什么

1948
01:14:52,560 --> 01:14:54,210
维护了一套DF是吧

1949
01:14:54,360 --> 01:14:56,970
这个地方上面有个什么什么

1950
01:14:56,970 --> 01:14:57,960
这个地方有什么

1951
01:14:58,980 --> 01:15:01,200
这个每个K上面是有一个的

1952
01:15:01,200 --> 01:15:02,760
上面有什么所有的电话

1953
01:15:02,760 --> 01:15:04,170
所有的电话是吧

1954
01:15:04,820 --> 01:15:06,320
是不是你打电话就是什么

1955
01:15:06,350 --> 01:15:07,220
就是个数组是吧

1956
01:15:07,990 --> 01:15:09,160
所以我们在这一步

1957
01:15:09,160 --> 01:15:10,810
你看我在L这块儿

1958
01:15:11,720 --> 01:15:15,110
是不是对这个打电话的用不到的时候

1959
01:15:15,440 --> 01:15:15,830
你看

1960
01:15:17,510 --> 01:15:18,980
我们这个APP上面

1961
01:15:18,980 --> 01:15:20,510
这是不是就一个SR deep

1962
01:15:20,570 --> 01:15:21,950
你每一次掉一个a的时候

1963
01:15:21,950 --> 01:15:23,120
它是不是就一个deep

1964
01:15:23,360 --> 01:15:26,210
是不是是不是是不是有个电话本

1965
01:15:26,690 --> 01:15:28,040
是不是同学呢

1966
01:15:28,040 --> 01:15:28,940
我们在这一步的时候

1967
01:15:28,940 --> 01:15:32,060
他是不是又还还又还会维护每一个K的电话本儿是吧

1968
01:15:32,300 --> 01:15:35,870
你看这一步的时候会维护每一个K的电话本明白吗

1969
01:15:36,170 --> 01:15:37,010
就是每一个K

1970
01:15:37,450 --> 01:15:40,630
我们这是这是这是不是就相当于每一个K电话本儿了是吧

1971
01:15:41,440 --> 01:15:41,950
是吧

1972
01:15:43,020 --> 01:15:43,920
所以这一步

1973
01:15:43,950 --> 01:15:45,240
这一步是不是打电话的功能

1974
01:15:45,360 --> 01:15:47,490
所以说这块儿我们再来给大家穿一下

1975
01:15:47,760 --> 01:15:49,410
再来看一下这个维度

1976
01:15:49,440 --> 01:15:50,070
再来看一下

1977
01:15:50,070 --> 01:15:53,850
我们这现在最主要核心的维度就是把water和这块儿串起来了

1978
01:15:54,240 --> 01:15:55,620
把water和这块儿串起来

1979
01:15:58,190 --> 01:15:59,330
Water是怎么串起来的

1980
01:15:59,360 --> 01:16:00,590
同学们给大家

1981
01:16:04,980 --> 01:16:08,970
给大家看一个我们的这个render

1982
01:16:09,060 --> 01:16:09,870
他是render

1983
01:16:12,300 --> 01:16:12,780
卧槽

1984
01:16:13,260 --> 01:16:14,220
我们到这里边儿

1985
01:16:14,220 --> 01:16:15,990
它会执行我

1986
01:16:18,200 --> 01:16:18,980
Instance

1987
01:16:21,700 --> 01:16:22,510
说实话

1988
01:16:23,290 --> 01:16:25,750
一塔一塔

1989
01:16:30,070 --> 01:16:32,380
我想我想一下怎么给大家讲这块儿

1990
01:16:35,950 --> 01:16:37,330
执行render

1991
01:16:39,020 --> 01:16:39,980
自信mountain

1992
01:16:41,730 --> 01:16:42,570
执行mount

1993
01:16:50,310 --> 01:16:53,280
私信蒙特

1994
01:16:53,280 --> 01:16:55,200
等一下他们我看一下怎么给大家讲

1995
01:16:56,760 --> 01:17:00,120
这块儿稍微把这块儿给大家讲透一点点

1996
01:17:02,150 --> 01:17:02,930
Opera

1997
01:17:04,250 --> 01:17:05,000
嗯

1998
01:17:11,340 --> 01:17:11,970
先这么讲吧

1999
01:17:11,970 --> 01:17:13,290
先用这个简版的给他讲

2000
01:17:13,350 --> 01:17:14,100
简单讲了之后

2001
01:17:14,100 --> 01:17:15,900
然后再看这个复杂的就很简单

2002
01:17:15,960 --> 01:17:17,910
我们用捡来捡了

2003
01:17:17,910 --> 01:17:20,190
把这个water到这个绑定的过程

2004
01:17:20,340 --> 01:17:20,670
明白

2005
01:17:20,670 --> 01:17:21,540
主要是绑定这块儿

2006
01:17:21,540 --> 01:17:22,140
绑定的过程

2007
01:17:22,140 --> 01:17:24,120
虽然我给大家用那个什么

2008
01:17:24,150 --> 01:17:25,860
用那个笔记给大家演示了一下是不是

2009
01:17:26,440 --> 01:17:27,700
用这个很简单的这个笔记

2010
01:17:27,700 --> 01:17:28,630
是不是给大家说明一下

2011
01:17:28,630 --> 01:17:30,610
就是怎么去绑定维护这个关系

2012
01:17:30,820 --> 01:17:32,500
但是对于很多同学来说

2013
01:17:32,500 --> 01:17:33,490
没有看到真实的代码

2014
01:17:33,490 --> 01:17:34,690
其实还是有点恼火的

2015
01:17:34,720 --> 01:17:36,250
所以说我们通过什么

2016
01:17:36,280 --> 01:17:38,650
通过一个简版来给大家讲一下

2017
01:17:41,660 --> 01:17:43,310
我们实现了一个简版的V

2018
01:17:47,340 --> 01:17:48,450
我们一步一步带着

2019
01:17:48,540 --> 01:17:50,340
咱们并不是说讲了简版

2020
01:17:50,520 --> 01:17:59,490
简版的原因只是为了把让你把这块儿拉通拉拉通之后我们再讲那个你就很清楚了所以这一步你看我们这一步是吧

2021
01:17:59,640 --> 01:18:01,260
就是双向数据绑定简版是吧

2022
01:18:01,290 --> 01:18:03,000
简版简版这块儿

2023
01:18:03,030 --> 01:18:06,660
我们这块儿给大家看一下我们代码实现这块儿这是我们的事吧

2024
01:18:06,840 --> 01:18:07,560
HTML是吧

2025
01:18:07,950 --> 01:18:09,570
这是我们的HTML

2026
01:18:09,630 --> 01:18:11,010
各种不同的HTML

2027
01:18:11,010 --> 01:18:12,330
我们的VIP是吧

2028
01:18:12,330 --> 01:18:14,040
V1然后这里边我们六一个V是吧

2029
01:18:14,040 --> 01:18:16,980
我们六一个V6了V之后了we之后

2030
01:18:16,980 --> 01:18:18,510
我们这一块儿是个hello word是吧

2031
01:18:18,570 --> 01:18:22,560
然后我们遍历一下这个爱就不停去修改我这个text是吧

2032
01:18:22,740 --> 01:18:24,150
最后给他改成99

2033
01:18:24,150 --> 01:18:26,280
所以说我们在这一步展示的也是99是吧

2034
01:18:26,640 --> 01:18:27,750
展示的也是99是吧

2035
01:18:28,320 --> 01:18:30,600
那么在中间他会有一个批处理的过程

2036
01:18:30,600 --> 01:18:31,350
我们会给大家

2037
01:18:31,350 --> 01:18:34,290
就是唯一的性能优化批处理的过程

2038
01:18:34,320 --> 01:18:35,010
我们会给大家

2039
01:18:35,370 --> 01:18:39,060
那么这一步这一步we这一步需要聊的是什么

2040
01:18:39,090 --> 01:18:40,380
需要聊的就是他这个什么

2041
01:18:41,420 --> 01:18:44,240
那个那个那个那个那个

2042
01:18:44,780 --> 01:18:47,240
我们怎么去实例化构建的过程是吧

2043
01:18:47,540 --> 01:18:50,300
那么这一步你看我们实现的时候很简单

2044
01:18:50,300 --> 01:18:51,380
就是我们的模板是吧

2045
01:18:51,410 --> 01:18:53,120
模板我们拿到这里边来

2046
01:18:53,900 --> 01:18:55,970
当然我们没有写自己的编译这一套

2047
01:18:56,150 --> 01:18:57,410
我们首先index是吧

2048
01:18:57,440 --> 01:18:59,240
这里边会去初始化什么

2049
01:19:01,220 --> 01:19:02,300
这是我的index

2050
01:19:02,360 --> 01:19:03,560
Index应该是没有的

2051
01:19:04,260 --> 01:19:05,640
应该是在MVM

2052
01:19:05,670 --> 01:19:07,890
你看刘威是吧

2053
01:19:07,950 --> 01:19:08,850
你在刘威的时候

2054
01:19:08,850 --> 01:19:10,620
我们是不是留了一个V1 V1的时候

2055
01:19:10,620 --> 01:19:12,750
你看这是我们传传传进来的参数是吧

2056
01:19:12,810 --> 01:19:15,330
进来的时候我们的就是我们要挂载的动是吧

2057
01:19:15,480 --> 01:19:17,100
还有这个是我们的什么数据是吧

2058
01:19:17,700 --> 01:19:19,260
然后这一块儿拿到我们具体什么

2059
01:19:19,260 --> 01:19:20,640
拿到我们队的带塔是吧

2060
01:19:20,640 --> 01:19:21,570
这是我们的卡是吧

2061
01:19:21,870 --> 01:19:22,770
这是我们的塔

2062
01:19:23,130 --> 01:19:24,060
然后又拿了什么

2063
01:19:24,120 --> 01:19:25,080
我们对他们的什么

2064
01:19:25,950 --> 01:19:26,910
具体的data是吧

2065
01:19:26,940 --> 01:19:27,990
获取具体的data

2066
01:19:28,050 --> 01:19:30,270
然后把data拿过去做一个监听

2067
01:19:30,360 --> 01:19:33,360
到莫把这个does he data给到a是吧

2068
01:19:33,360 --> 01:19:33,960
做一个监听

2069
01:19:34,580 --> 01:19:36,500
这个October就只有什么过程

2070
01:19:36,500 --> 01:19:36,800
同学们

2071
01:19:36,830 --> 01:19:40,130
就是我们之前给大家看的这个初始化一个电话本儿是吧

2072
01:19:40,430 --> 01:19:42,230
就是我们刚刚给大家看的这个过程是吧

2073
01:19:42,470 --> 01:19:43,550
初始化一个电话本

2074
01:19:43,640 --> 01:19:44,630
然后去做一个什么

2075
01:19:45,320 --> 01:19:46,310
Get和set是吧

2076
01:19:46,460 --> 01:19:47,240
监听这个数据

2077
01:19:47,330 --> 01:19:48,830
但是监听这个数据之后

2078
01:19:48,950 --> 01:19:50,600
它这个数据现在并不会使用

2079
01:19:50,600 --> 01:19:50,870
是不是

2080
01:19:51,050 --> 01:19:53,930
它这个数据是不是并不会马上触发get和set a

2081
01:19:54,290 --> 01:19:55,430
那什么时候出发给他

2082
01:19:55,430 --> 01:19:57,620
是他要获取数据的时候是吧

2083
01:19:57,710 --> 01:19:58,670
获取数据的时候

2084
01:19:58,760 --> 01:19:59,720
那什么时候获取数据

2085
01:19:59,720 --> 01:20:00,470
我们先来看

2086
01:20:00,470 --> 01:20:02,840
是不是获取数据的时候才会触发给他喝

2087
01:20:03,140 --> 01:20:03,950
所以说在这一步

2088
01:20:03,950 --> 01:20:06,080
你看我的电话本儿一出出画好了是吧

2089
01:20:06,380 --> 01:20:09,140
我们这个get和set OB既地方

2090
01:20:10,240 --> 01:20:12,010
Property是不是这块儿也也已经

2091
01:20:12,780 --> 01:20:13,920
把数据鉴定好了是吧

2092
01:20:14,160 --> 01:20:15,420
现在就等着使用了是吧

2093
01:20:15,480 --> 01:20:17,250
使用的时候它就会构建映射是吧

2094
01:20:17,400 --> 01:20:19,080
我们现在继续回回到这里边儿

2095
01:20:19,140 --> 01:20:19,950
因为是单线程吗

2096
01:20:19,950 --> 01:20:20,160
是吧

2097
01:20:20,220 --> 01:20:22,890
单线程它那块儿构建好了之后

2098
01:20:22,890 --> 01:20:23,580
就回到这里边儿

2099
01:20:23,640 --> 01:20:26,250
然后就拿到我们什么APPDL是吧

2100
01:20:26,250 --> 01:20:27,960
拿到我们APPAPP

2101
01:20:28,590 --> 01:20:29,160
那个K

2102
01:20:29,220 --> 01:20:33,000
然后拿到我们怎么拿到我们整个这个里边什么内容

2103
01:20:33,000 --> 01:20:34,560
看到了我们整个这个内容

2104
01:20:34,560 --> 01:20:35,520
整个这个内容是什么

2105
01:20:35,550 --> 01:20:36,420
就是这一头的内容

2106
01:20:36,420 --> 01:20:40,170
是不是就是我们相当于这里头的内容是同学们相当于这里头的内容

2107
01:20:40,170 --> 01:20:41,760
是不是是这一坨的内容

2108
01:20:41,790 --> 01:20:44,280
是不是是不是那这一坨的内容

2109
01:20:45,190 --> 01:20:47,560
最后的内容在你的那个微里边儿

2110
01:20:47,620 --> 01:20:49,270
这儿是不是就会返回一个什么

2111
01:20:49,690 --> 01:20:50,650
就会返回一个什么

2112
01:20:50,680 --> 01:20:51,160
同学们

2113
01:20:51,720 --> 01:20:52,440
返回什么

2114
01:20:52,560 --> 01:20:53,670
返回一个render是不是

2115
01:20:54,000 --> 01:20:54,420
是不是

2116
01:20:54,900 --> 01:20:56,160
是不是就会返回一个render

2117
01:20:56,400 --> 01:21:00,000
这个compare是不是就返卡梅尔之后是不是就会返回render是不是

2118
01:21:00,330 --> 01:21:01,110
这个不用说吧

2119
01:21:01,200 --> 01:21:03,510
我们昨天给大家说的是不是卡

2120
01:21:03,510 --> 01:21:05,070
是不是就返回终点是吧

2121
01:21:05,950 --> 01:21:07,180
返回render之后

2122
01:21:07,390 --> 01:21:10,780
他就需要把render和我们的water联系起来

2123
01:21:10,780 --> 01:21:15,010
是rain的water联系起来是不是这里边我们来看我们这里边儿

2124
01:21:15,850 --> 01:21:16,720
你看我们的代码

2125
01:21:16,720 --> 01:21:18,400
这里边儿他会去做一个树林看

2126
01:21:18,400 --> 01:21:19,210
这是我们的代码

2127
01:21:19,800 --> 01:21:20,640
这是我们代码

2128
01:21:21,210 --> 01:21:22,170
这是我们传进来代码

2129
01:21:22,170 --> 01:21:23,280
是传进来代码是吧

2130
01:21:23,880 --> 01:21:24,840
我们传进来代码

2131
01:21:24,870 --> 01:21:25,650
传来代码之后

2132
01:21:25,650 --> 01:21:27,330
他在里面拿到我们这个代码

2133
01:21:27,510 --> 01:21:29,670
拿到我们代码去调用我们这个东西

2134
01:21:29,700 --> 01:21:31,710
拿到我们所有的代码看到吗

2135
01:21:31,770 --> 01:21:33,180
这是我们最基本的API

2136
01:21:33,210 --> 01:21:34,590
拿到我们所有的代码

2137
01:21:34,950 --> 01:21:36,810
拿到代码之后去做一个什么

2138
01:21:37,740 --> 01:21:42,840
去调用一下我们自身的这个complain complain complain的方法了吗

2139
01:21:43,020 --> 01:21:44,670
用我们这个complete的方法

2140
01:21:45,580 --> 01:21:46,390
这个每一个

2141
01:21:47,160 --> 01:21:49,530
我会循环我每一个这个跳的

2142
01:21:49,530 --> 01:21:50,430
就是我拿到这个

2143
01:21:50,700 --> 01:21:51,870
拿到这个东西看到了

2144
01:21:51,870 --> 01:21:52,770
拿到我这个内容

2145
01:21:52,800 --> 01:22:00,000
这里边的这个内容是不是去便利他是不是同学们你看去便利这里边的每一个这个这个露的节点是吧

2146
01:22:00,060 --> 01:22:02,460
每一个节点你看我拿到第一个节点遍历

2147
01:22:02,610 --> 01:22:03,510
遍历完了之后

2148
01:22:03,780 --> 01:22:04,650
然后往这里边儿

2149
01:22:05,630 --> 01:22:06,500
去做处理

2150
01:22:06,500 --> 01:22:07,145
处理完了之后

2151
01:22:07,145 --> 01:22:11,060
把这个漏的节点添加到我新创建的文本文档里边儿

2152
01:22:11,060 --> 01:22:11,870
文档片段里边儿

2153
01:22:11,990 --> 01:22:14,750
同学们这个up EP有一个APP

2154
01:22:14,930 --> 01:22:16,040
有一个过程叫什么

2155
01:22:16,130 --> 01:22:17,690
叫做剪切过程叫什么

2156
01:22:17,690 --> 01:22:18,650
什么叫剪切过程

2157
01:22:19,130 --> 01:22:21,020
就是我一开始我的这个

2158
01:22:21,350 --> 01:22:23,210
我所有的节点全部在什么在

2159
01:22:23,210 --> 01:22:24,320
全部在什么什么

2160
01:22:24,500 --> 01:22:25,610
全部在哪个上面

2161
01:22:25,610 --> 01:22:26,960
全部在我这个load里边是吧

2162
01:22:27,410 --> 01:22:30,230
但是我现在通过一个这个ipad的这个API

2163
01:22:30,230 --> 01:22:31,490
就会把握这个文内容

2164
01:22:31,490 --> 01:22:34,160
文档剪切到我这个里边儿去

2165
01:22:34,250 --> 01:22:36,095
剪切到我这个这个里面去

2166
01:22:36,095 --> 01:22:37,700
就相当于是水龙头一样

2167
01:22:38,030 --> 01:22:40,100
从这个地方留到这个地方来

2168
01:22:40,370 --> 01:22:41,570
就是留的过程

2169
01:22:41,570 --> 01:22:42,950
我做一些处理

2170
01:22:43,310 --> 01:22:44,870
这个碎水的过程做一些处理

2171
01:22:44,990 --> 01:22:46,160
那这块儿有意思吗

2172
01:22:46,280 --> 01:22:47,480
这是一个剪辑的过程

2173
01:22:47,480 --> 01:22:49,370
是不是这块儿的过程

2174
01:22:49,370 --> 01:22:50,840
就是一个什么剪辑的过程

2175
01:22:50,900 --> 01:22:51,440
明白吗

2176
01:22:52,330 --> 01:22:54,310
这个内容就是一个什么剪辑的过程

2177
01:22:55,750 --> 01:22:56,200
所以呢

2178
01:22:56,200 --> 01:22:57,310
在这一步就是一个什么

2179
01:22:57,520 --> 01:23:00,460
把我对每一个节点拿过来做处理

2180
01:23:01,080 --> 01:23:01,530
做处理

2181
01:23:01,530 --> 01:23:02,460
处理完了之后

2182
01:23:02,760 --> 01:23:04,770
处理完了之后把这个节点

2183
01:23:04,920 --> 01:23:08,490
然后重新加到我这个新构建的文档里边儿

2184
01:23:08,490 --> 01:23:09,570
这里边的文档就没了

2185
01:23:09,600 --> 01:23:12,420
然后处理完了之后的文档节点返回

2186
01:23:12,420 --> 01:23:13,530
返回到这里边儿

2187
01:23:13,530 --> 01:23:14,610
返回到这里边儿之后

2188
01:23:14,760 --> 01:23:15,810
然后就返回到这里边儿

2189
01:23:16,140 --> 01:23:16,920
返回到这边

2190
01:23:16,920 --> 01:23:18,510
反正这边之后and就完了

2191
01:23:18,810 --> 01:23:20,670
所以说它的核心是在哪一部

2192
01:23:20,850 --> 01:23:22,230
是在处理这一步是吧

2193
01:23:22,260 --> 01:23:23,700
处理每一个节点的这一步

2194
01:23:23,790 --> 01:23:24,810
每一个节点这一步

2195
01:23:25,240 --> 01:23:27,550
就相当于是我们每一个指令是吧

2196
01:23:27,580 --> 01:23:30,160
每一个我们render的指令这个维度是不是

2197
01:23:30,900 --> 01:23:31,920
同学明白吗

2198
01:23:32,520 --> 01:23:33,720
就相当于处理我们每一个

2199
01:23:33,720 --> 01:23:34,590
这是一个指令

2200
01:23:34,650 --> 01:23:35,730
这是一个四个指令

2201
01:23:36,320 --> 01:23:36,830
明白吗

2202
01:23:37,530 --> 01:23:39,660
这个过程就相当于处理每一个指令的过程

2203
01:23:39,930 --> 01:23:40,650
不同的指令

2204
01:23:40,680 --> 01:23:42,390
每一个指令有不同的处理方法

2205
01:23:42,480 --> 01:23:45,120
我们这块儿先说这种展示型的指令

2206
01:23:45,660 --> 01:23:47,340
再说输入性的指令

2207
01:23:47,370 --> 01:23:49,200
输入性的指令是触发set是吧

2208
01:23:49,260 --> 01:23:50,490
我们先说展示型的指令

2209
01:23:51,140 --> 01:23:53,000
你看我会出发complete complete

2210
01:23:53,150 --> 01:23:55,100
如果是什么文本节点

2211
01:23:55,130 --> 01:23:56,480
就是这种文本节点

2212
01:23:57,830 --> 01:23:59,180
他这块儿有一个正则匹配

2213
01:23:59,690 --> 01:24:00,440
就是文本

2214
01:24:00,470 --> 01:24:02,180
文本里面它会有一个正则匹配

2215
01:24:02,390 --> 01:24:04,610
正则匹配会匹配到什么

2216
01:24:04,760 --> 01:24:06,470
会匹配到我们当前这个东西

2217
01:24:06,740 --> 01:24:08,720
就相当于你看这是我们这一个正则表达式

2218
01:24:08,720 --> 01:24:09,710
是同学们

2219
01:24:15,310 --> 01:24:17,110
这是我们的一个正则表达式是吧

2220
01:24:17,260 --> 01:24:20,050
我这个正则正则表达式它是可以匹配

2221
01:24:20,660 --> 01:24:22,670
可以匹配我这个内容的知道吧

2222
01:24:22,730 --> 01:24:23,570
可以匹配什么

2223
01:24:23,810 --> 01:24:24,830
可以匹配我这个

2224
01:24:25,070 --> 01:24:27,830
比如说匹配我这个这个这个这个内容知道吗

2225
01:24:28,340 --> 01:24:29,510
可以匹配我这个内容是不是

2226
01:24:30,740 --> 01:24:32,840
匹配我这个内容

2227
01:24:34,770 --> 01:24:36,900
对匹配完这个内容之后

2228
01:24:37,590 --> 01:24:38,250
我在这儿

2229
01:24:39,480 --> 01:24:42,510
是可以去拿到我具体的这个这个匹配的内容的

2230
01:24:42,510 --> 01:24:43,410
是只知道吗

2231
01:24:43,680 --> 01:24:46,800
可以拿到我具体匹配具体的这里边的内容

2232
01:24:47,040 --> 01:24:48,360
你看我在里边可以去拿到了

2233
01:24:49,500 --> 01:24:49,890
看到吗

2234
01:24:49,950 --> 01:24:51,870
我可以拿到我匹配这个里边的这种

2235
01:24:51,900 --> 01:24:52,860
可以通过这种东西

2236
01:24:53,280 --> 01:24:53,760
对

2237
01:24:54,690 --> 01:24:57,390
我可以拿到这里面这个东西是不是就具体的K

2238
01:24:57,540 --> 01:24:59,460
所以我这边拿到我具体的K

2239
01:24:59,670 --> 01:25:00,780
拿到我具体的K之后

2240
01:25:00,780 --> 01:25:03,870
同学们我们说了一个指令对应一个什么

2241
01:25:04,480 --> 01:25:05,620
一个指令对应什么

2242
01:25:07,660 --> 01:25:09,280
一个指令是不是对应一个render

2243
01:25:09,730 --> 01:25:11,500
一个render是不是就对应一个water

2244
01:25:11,530 --> 01:25:13,090
是不是现在就关联起来了

2245
01:25:13,730 --> 01:25:16,550
是不是润一个render是不是就相当于

2246
01:25:16,550 --> 01:25:17,420
是不是就是render

2247
01:25:18,000 --> 01:25:21,240
我们在那里边儿是不是就是那个你的那个render函数

2248
01:25:21,270 --> 01:25:22,590
就是具体的render函数

2249
01:25:22,650 --> 01:25:24,720
就是具体怎么去修改的那个render函数

2250
01:25:25,750 --> 01:25:27,040
所以这这一步你看

2251
01:25:27,800 --> 01:25:29,150
一个指令就对应一个water

2252
01:25:29,270 --> 01:25:29,810
看到吗

2253
01:25:29,900 --> 01:25:30,470
我们water

2254
01:25:30,530 --> 01:25:31,760
我们拿过来之后

2255
01:25:31,910 --> 01:25:33,320
他就初始化water了

2256
01:25:33,380 --> 01:25:38,390
看到初始化water这块就会传入一个不同的指令

2257
01:25:38,720 --> 01:25:40,400
有不同的打电话的过程

2258
01:25:40,400 --> 01:25:43,250
是不是就是怎么去修改冻结点的过程

2259
01:25:43,250 --> 01:25:43,610
是啊

2260
01:25:43,850 --> 01:25:45,770
我是不是说了每一个water

2261
01:25:47,130 --> 01:25:49,320
不同的指令是

2262
01:25:50,130 --> 01:25:53,310
有不同的不同的修改

2263
01:25:53,940 --> 01:25:54,870
Render的过程是吧

2264
01:25:54,960 --> 01:25:56,250
我们这块儿地render是什么

2265
01:25:56,640 --> 01:25:58,140
就是low的video看到吗

2266
01:25:58,290 --> 01:25:59,130
什么叫low

2267
01:25:59,190 --> 01:26:02,250
我们要修改这个洞节点的文本节点的值

2268
01:26:02,670 --> 01:26:04,290
是不是就要去获取这个漏的

2269
01:26:04,590 --> 01:26:07,200
漏的节点的什么load这个属性是吧

2270
01:26:07,710 --> 01:26:09,480
然后去获取这么修改是吧

2271
01:26:09,540 --> 01:26:11,130
这么修改是怎么修改

2272
01:26:11,130 --> 01:26:11,730
这个懂吗

2273
01:26:12,030 --> 01:26:12,570
这个懂吗

2274
01:26:12,750 --> 01:26:14,550
这个基本的jsapi懂吗

2275
01:26:17,440 --> 01:26:17,980
是吧

2276
01:26:21,300 --> 01:26:22,710
你现在就这么理解好吧

2277
01:26:22,740 --> 01:26:23,640
你现在就这么理解

2278
01:26:25,290 --> 01:26:28,320
所以说这个就是你看我把我传入的是什么

2279
01:26:28,350 --> 01:26:32,310
具体去修改我们节点的render方法是吧

2280
01:26:32,370 --> 01:26:32,640
Call back

2281
01:26:32,640 --> 01:26:33,570
这就是我的render

2282
01:26:33,810 --> 01:26:34,830
这个就是个render

2283
01:26:34,890 --> 01:26:36,480
你就把把这个东西构成render

2284
01:26:36,540 --> 01:26:37,440
然后传入了什么

2285
01:26:37,530 --> 01:26:39,390
传入了我的V1实例

2286
01:26:39,480 --> 01:26:40,680
传入了我的露的节点

2287
01:26:40,680 --> 01:26:41,850
就是我当前的节点

2288
01:26:41,850 --> 01:26:42,270
就是什么

2289
01:26:42,300 --> 01:26:43,500
就是我这个冻结点是吧

2290
01:26:43,560 --> 01:26:44,610
我当前这个冻结的

2291
01:26:45,420 --> 01:26:47,130
当前这个冻结的还有什么

2292
01:26:47,250 --> 01:26:48,480
我的name name是什么

2293
01:26:48,510 --> 01:26:49,380
我具体的key是吧

2294
01:26:49,410 --> 01:26:52,080
我具体的这个这个K就是我这个特色是吧

2295
01:26:52,140 --> 01:26:52,560
匹配的

2296
01:26:52,680 --> 01:26:53,340
然后water

2297
01:26:53,370 --> 01:26:56,100
我们来看new water怎么了

2298
01:26:56,100 --> 01:26:57,030
我们来看模特儿里边

2299
01:26:57,240 --> 01:26:58,020
Water里边儿

2300
01:26:58,660 --> 01:27:00,520
首先这是我的卧室吧

2301
01:27:00,700 --> 01:27:01,630
它传入了什么

2302
01:27:01,660 --> 01:27:02,500
我有些实力

2303
01:27:02,680 --> 01:27:03,940
还有我这个节点是吧

2304
01:27:04,060 --> 01:27:04,660
还有什么

2305
01:27:05,020 --> 01:27:05,530
还有什么

2306
01:27:05,590 --> 01:27:06,610
这是我的露的节点

2307
01:27:06,610 --> 01:27:07,690
这个节点还有吗

2308
01:27:07,690 --> 01:27:09,190
还有我的对应的这个K是吧

2309
01:27:09,340 --> 01:27:10,630
还有我具体的render是吧

2310
01:27:10,750 --> 01:27:11,590
这个是属于什么

2311
01:27:11,740 --> 01:27:13,060
具体的render函数是吧

2312
01:27:13,060 --> 01:27:14,620
你可以把它理解为render函数是吧

2313
01:27:14,650 --> 01:27:16,300
咱们这个没有问题吧

2314
01:27:16,420 --> 01:27:19,330
这个这个东西把它理解为点数没问题吧

2315
01:27:20,610 --> 01:27:21,120
是吧

2316
01:27:21,760 --> 01:27:23,740
因为他就是修改多么的具体的方法是不是

2317
01:27:24,700 --> 01:27:26,530
所以这一步拿到这个东西之后

2318
01:27:26,920 --> 01:27:28,120
然后这一步他做什么

2319
01:27:28,570 --> 01:27:29,350
他会判断

2320
01:27:29,530 --> 01:27:31,480
他会把我们这个东西给到

2321
01:27:31,480 --> 01:27:32,710
把我当前这个东西

2322
01:27:32,740 --> 01:27:35,380
把当前这个water给到什么的

2323
01:27:35,380 --> 01:27:36,250
铺点儿他给他

2324
01:27:37,000 --> 01:27:38,140
我的DNF是什么

2325
01:27:38,170 --> 01:27:39,070
我的电话本儿是吧

2326
01:27:39,250 --> 01:27:41,770
我的电话本儿是不是我们在初始化那个数据的时候

2327
01:27:41,770 --> 01:27:43,210
是不是把电话本儿已经升级好了的

2328
01:27:43,510 --> 01:27:45,160
是不是初始化这个数据的时候

2329
01:27:45,160 --> 01:27:46,390
是不是已经把电话本声明好了

2330
01:27:46,390 --> 01:27:47,800
同学们是不是

2331
01:27:48,720 --> 01:27:50,280
是不是构建O2O的时候

2332
01:27:50,280 --> 01:27:52,380
是不是电话本生病好了的是吧

2333
01:27:52,860 --> 01:27:53,310
是不是

2334
01:27:54,280 --> 01:27:56,230
是不是那证明好了之后

2335
01:27:57,300 --> 01:27:58,680
我这块儿就是一个什么

2336
01:27:59,430 --> 01:27:59,820
就是的

2337
01:27:59,820 --> 01:28:00,750
不是他给他是吧

2338
01:28:00,810 --> 01:28:03,390
我这个的谱是不是一个全局的对象是吧

2339
01:28:03,450 --> 01:28:04,230
全句是吧

2340
01:28:04,410 --> 01:28:06,630
然后我拿到这我这个什么target是吧

2341
01:28:06,720 --> 01:28:08,100
这不是他给他这个target

2342
01:28:08,100 --> 01:28:10,800
就是把我这个什么唯一的这个时

2343
01:28:10,800 --> 01:28:13,680
这个water的实力就给到我这个他给他上面了是吧

2344
01:28:13,830 --> 01:28:15,510
就先给到他上面儿明白吗

2345
01:28:15,630 --> 01:28:17,970
就先把我这个water挂在这上面

2346
01:28:19,890 --> 01:28:20,280
是吧

2347
01:28:20,430 --> 01:28:23,370
把这一步先挂在上面那挂在那上面之后

2348
01:28:23,370 --> 01:28:25,860
然后同学们就把这些属性给到这上面

2349
01:28:25,950 --> 01:28:29,070
就就把我这些具体我这个water

2350
01:28:29,220 --> 01:28:31,140
因为我要维护一个关系嘛

2351
01:28:31,140 --> 01:28:31,380
是吧

2352
01:28:31,410 --> 01:28:33,090
我现在就把这个关系构建起来

2353
01:28:33,180 --> 01:28:34,230
构建一个什么样的关系

2354
01:28:34,440 --> 01:28:36,330
构建我这个water的名称是吧

2355
01:28:36,480 --> 01:28:38,070
Name name name是什么

2356
01:28:38,340 --> 01:28:40,650
就是我获取的这个具体的K是吧

2357
01:28:41,480 --> 01:28:43,100
这个water具体使用哪个K

2358
01:28:43,100 --> 01:28:47,810
是不是他使用了哪个数据是这个water具体的ID是什么是吧

2359
01:28:47,900 --> 01:28:49,550
这个water它具体的什么

2360
01:28:49,760 --> 01:28:51,890
哪个节点使用的这个是吧

2361
01:28:52,310 --> 01:28:56,780
这个water它的负载的这个挂载的什么威实力什么的

2362
01:28:56,780 --> 01:28:58,460
Water具体的render对象是什么

2363
01:28:58,460 --> 01:28:58,760
是吧

2364
01:28:59,210 --> 01:28:59,570
是吧

2365
01:28:59,690 --> 01:29:01,610
具体具体去做操作

2366
01:29:01,610 --> 01:29:03,290
修改我们操作的东西是什么

2367
01:29:03,530 --> 01:29:06,290
然后water这些关系构建好了之后

2368
01:29:06,290 --> 01:29:07,250
他去调用什么

2369
01:29:07,280 --> 01:29:08,300
调用一个up data

2370
01:29:08,600 --> 01:29:10,490
调用update update我们说了什么

2371
01:29:10,490 --> 01:29:10,850
同学们

2372
01:29:11,200 --> 01:29:15,130
我们在new water的时候就会第一次执行他的什么render函数

2373
01:29:15,130 --> 01:29:15,460
是吧

2374
01:29:15,640 --> 01:29:17,170
Update就会掉什么

2375
01:29:17,560 --> 01:29:18,430
这就是它的update

2376
01:29:18,520 --> 01:29:22,000
看到掉了update update首先会做一个什么处理

2377
01:29:22,300 --> 01:29:24,550
懂upset首先会做一个什么处理

2378
01:29:24,790 --> 01:29:25,480
就是先不说

2379
01:29:28,350 --> 01:29:28,710
S

2380
01:29:28,710 --> 01:29:29,880
首先会做一个什么处理

2381
01:29:32,870 --> 01:29:34,580
After首先会做一个什么处理

2382
01:29:34,580 --> 01:29:35,990
首先会做一个什么处理

2383
01:29:37,330 --> 01:29:39,880
首先是不是他他要去拿到最新的数据

2384
01:29:40,470 --> 01:29:44,220
我们说了他是不是要去拿最新的数据water是不是要去拿最新的数据

2385
01:29:44,900 --> 01:29:45,290
对

2386
01:29:45,290 --> 01:29:46,520
因为water我们在

2387
01:29:47,290 --> 01:29:49,180
Water是不会触发render是

2388
01:29:49,420 --> 01:29:50,770
我们这里边儿就没有触发render

2389
01:29:50,770 --> 01:29:53,920
就通过这种这种update是update就会触发render

2390
01:29:53,980 --> 01:29:57,220
这就是我们具体触发render逻辑我这里边儿封装一下

2391
01:29:57,430 --> 01:29:59,290
那这里边我们是不是就处发热啦

2392
01:29:59,560 --> 01:30:03,640
发热的时候是不是第一步他他就会去获取数据这这是不是就

2393
01:30:04,160 --> 01:30:07,370
就会去在那个里边是不是就会触发点触发

2394
01:30:12,890 --> 01:30:14,150
触发render是吧

2395
01:30:14,330 --> 01:30:15,500
触发render就会什么

2396
01:30:16,680 --> 01:30:18,900
最后吃完是不是update是吧

2397
01:30:18,960 --> 01:30:23,460
最初我们是吧获取数据是吧是吧是吧

2398
01:30:23,520 --> 01:30:24,060
获取数据

2399
01:30:24,060 --> 01:30:25,740
获取数据就这就是什么

2400
01:30:25,770 --> 01:30:26,880
我们的sister get是吧

2401
01:30:27,210 --> 01:30:29,040
就会把我们最新的数据获取过来

2402
01:30:29,160 --> 01:30:30,600
看到获取数据

2403
01:30:30,720 --> 01:30:33,420
因为我们render执行run的时候就会获取数据

2404
01:30:33,420 --> 01:30:34,770
我们这儿模拟了他的render

2405
01:30:35,070 --> 01:30:36,240
同学们这一步明白吗

2406
01:30:36,840 --> 01:30:37,830
最不迷吗

2407
01:30:43,830 --> 01:30:44,400
是吧

2408
01:30:45,110 --> 01:30:47,840
所以说这一步它会获取到我们这个render

2409
01:30:47,960 --> 01:30:49,520
获取了这个render完了之后

2410
01:30:50,810 --> 01:30:51,920
去获取数据是吧

2411
01:30:52,010 --> 01:30:53,180
获取我们这个数据

2412
01:30:53,210 --> 01:30:55,280
获取完这个数据之后做什么

2413
01:30:55,310 --> 01:30:56,090
最新的数据

2414
01:30:56,210 --> 01:30:57,620
获取最新的数据的时候

2415
01:30:57,620 --> 01:30:58,670
同学们就会做什么

2416
01:30:59,460 --> 01:31:00,630
就会获取我们什么

2417
01:31:01,220 --> 01:31:02,270
就会惩罚我们是什么

2418
01:31:02,870 --> 01:31:03,650
给他是吧

2419
01:31:03,740 --> 01:31:04,940
就会触发我们的歌

2420
01:31:05,330 --> 01:31:07,310
但是这个时候触发get的时候

2421
01:31:07,370 --> 01:31:10,310
我们的皮儿他给的上面刚好是不是有获取我们这个

2422
01:31:10,940 --> 01:31:12,590
这个东西的water是不是

2423
01:31:12,650 --> 01:31:16,100
Water实力是不是刚好有这个water实力是不是

2424
01:31:16,890 --> 01:31:17,490
是不是

2425
01:31:18,040 --> 01:31:18,790
明白吗

2426
01:31:19,090 --> 01:31:20,680
是不是刚好有这个water的实力

2427
01:31:21,480 --> 01:31:24,450
是不是就回到我们刚刚说的映射关系的

2428
01:31:25,110 --> 01:31:26,310
刚好有一个龌龊的实力

2429
01:31:26,310 --> 01:31:28,080
然后他做什么把关系

2430
01:31:28,640 --> 01:31:30,440
把这个deep添加到这个依赖里边儿

2431
01:31:30,740 --> 01:31:32,240
就是你刚好这份数据

2432
01:31:32,390 --> 01:31:35,780
你自己的这份数据维护他所谓的依赖

2433
01:31:36,200 --> 01:31:40,130
是不是就是你所谓的电话本是不是全部收集起来是吧

2434
01:31:40,400 --> 01:31:43,550
这不明白收集起来这一步明白吗

2435
01:31:43,550 --> 01:31:44,570
同学们明白吗

2436
01:31:44,570 --> 01:31:47,060
这一这个这个这个这个这么难吗

2437
01:31:47,690 --> 01:31:48,200
是吧

2438
01:31:48,650 --> 01:31:51,440
好关系收集起来之后做什么返回数据

2439
01:31:52,300 --> 01:31:53,290
返回数据是吧

2440
01:31:53,380 --> 01:31:55,120
返回数据到这一步了是吧

2441
01:31:55,180 --> 01:31:55,570
返回数据

2442
01:31:55,570 --> 01:31:56,680
返回数据到这一步了是吧

2443
01:31:56,680 --> 01:31:57,940
返回到最新的数据

2444
01:31:58,270 --> 01:31:59,800
返回到最新的数据到这一步

2445
01:31:59,800 --> 01:32:02,230
返回到最新的数据完了之后就是什么

2446
01:32:02,440 --> 01:32:03,100
触发render

2447
01:32:03,700 --> 01:32:04,540
是不是错在哪

2448
01:32:04,780 --> 01:32:05,320
我这个就是

2449
01:32:06,060 --> 01:32:09,090
This type就是我具体要更新的render类型吗

2450
01:32:09,090 --> 01:32:09,870
就是我这个东西嘛

2451
01:32:09,870 --> 01:32:10,110
是吧

2452
01:32:10,620 --> 01:32:12,150
这个load就是我自己的logo吗

2453
01:32:12,180 --> 01:32:13,470
然后去获取最新的数据

2454
01:32:13,470 --> 01:32:14,100
出发render吧

2455
01:32:14,160 --> 01:32:14,460
是吧

2456
01:32:14,640 --> 01:32:15,930
你看这块儿出发点

2457
01:32:16,320 --> 01:32:19,260
出发点完了之后就什么就到我们这里边儿是吧

2458
01:32:20,500 --> 01:32:21,430
点出来完了之后

2459
01:32:21,820 --> 01:32:23,710
这一波这事不就完了

2460
01:32:23,890 --> 01:32:25,390
这个字是不就完了

2461
01:32:25,750 --> 01:32:27,520
所以这个关系是不是就构建起来了

2462
01:32:28,070 --> 01:32:29,240
这个关系是构建起来

2463
01:32:29,240 --> 01:32:31,160
同学们这这现在明白吗

2464
01:32:31,430 --> 01:32:33,110
现在明白通过代码这一块儿

2465
01:32:33,810 --> 01:32:34,680
是不是构建起来了

2466
01:32:34,770 --> 01:32:35,790
构建起来之后

2467
01:32:35,910 --> 01:32:37,140
那现在我要修改

2468
01:32:37,290 --> 01:32:38,280
我修改这个数据

2469
01:32:38,460 --> 01:32:39,690
这是不是input的修改

2470
01:32:40,110 --> 01:32:41,490
那对于这种修改的时候

2471
01:32:42,080 --> 01:32:45,440
Update的时候是先触发render还是先获取数据

2472
01:32:46,850 --> 01:32:48,920
我们这个update其实就相当于render

2473
01:32:49,370 --> 01:32:51,230
我们这个update其实就相当于render

2474
01:32:51,260 --> 01:32:53,420
你的render里面不就是我们的update

2475
01:32:53,420 --> 01:32:54,710
是不是就相当于人格

2476
01:32:55,220 --> 01:32:56,720
这块是不是就先获取数据

2477
01:32:56,780 --> 01:33:03,710
获取完数据再去真正修改动力那你这里边你这里边是不是也你这update是就相当于我们这个东西

2478
01:33:04,520 --> 01:33:06,500
Update做的事情就就两件

2479
01:33:07,010 --> 01:33:08,300
第一件就是获取数据

2480
01:33:08,360 --> 01:33:09,770
这个是不是就获取数据

2481
01:33:10,220 --> 01:33:13,130
第二件就是真正去真正操作动

2482
01:33:13,280 --> 01:33:14,780
这个不就是真正操作动吗

2483
01:33:15,860 --> 01:33:16,070
对了

2484
01:33:16,070 --> 01:33:16,730
就是这个东西

2485
01:33:16,730 --> 01:33:19,310
你就把可以把它理解为是个render明白吗

2486
01:33:20,530 --> 01:33:21,430
明白吗

2487
01:33:21,910 --> 01:33:23,650
这就是我们昨天说的

2488
01:33:24,010 --> 01:33:25,030
想换个名字

2489
01:33:25,090 --> 01:33:26,380
你现在还想换个名字吗

2490
01:33:27,040 --> 01:33:28,090
现在你明白吗

2491
01:33:28,830 --> 01:33:30,900
你的APP就相当于是我们这块的render

2492
01:33:34,130 --> 01:33:34,760
想换个名字

2493
01:33:34,760 --> 01:33:37,010
你是不明白就继续扣个零

2494
01:33:37,160 --> 01:33:38,660
明白就扣个一好吧

2495
01:33:41,590 --> 01:33:42,550
我们这儿是模拟

2496
01:33:43,030 --> 01:33:43,930
所以在这一步

2497
01:33:43,960 --> 01:33:46,210
你这里边儿真正做的就是这个这个过程的

2498
01:33:46,240 --> 01:33:47,890
是不是就这个过程来获取数据

2499
01:33:48,250 --> 01:33:48,850
触发修改

2500
01:33:49,120 --> 01:33:49,660
明白吧

2501
01:33:49,900 --> 01:33:51,100
在这一步完了之后

2502
01:33:52,570 --> 01:33:54,880
完了之后做什么render发完了

2503
01:33:54,940 --> 01:33:55,600
我们再来看

2504
01:33:55,630 --> 01:33:56,170
再来看什么

2505
01:33:56,230 --> 01:33:57,640
再来看输入型的是吧

2506
01:33:57,760 --> 01:33:58,210
输入性的

2507
01:33:58,390 --> 01:33:59,950
那输入型的又是一个什么过程

2508
01:33:59,980 --> 01:34:01,060
你看我们这输入型的

2509
01:34:01,300 --> 01:34:02,710
你看他是一个什么过程

2510
01:34:03,590 --> 01:34:05,270
当等于一的时候就是input是吧

2511
01:34:05,510 --> 01:34:06,200
Input的情况

2512
01:34:06,200 --> 01:34:07,850
他要做一个什么监听是吧

2513
01:34:08,000 --> 01:34:10,670
监听我拿到它会获取到我所有的属性

2514
01:34:10,670 --> 01:34:12,380
你看获取了我所有的属性

2515
01:34:12,410 --> 01:34:15,890
然后拿到我这个属性是指令型的属性的时候

2516
01:34:16,040 --> 01:34:17,060
就是刚抹的时候

2517
01:34:17,060 --> 01:34:18,710
属指令性的属性的时候

2518
01:34:18,860 --> 01:34:20,120
会拿到我这个属性

2519
01:34:20,120 --> 01:34:22,100
具体使用这个指令

2520
01:34:22,130 --> 01:34:23,690
具体使用了哪个K是吧

2521
01:34:23,750 --> 01:34:26,210
它使用的是text是哪个K

2522
01:34:26,270 --> 01:34:27,320
然后做一个什么处理

2523
01:34:27,320 --> 01:34:28,100
同学们

2524
01:34:28,840 --> 01:34:29,530
我们说了

2525
01:34:29,740 --> 01:34:30,580
然后做一个什么处理

2526
01:34:30,700 --> 01:34:33,610
监听我这个input是世间听我这个音频的

2527
01:34:34,160 --> 01:34:34,670
是不是

2528
01:34:35,260 --> 01:34:36,520
是不是今天我这个衣服的

2529
01:34:37,060 --> 01:34:37,630
同学们

2530
01:34:38,170 --> 01:34:41,050
今天我这个input的输入输入完成之后

2531
01:34:41,710 --> 01:34:43,360
我在这块儿去初始化一个water

2532
01:34:43,390 --> 01:34:44,950
是初始化一个water

2533
01:34:45,490 --> 01:34:45,820
对

2534
01:34:45,910 --> 01:34:46,300
说实话

2535
01:34:46,300 --> 01:34:48,100
这个water我们说了一个指令

2536
01:34:48,430 --> 01:34:49,600
会构建一个water是吧

2537
01:34:50,490 --> 01:34:52,050
是不是一个指令构建一个莴笋

2538
01:35:00,180 --> 01:35:00,690
是吧

2539
01:35:02,780 --> 01:35:04,310
那一个指令构建一个water

2540
01:35:04,310 --> 01:35:05,450
这块就很有意思啦

2541
01:35:05,450 --> 01:35:05,990
什么意思

2542
01:35:06,230 --> 01:35:07,730
就是说我们在这一步

2543
01:35:08,560 --> 01:35:09,280
你看明白

2544
01:35:09,310 --> 01:35:10,660
我们在这一步是一个什么过程

2545
01:35:10,690 --> 01:35:11,650
是一个指令

2546
01:35:11,650 --> 01:35:12,400
构建一个腿儿

2547
01:35:12,880 --> 01:35:16,360
那么这块我们这个input是不是也会构建一个water

2548
01:35:17,090 --> 01:35:18,680
是不是因为我要定向

2549
01:35:18,680 --> 01:35:19,880
到时候修改的时候

2550
01:35:19,910 --> 01:35:23,150
因为我们的V脸我要修改input这个里边的修改

2551
01:35:23,150 --> 01:35:25,340
你们修改input里面的值是怎么修改的

2552
01:35:25,400 --> 01:35:26,810
是不是就是video是吧

2553
01:35:26,840 --> 01:35:28,250
就是通过微来修改的是吧

2554
01:35:28,550 --> 01:35:30,350
所以这一步你看我们的render是什么

2555
01:35:30,620 --> 01:35:31,910
修改video的render

2556
01:35:31,970 --> 01:35:33,230
所以双向数据绑定在这儿

2557
01:35:33,230 --> 01:35:34,220
双向了看见没有

2558
01:35:34,370 --> 01:35:34,970
看见了吗

2559
01:35:35,270 --> 01:35:36,140
就这双向了

2560
01:35:36,410 --> 01:35:39,050
就是什么时候去修改我这个音谱的

2561
01:35:39,560 --> 01:35:41,030
在这儿相信了是吧

2562
01:35:41,880 --> 01:35:43,470
就是我的展示性的东西

2563
01:35:44,070 --> 01:35:45,690
我的water是这一部water了

2564
01:35:45,840 --> 01:35:46,410
明白吗

2565
01:35:47,220 --> 01:35:49,140
我的input是不是也需要发生改变

2566
01:35:49,260 --> 01:35:50,340
在这一步发生了改变

2567
01:35:51,320 --> 01:35:53,750
然后监听我在输入的时候

2568
01:35:53,870 --> 01:35:56,300
我在监听input就拦截了你的所有输入

2569
01:35:56,780 --> 01:35:58,010
拦截了你所有的输入

2570
01:35:58,070 --> 01:35:59,330
你的输入全部拦截

2571
01:35:59,510 --> 01:36:00,500
拦截完了之后

2572
01:36:00,530 --> 01:36:03,590
在这一步做什么去修改我V1实力上面的这个

2573
01:36:04,160 --> 01:36:06,890
把你这个输入的这个值拿来修改

2574
01:36:06,890 --> 01:36:10,790
我这个威力实力上面的这个具体的什么某个K看明白了吗

2575
01:36:12,060 --> 01:36:12,780
看明白了吗

2576
01:36:13,420 --> 01:36:14,500
然后修改这个K的时候

2577
01:36:14,500 --> 01:36:15,970
修改了什么text是吧

2578
01:36:16,000 --> 01:36:17,170
修改text

2579
01:36:17,320 --> 01:36:20,500
修改text的时候是不是就走到这里边儿修改什么

2580
01:36:21,380 --> 01:36:22,010
修的是什么

2581
01:36:22,190 --> 01:36:24,170
修的是不是这个东西

2582
01:36:24,590 --> 01:36:26,570
是不是这这一本如果不一样

2583
01:36:26,570 --> 01:36:28,400
是不是这一步了是不是

2584
01:36:29,110 --> 01:36:29,800
这一步修改

2585
01:36:29,800 --> 01:36:30,520
修改完了之后

2586
01:36:30,550 --> 01:36:31,330
触发什么的

2587
01:36:31,330 --> 01:36:33,760
不是note PHY note就是我所有的water是吧

2588
01:36:33,850 --> 01:36:35,350
我所有的water刚好就是什么

2589
01:36:35,500 --> 01:36:36,550
就是这两个water是吧

2590
01:36:36,880 --> 01:36:38,410
这窝儿还有什么

2591
01:36:38,410 --> 01:36:40,900
我这个卧室是不是我这个龌龊

2592
01:36:40,990 --> 01:36:41,890
那这两个窝腿

2593
01:36:42,310 --> 01:36:44,380
这个腿就修改我们什么文本展示

2594
01:36:44,560 --> 01:36:46,750
那这个water就修改什么修改修改

2595
01:36:46,750 --> 01:36:48,100
我们铺在这一步

2596
01:36:48,100 --> 01:36:48,460
你看

2597
01:36:49,600 --> 01:36:50,770
明白了吗

2598
01:36:51,580 --> 01:36:52,180
现在明白了吗

2599
01:36:52,180 --> 01:36:52,630
同学们

2600
01:36:52,720 --> 01:36:53,740
这个过程明白了吗

2601
01:36:55,860 --> 01:36:56,490
明白了吗

2602
01:37:01,400 --> 01:37:01,910
是吧

2603
01:37:04,520 --> 01:37:05,900
那现在这一步明白了

2604
01:37:15,090 --> 01:37:15,570
咳

2605
01:37:16,200 --> 01:37:17,040
等一下咱们

2606
01:37:31,600 --> 01:37:33,100
想通了通透了是吧

2607
01:37:33,100 --> 01:37:33,520
通透了

2608
01:37:34,680 --> 01:37:35,490
同桌之后呢

2609
01:37:35,490 --> 01:37:36,270
我们再来看这

2610
01:37:36,450 --> 01:37:37,140
再来看什么

2611
01:37:38,220 --> 01:37:40,200
再来回到这里边儿来看我们什么

2612
01:37:40,290 --> 01:37:41,310
看我有意愿嘛

2613
01:37:41,310 --> 01:37:41,580
是吧

2614
01:37:42,210 --> 01:37:42,900
有意愿吗

2615
01:37:53,070 --> 01:37:56,490
老师看你的代码应该是编译的时候创建的water吧

2616
01:37:57,000 --> 01:38:00,180
编译的时候没有创建沃特碧的时候老在创建沃特

2617
01:38:00,180 --> 01:38:01,530
编译的时候创建的render

2618
01:38:02,120 --> 01:38:04,190
在执行构建V1实力的时候

2619
01:38:04,190 --> 01:38:05,360
我现在还没讲到这儿来

2620
01:38:06,280 --> 01:38:07,360
我还没攒到这儿来

2621
01:38:08,500 --> 01:38:09,490
你说我这块儿

2622
01:38:09,670 --> 01:38:13,060
我的实力这一块儿是我我给你们演示这个例子是

2623
01:38:13,720 --> 01:38:15,460
但是真正这里边儿不是这里边儿

2624
01:38:15,460 --> 01:38:16,810
它是结合起来的

2625
01:38:17,770 --> 01:38:18,310
知道吧

2626
01:38:18,490 --> 01:38:20,470
我演示这个例子是在编译的时候

2627
01:38:21,350 --> 01:38:22,430
不影响知道吧

2628
01:38:22,820 --> 01:38:24,920
不影响这个没有区别

2629
01:38:28,690 --> 01:38:30,790
所以这一步我们回到这个这个里边来

2630
01:38:31,450 --> 01:38:32,320
圆满里边儿是吧

2631
01:38:32,410 --> 01:38:33,010
元宝里边来

2632
01:38:33,100 --> 01:38:34,780
我们现在刚刚说了监听数据

2633
01:38:34,780 --> 01:38:36,340
监听是不是已经完了

2634
01:38:36,730 --> 01:38:37,690
数据是不是已经完了

2635
01:38:37,690 --> 01:38:38,590
同学们

2636
01:38:38,660 --> 01:38:41,990
这个东西数据源码里边的数据监听是不是已经完了是吧

2637
01:38:42,600 --> 01:38:42,960
是吧

2638
01:38:43,080 --> 01:38:44,490
我们已经给大家看了源码是吧

2639
01:38:44,520 --> 01:38:45,990
已经学学明白了是吧

2640
01:38:46,200 --> 01:38:47,640
那现在数据听明白了之后

2641
01:38:47,730 --> 01:38:50,430
那么在这里边我们再来看除了数据监听还有什么

2642
01:38:50,550 --> 01:38:52,800
还有DF是吧

2643
01:38:52,800 --> 01:38:54,720
DFDF是做什么收集袋是吧

2644
01:38:54,750 --> 01:38:56,610
你看也是一个他给的是吧

2645
01:38:56,850 --> 01:38:57,870
是不是他给的是

2646
01:38:58,410 --> 01:39:01,770
Check就是一个什么当前去挂载哪一个东西

2647
01:39:01,770 --> 01:39:02,760
应该背什么

2648
01:39:03,420 --> 01:39:09,540
哪个当前渲染的刚好就是我对应的water是不是是不是是不是的给他

2649
01:39:09,870 --> 01:39:12,450
这是我们刚刚给大家看的ID还是我的ID

2650
01:39:12,450 --> 01:39:13,710
就是我们的速度是吧

2651
01:39:13,830 --> 01:39:15,390
数组它存在所谓的事吧

2652
01:39:15,750 --> 01:39:17,940
然后这里边儿你看这是我所谓的什么

2653
01:39:18,680 --> 01:39:21,560
有数组初始化是吧

2654
01:39:21,590 --> 01:39:22,490
我的deep电话本

2655
01:39:22,490 --> 01:39:22,880
说实话

2656
01:39:23,090 --> 01:39:25,670
然后去不不就是什么

2657
01:39:25,700 --> 01:39:28,790
你看就是我往这里边去做什么懂吗

2658
01:39:30,100 --> 01:39:31,330
做什么是吧

2659
01:39:31,510 --> 01:39:32,860
往这里边儿去做一个什么过程

2660
01:39:33,130 --> 01:39:34,780
全部去浦西是吧

2661
01:39:34,810 --> 01:39:37,720
把我这个water往里面去添加的过程是吧是吧

2662
01:39:38,940 --> 01:39:40,860
就是往电话本里边去添加的过程是吧

2663
01:39:40,890 --> 01:39:41,730
累就不用说了

2664
01:39:41,790 --> 01:39:43,140
类目depend

2665
01:39:43,380 --> 01:39:44,550
这个depend就是做什么

2666
01:39:45,390 --> 01:39:46,410
这个depend就是什么

2667
01:39:46,590 --> 01:39:48,450
这个depend这个过程其实是一个什么过程

2668
01:39:48,450 --> 01:39:48,750
同学

2669
01:39:49,170 --> 01:39:51,390
这个depend其实才是一个

2670
01:39:51,840 --> 01:39:52,680
添加的过程

2671
01:39:52,680 --> 01:39:54,150
但是这个depend的添加过程

2672
01:39:54,390 --> 01:39:57,960
它相当于是调了这个depend target是什么

2673
01:39:58,500 --> 01:39:59,610
就是我们的water是吧

2674
01:39:59,670 --> 01:40:02,850
Water它有一个APP这个东西

2675
01:40:03,980 --> 01:40:06,560
这个东西谁来调用的

2676
01:40:06,560 --> 01:40:08,930
这个东西谁来调用depend这个过程

2677
01:40:08,930 --> 01:40:11,750
同学们是谁调用了阿德萨的这个过程

2678
01:40:13,050 --> 01:40:13,770
是谁调用的

2679
01:40:13,770 --> 01:40:15,150
这个过程谁动了

2680
01:40:15,150 --> 01:40:17,490
我们来看一下这个谁是谁调用的

2681
01:40:21,470 --> 01:40:23,000
你看这是谁调用的

2682
01:40:23,780 --> 01:40:24,530
这谁掉的

2683
01:40:25,810 --> 01:40:28,810
是不是dip里边的调用depend是吧的喷的

2684
01:40:28,810 --> 01:40:31,030
喷的时候你看的调研的时候

2685
01:40:31,480 --> 01:40:32,830
那么这个里边儿就调什么

2686
01:40:32,920 --> 01:40:33,910
调的water是吧

2687
01:40:34,150 --> 01:40:35,140
第二个water是吧

2688
01:40:35,200 --> 01:40:37,420
Water上面的地煞的deep

2689
01:40:37,690 --> 01:40:42,310
那么调用water里边儿的地方other water里边儿的地方又调了什么

2690
01:40:42,520 --> 01:40:44,650
又调了这个water的other shop

2691
01:40:45,100 --> 01:40:45,550
明白吗

2692
01:40:45,610 --> 01:40:48,070
相当于是我调用了

2693
01:40:48,850 --> 01:40:49,480
这个

2694
01:40:50,160 --> 01:40:51,060
电话本儿里边儿

2695
01:40:51,060 --> 01:40:52,500
我通知打电话

2696
01:40:52,650 --> 01:40:53,460
这个人打电话

2697
01:40:53,790 --> 01:40:54,510
那这个人打电话

2698
01:40:54,510 --> 01:40:55,590
他要拨号的过程

2699
01:40:55,920 --> 01:40:56,640
那怎么拨号

2700
01:40:56,640 --> 01:40:58,170
是他自己去播是吧

2701
01:40:58,200 --> 01:40:58,680
怎么拨号

2702
01:40:58,680 --> 01:40:59,640
视距自己去播

2703
01:40:59,640 --> 01:41:00,000
所以的话

2704
01:41:00,000 --> 01:41:01,020
这里边它有一个

2705
01:41:02,220 --> 01:41:03,870
具体自己怎么去播的过程

2706
01:41:04,940 --> 01:41:07,160
阿拉伯你看具体怎么自己去播的课程

2707
01:41:07,190 --> 01:41:08,090
拿到我的deep

2708
01:41:08,270 --> 01:41:09,020
拿到deep之后

2709
01:41:09,020 --> 01:41:10,010
你看我这里边儿

2710
01:41:10,040 --> 01:41:11,360
如果已经有这个依赖了

2711
01:41:11,540 --> 01:41:11,960
他就

2712
01:41:12,540 --> 01:41:13,380
不会去添加是吧

2713
01:41:13,830 --> 01:41:14,250
是吧

2714
01:41:14,400 --> 01:41:15,420
如果没有这个依赖

2715
01:41:15,480 --> 01:41:16,860
这块其实也做了一个拦截

2716
01:41:17,010 --> 01:41:18,240
除了deeper tIgEr

2717
01:41:18,300 --> 01:41:19,800
你看他这儿还做了一个拦截

2718
01:41:19,800 --> 01:41:20,130
是不是

2719
01:41:20,430 --> 01:41:21,840
除了第二他在这儿做拦截

2720
01:41:21,840 --> 01:41:23,430
他这儿还做了一个拦截是吧

2721
01:41:23,580 --> 01:41:25,260
如果没有这个依赖他怎么办

2722
01:41:25,500 --> 01:41:26,970
再去调用我当时那个地方

2723
01:41:27,060 --> 01:41:29,880
往这里边儿把我这个water添加到我这个地方里边儿

2724
01:41:30,150 --> 01:41:30,660
明白吗

2725
01:41:31,400 --> 01:41:31,970
明白吧

2726
01:41:32,750 --> 01:41:33,440
这个明白吗

2727
01:41:33,500 --> 01:41:34,340
他就是一个什么

2728
01:41:34,400 --> 01:41:35,180
就是一个天价

2729
01:41:35,180 --> 01:41:36,380
其实稍微这儿有人绕

2730
01:41:36,470 --> 01:41:37,340
但是不管怎么绕

2731
01:41:37,490 --> 01:41:38,450
它还是绕到什么

2732
01:41:38,600 --> 01:41:40,610
把这个water添加到店铺里边儿看了吗

2733
01:41:40,820 --> 01:41:42,770
只说这个过程是通知

2734
01:41:42,920 --> 01:41:44,360
就是这个过程是什么

2735
01:41:44,390 --> 01:41:46,400
是我这个数数字数

2736
01:41:46,430 --> 01:41:47,360
数据监听

2737
01:41:47,570 --> 01:41:49,250
数据监听observer这块儿

2738
01:41:49,250 --> 01:41:50,930
去掉用什么打电话

2739
01:41:50,960 --> 01:41:51,800
这个电话本儿

2740
01:41:52,200 --> 01:41:55,170
去找到电话本儿里边的这个什么water是吧

2741
01:41:55,200 --> 01:41:56,670
找到电话本里边这个water

2742
01:41:56,790 --> 01:41:57,960
然后通过water

2743
01:41:58,170 --> 01:41:59,790
然后来打电话是吧

2744
01:41:59,850 --> 01:42:00,540
通过water

2745
01:42:00,570 --> 01:42:01,830
然后来通过water

2746
01:42:01,830 --> 01:42:04,230
然后来记录记录到这里边来是吧

2747
01:42:04,230 --> 01:42:05,640
现在还没打电话记录

2748
01:42:05,670 --> 01:42:07,320
记录我本身记录到这里面来

2749
01:42:07,650 --> 01:42:09,090
记录到这儿来明白吗

2750
01:42:09,300 --> 01:42:10,950
它记录了还是我说明白吗

2751
01:42:11,010 --> 01:42:12,480
所以在这里边呢

2752
01:42:13,050 --> 01:42:13,680
就不用说了

2753
01:42:13,740 --> 01:42:15,510
你看调用所有water

2754
01:42:15,540 --> 01:42:16,500
调用water是什么

2755
01:42:17,050 --> 01:42:18,250
用water up data

2756
01:42:18,790 --> 01:42:21,580
用water update up water update就是更新

2757
01:42:21,580 --> 01:42:22,030
知道吧

2758
01:42:22,510 --> 01:42:24,040
Water的update就是render

2759
01:42:24,100 --> 01:42:25,450
你现在就可以把它理解为render

2760
01:42:26,530 --> 01:42:27,130
明白

2761
01:42:27,190 --> 01:42:29,800
现在就可以把它理解为这同学明白吗

2762
01:42:31,460 --> 01:42:32,270
现在怎么去

2763
01:42:32,300 --> 01:42:34,700
他怎么怎么挂载到这个update上面的

2764
01:42:34,820 --> 01:42:35,450
把人挂了

2765
01:42:35,480 --> 01:42:36,620
我先我一会儿给你讲

2766
01:42:37,280 --> 01:42:38,780
你看就是去调用notify

2767
01:42:38,810 --> 01:42:40,790
然后去遍历所有是吧

2768
01:42:40,790 --> 01:42:42,260
遍历所有然后去render

2769
01:42:42,710 --> 01:42:43,190
明白吗

2770
01:42:45,980 --> 01:42:46,400
是吧

2771
01:42:46,430 --> 01:42:49,490
所以这块儿你看就是这个电话儿就不用了

2772
01:42:49,730 --> 01:42:51,560
就不用了说再往下来

2773
01:42:52,400 --> 01:42:53,480
再往下再往下来

2774
01:42:53,480 --> 01:42:54,560
我们就可以看到什么

2775
01:42:55,210 --> 01:42:58,420
也可以看到我们的water water我们说了

2776
01:42:59,440 --> 01:43:00,820
在初始化的时候是吧

2777
01:43:01,030 --> 01:43:02,260
说话的时候有很多东西是吧

2778
01:43:02,260 --> 01:43:02,920
有很多东西

2779
01:43:03,590 --> 01:43:04,910
说话的时候他要给到什么

2780
01:43:04,940 --> 01:43:06,080
我们的唯一实例是吧

2781
01:43:06,170 --> 01:43:06,530
还有什么

2782
01:43:06,530 --> 01:43:08,510
还有我们自己的回调的方法是吧

2783
01:43:08,780 --> 01:43:10,880
就是具体我怎么去打电话这块

2784
01:43:10,880 --> 01:43:12,230
他也需要去做一些处理是吧

2785
01:43:13,740 --> 01:43:15,450
是不是也需要做一些处理是吧

2786
01:43:17,780 --> 01:43:18,890
我这块儿是不是一斤

2787
01:43:20,610 --> 01:43:22,890
我这块儿我这块代码已经被干过了

2788
01:43:22,980 --> 01:43:24,960
有一次被做什么被干过了

2789
01:43:25,880 --> 01:43:26,870
这是不是地铺

2790
01:43:28,310 --> 01:43:29,690
你们下来之后可以看一下

2791
01:43:29,690 --> 01:43:31,550
对比一下这个代码和我那个代码

2792
01:43:32,290 --> 01:43:33,820
我这块儿好像被干过了

2793
01:43:33,850 --> 01:43:35,980
应该是deep we的实力上面

2794
01:43:38,610 --> 01:43:40,050
复习我当年那个this

2795
01:43:40,500 --> 01:43:42,240
把我这个东西复习进去

2796
01:43:44,100 --> 01:43:44,640
应该是

2797
01:43:44,940 --> 01:43:45,420
你看一下

2798
01:43:45,750 --> 01:43:46,890
然后它里面有一些物品

2799
01:43:46,890 --> 01:43:47,850
这些物品都不用管了

2800
01:43:48,120 --> 01:43:49,260
各种懒加载各种东西

2801
01:43:49,260 --> 01:43:49,770
然后call back

2802
01:43:49,770 --> 01:43:51,210
这就是我回调的render

2803
01:43:51,360 --> 01:43:53,130
所以我具体要做什么事情

2804
01:43:53,800 --> 01:43:54,940
我具体要做什么事情

2805
01:43:54,940 --> 01:43:56,410
我的water一开始是不会维护的

2806
01:43:56,410 --> 01:43:56,740
知道吧

2807
01:43:57,870 --> 01:43:59,460
我的water自己是不会写死的

2808
01:43:59,460 --> 01:44:00,270
他是通过什么

2809
01:44:00,300 --> 01:44:01,770
通过你初始化的时候

2810
01:44:01,800 --> 01:44:02,640
我来把他传进来的

2811
01:44:02,850 --> 01:44:04,140
然后去添加

2812
01:44:04,140 --> 01:44:07,920
然后我这个water具体维护了哪些依赖是吧

2813
01:44:07,980 --> 01:44:08,670
哪些人

2814
01:44:09,430 --> 01:44:11,410
用了我这个这个对应的这个什么

2815
01:44:11,560 --> 01:44:12,730
这些这些东西是吧

2816
01:44:13,030 --> 01:44:14,740
这些东西然后去做什么

2817
01:44:15,220 --> 01:44:16,180
这是我的打电话

2818
01:44:17,550 --> 01:44:19,680
电话完了之后这边给他

2819
01:44:20,320 --> 01:44:20,440
Good

2820
01:44:20,440 --> 01:44:22,000
其实就没有什么东西

2821
01:44:22,390 --> 01:44:26,950
然后D添加清空update update就是调用

2822
01:44:27,340 --> 01:44:28,180
Update就是调用

2823
01:44:28,890 --> 01:44:32,880
用water update water update就是什么wrong wrong这里边儿就是出发

2824
01:44:32,880 --> 01:44:34,230
Render就是render

2825
01:44:34,590 --> 01:44:35,820
但是他在里面做个批处理

2826
01:44:35,820 --> 01:44:36,990
一会儿再跟你说批处理

2827
01:44:37,470 --> 01:44:38,640
这一会儿再跟你说批处理

2828
01:44:38,880 --> 01:44:41,580
它里边就是调用update update就是粗壮

2829
01:44:41,640 --> 01:44:43,950
粗壮这里边就是什么

2830
01:44:43,980 --> 01:44:44,910
先去获取数据

2831
01:44:44,910 --> 01:44:47,190
你看this To Get是获取数据

2832
01:44:47,280 --> 01:44:48,480
这个数吗

2833
01:44:49,230 --> 01:44:51,720
获取数据56行什么意思

2834
01:44:54,790 --> 01:44:55,180
想我

2835
01:44:55,180 --> 01:44:56,380
我说想我是吧

2836
01:45:00,460 --> 01:45:00,910
这个嘛

2837
01:45:03,280 --> 01:45:06,460
所以你看这一部this term that就是说什么

2838
01:45:06,550 --> 01:45:07,840
就是获取数据是吧

2839
01:45:07,870 --> 01:45:09,730
就是获取数据是不是添加依赖

2840
01:45:09,730 --> 01:45:10,720
处处处理数据

2841
01:45:10,780 --> 01:45:13,180
然后这一步完了之后是吧

2842
01:45:13,510 --> 01:45:15,250
This target完了之后拿到我们的微

2843
01:45:15,250 --> 01:45:16,330
你拿到崴了之后

2844
01:45:16,360 --> 01:45:17,110
然后去做什么

2845
01:45:17,940 --> 01:45:19,170
拿了完了之后去做什么

2846
01:45:19,200 --> 01:45:20,400
去调用回调是吧

2847
01:45:20,520 --> 01:45:22,620
就执行回调叩拜嘛

2848
01:45:22,680 --> 01:45:24,210
就直接回到这里边儿

2849
01:45:24,210 --> 01:45:25,470
就执行回调call back

2850
01:45:25,920 --> 01:45:27,390
回调call back就是我们什么

2851
01:45:27,450 --> 01:45:28,800
就是我们的render

2852
01:45:29,130 --> 01:45:30,180
所以说现在的关

2853
01:45:30,180 --> 01:45:31,200
我们现在叫什么

2854
01:45:31,530 --> 01:45:32,820
现在要关联起来

2855
01:45:32,820 --> 01:45:33,450
关联什么

2856
01:45:34,750 --> 01:45:37,750
怎么把water和render关联起来了

2857
01:45:37,750 --> 01:45:42,100
是不是什么时候什么时候去关联出来写了什么时候初始化

2858
01:45:42,740 --> 01:45:43,970
这里边儿威斯利

2859
01:45:45,520 --> 01:45:47,800
刚刚是不是给他说了这是你的微是吧

2860
01:45:47,890 --> 01:45:48,520
这是你的微

2861
01:45:48,640 --> 01:45:50,020
你的微信在初始化的时候

2862
01:45:50,620 --> 01:45:51,640
会找到一个方法里边儿

2863
01:45:51,850 --> 01:45:54,910
会找到这个生命周期这个方法里边是吧

2864
01:45:55,030 --> 01:45:55,870
找到这个方法里边儿

2865
01:45:56,470 --> 01:45:57,760
Mount a

2866
01:45:57,760 --> 01:45:59,770
我们刚会走道蒙特

2867
01:46:03,690 --> 01:46:04,080
嗯

2868
01:46:07,720 --> 01:46:08,410
Even to

2869
01:46:10,190 --> 01:46:11,690
他的MT是在哪儿

2870
01:46:11,690 --> 01:46:13,910
挂着mount文件夹

2871
01:46:18,990 --> 01:46:19,500
这儿

2872
01:46:20,700 --> 01:46:23,130
这儿会调用下回骂她可以吗

2873
01:46:23,370 --> 01:46:25,800
用下划线下划线MT这一块儿

2874
01:46:26,500 --> 01:46:27,760
就是我们的各种生命周期嘛

2875
01:46:27,760 --> 01:46:28,090
是吧

2876
01:46:28,420 --> 01:46:31,270
初二初二的时候你看它会调用初始化

2877
01:46:31,630 --> 01:46:34,240
初始化的时候他会去挂载各种东西嘛

2878
01:46:34,240 --> 01:46:34,510
是吧

2879
01:46:34,600 --> 01:46:35,740
挂载各种各种东西

2880
01:46:35,830 --> 01:46:37,870
然后就把你的render的render代码

2881
01:46:37,870 --> 01:46:39,160
我们之前是不是给大家看的

2882
01:46:39,770 --> 01:46:42,140
你的render代码是在这里边儿的render代码

2883
01:46:42,140 --> 01:46:43,850
在那边的render代码

2884
01:46:43,850 --> 01:46:45,410
我们之前是不是给大家看到的

2885
01:46:45,440 --> 01:46:47,330
在这里边儿是不是的代码

2886
01:46:47,330 --> 01:46:47,570
是吧

2887
01:46:47,570 --> 01:46:48,680
这是你的render代码是不是

2888
01:46:49,220 --> 01:46:51,050
是不是你的render代码

2889
01:46:51,110 --> 01:46:53,240
我们在这里边儿会把你的render代码拿来

2890
01:46:53,740 --> 01:46:54,550
挂在你的上面

2891
01:46:54,550 --> 01:46:55,780
如果编译的情况下

2892
01:46:55,810 --> 01:46:57,400
他会他会把你的任何代码

2893
01:46:59,710 --> 01:47:00,790
编译的情况下

2894
01:47:00,820 --> 01:47:02,290
会把你的render代码结合进去

2895
01:47:02,470 --> 01:47:03,490
这块稍微有点儿

2896
01:47:03,670 --> 01:47:05,260
这块代码稍微写的有点乱

2897
01:47:05,260 --> 01:47:08,320
因为它这个东西因为有点儿这是执行render

2898
01:47:08,860 --> 01:47:10,600
执行render编译的时候

2899
01:47:10,600 --> 01:47:12,820
应该是在初始化挂载的时候

2900
01:47:12,820 --> 01:47:13,450
我记得是

2901
01:47:15,870 --> 01:47:18,090
他会把你的render给挂载上去

2902
01:47:20,210 --> 01:47:21,110
明周期

2903
01:47:22,150 --> 01:47:23,140
把你的render

2904
01:47:23,470 --> 01:47:25,360
把你的render给挂载上去

2905
01:47:25,360 --> 01:47:28,000
我们之前给大家看到这个render a

2906
01:47:30,520 --> 01:47:31,420
等一下咱们

2907
01:47:32,690 --> 01:47:33,950
把你编译的这个render

2908
01:47:34,010 --> 01:47:36,440
这里边应该没有focused update a monkey的没有

2909
01:47:37,420 --> 01:47:38,440
这是厨房的

2910
01:47:38,470 --> 01:47:39,970
这下发现扔点儿挂载

2911
01:47:40,510 --> 01:47:41,680
这是刘易斯

2912
01:47:43,370 --> 01:47:43,880
不对的

2913
01:47:51,520 --> 01:47:52,180
来收一下吧

2914
01:47:55,170 --> 01:47:55,920
真得儿

2915
01:48:04,120 --> 01:48:04,660
DV

2916
01:48:10,460 --> 01:48:11,000
Render

2917
01:48:11,030 --> 01:48:11,600
小眼

2918
01:48:20,100 --> 01:48:20,880
Build

2919
01:48:23,980 --> 01:48:24,190
哎呀

2920
01:48:24,190 --> 01:48:25,930
我慌了我慌我慌了我慌了

2921
01:48:26,020 --> 01:48:27,370
他这个人就在这儿挂着呢

2922
01:48:28,050 --> 01:48:31,710
是在那个那个那个编译的这块儿

2923
01:48:31,710 --> 01:48:32,400
这块儿挂着了

2924
01:48:32,400 --> 01:48:33,780
说实话这块挂着了

2925
01:48:33,780 --> 01:48:34,290
我慌了

2926
01:48:35,010 --> 01:48:35,760
我是懵逼了

2927
01:48:35,760 --> 01:48:37,800
我说怎么这什么情况他会在这块挂着

2928
01:48:37,890 --> 01:48:39,840
因为不同的都不同的

2929
01:48:40,140 --> 01:48:43,500
不同的什么不同的端它就挂在不同点是吧

2930
01:48:43,860 --> 01:48:44,700
我们是不是错了

2931
01:48:44,910 --> 01:48:46,830
他不同的端去掉挂在不同的render

2932
01:48:46,890 --> 01:48:47,820
应该是在这里边儿

2933
01:48:47,820 --> 01:48:50,550
像我们的那个complaint里边儿

2934
01:48:51,390 --> 01:48:54,390
应该是在plant plant里边有个web web端是吧

2935
01:48:54,450 --> 01:48:55,980
不同的端它就挂在不同的问题

2936
01:48:55,980 --> 01:48:57,720
而是说这一步你看

2937
01:48:59,980 --> 01:49:01,060
在你初始化的时候

2938
01:49:01,060 --> 01:49:01,870
在MT的时候

2939
01:49:01,870 --> 01:49:02,950
你初始化monkey的时候

2940
01:49:02,950 --> 01:49:03,910
这个生命周期的时候

2941
01:49:04,240 --> 01:49:04,600
是啊

2942
01:49:04,900 --> 01:49:05,860
他就会去做什么

2943
01:49:05,980 --> 01:49:08,200
他就会去初始化你的render是吧

2944
01:49:08,320 --> 01:49:11,020
你的render他会判断我们这是之前是不是讲的

2945
01:49:11,580 --> 01:49:12,630
判断你的render是否有

2946
01:49:12,630 --> 01:49:13,320
如果没有的话

2947
01:49:13,320 --> 01:49:14,070
他就做什么

2948
01:49:14,220 --> 01:49:15,390
就会render给初始化

2949
01:49:15,390 --> 01:49:16,530
通过compare编译出来

2950
01:49:16,530 --> 01:49:17,310
这个就不用了吧

2951
01:49:17,400 --> 01:49:21,240
这个昨天花了基本上半个小时来给大家讲render这一块的东西是吧

2952
01:49:22,040 --> 01:49:23,540
编译这一块儿

2953
01:49:23,540 --> 01:49:24,410
它就是一个什么

2954
01:49:24,770 --> 01:49:26,630
就是你编译出来的with是吧

2955
01:49:26,780 --> 01:49:27,620
With render

2956
01:49:27,620 --> 01:49:29,390
然后拿过来这块儿这个什么

2957
01:49:30,030 --> 01:49:31,110
一会儿做一个什么

2958
01:49:31,170 --> 01:49:33,750
这是compare compare在线编译是吧

2959
01:49:33,960 --> 01:49:34,920
这compare在线编译

2960
01:49:34,920 --> 01:49:36,240
在线编译出来的render是吧

2961
01:49:36,360 --> 01:49:37,140
在编译出来的

2962
01:49:37,140 --> 01:49:38,310
然后拿过来挂载是吧

2963
01:49:38,580 --> 01:49:38,970
是不是

2964
01:49:39,620 --> 01:49:41,090
这块明白吗

2965
01:49:41,090 --> 01:49:42,410
这是昨天给大家说的

2966
01:49:43,630 --> 01:49:43,990
清楚吗

2967
01:49:43,990 --> 01:49:44,500
同学们

2968
01:49:44,920 --> 01:49:45,640
这个知道吧

2969
01:49:46,510 --> 01:49:46,780
是吧

2970
01:49:46,780 --> 01:49:48,070
这个不用再花时间收了吧

2971
01:49:49,350 --> 01:49:49,830
是啊

2972
01:49:50,440 --> 01:49:51,370
然后这是你的template

2973
01:49:51,370 --> 01:49:52,270
这是你的render

2974
01:49:52,570 --> 01:49:53,770
拿过来这块儿执行

2975
01:49:53,980 --> 01:49:56,230
包括挂载这些东西都是这个样子

2976
01:49:56,500 --> 01:49:57,190
都这个样子

2977
01:49:57,370 --> 01:49:58,510
昨天是给大家说的

2978
01:49:58,690 --> 01:50:00,280
然后这里边儿拿到render之后

2979
01:50:00,490 --> 01:50:01,660
他这边会做一个什么处理

2980
01:50:01,660 --> 01:50:03,790
会做一个我们的那个

2981
01:50:03,850 --> 01:50:04,780
他会做一个什么处理

2982
01:50:04,840 --> 01:50:05,410
哪块儿去了

2983
01:50:06,820 --> 01:50:09,100
做一个render的挂载

2984
01:50:09,130 --> 01:50:09,970
这是compare

2985
01:50:11,110 --> 01:50:11,890
里面有备注

2986
01:50:11,890 --> 01:50:13,060
他们你们下下来之后

2987
01:50:13,060 --> 01:50:14,440
可以去稍微去看一下

2988
01:50:14,440 --> 01:50:16,870
后边儿都可以去看一下他们的备注

2989
01:50:17,260 --> 01:50:18,070
我这里边儿

2990
01:50:18,100 --> 01:50:19,660
我刚刚说的那个东西到哪去了

2991
01:50:20,140 --> 01:50:20,980
这

2992
01:50:21,710 --> 01:50:22,850
Render如果没有render

2993
01:50:23,120 --> 01:50:25,010
他会去把我们的这个东西去做挂载

2994
01:50:25,010 --> 01:50:26,480
去模板编译

2995
01:50:26,540 --> 01:50:27,560
模板编译画是吧

2996
01:50:27,650 --> 01:50:29,600
然后去把它处理这儿这儿是吧

2997
01:50:29,960 --> 01:50:30,560
挂载是吧

2998
01:50:30,560 --> 01:50:31,070
模板编译

2999
01:50:31,070 --> 01:50:34,730
然后扔点儿这块儿点完了之后点是挂在上去是吧

3000
01:50:34,970 --> 01:50:36,980
是不是点挂在挂在APP上边儿

3001
01:50:37,070 --> 01:50:38,210
挂APP上面之后

3002
01:50:39,160 --> 01:50:40,150
就回到我们这边

3003
01:50:40,390 --> 01:50:41,080
到我们什么

3004
01:50:41,620 --> 01:50:43,660
说实话还是在说话的阶段是吧

3005
01:50:43,930 --> 01:50:46,720
还是在我们生命周期刷一个阶段这里边

3006
01:50:50,690 --> 01:50:52,430
实例化这个这里边儿

3007
01:50:54,280 --> 01:50:57,430
这里边儿这里边儿看到这里边这里边的时候

3008
01:50:57,760 --> 01:50:59,170
它这里边儿就已经

3009
01:50:59,170 --> 01:51:01,960
你看它这里边儿是不是就已经是一个什么过程呢

3010
01:51:01,990 --> 01:51:02,440
同学们

3011
01:51:04,180 --> 01:51:05,560
它这里边儿是不是就已经

3012
01:51:08,990 --> 01:51:11,780
这个缩小缩小在这这里边

3013
01:51:12,350 --> 01:51:14,360
这里边是不是就已经就走到这里边儿了

3014
01:51:14,360 --> 01:51:14,750
是吧

3015
01:51:14,870 --> 01:51:15,620
Mon ti了吗

3016
01:51:15,800 --> 01:51:16,670
是什么

3017
01:51:16,760 --> 01:51:17,240
是什么呢

3018
01:51:17,330 --> 01:51:18,080
生命周期

3019
01:51:18,110 --> 01:51:19,850
包括你的up data的update

3020
01:51:19,850 --> 01:51:21,170
就是你更新的一些逻辑吗

3021
01:51:21,440 --> 01:51:22,340
你更新的一些逻辑

3022
01:51:22,340 --> 01:51:25,190
这里面会有一些一些一些一些处理

3023
01:51:25,190 --> 01:51:26,600
包括搭配齐这些东西

3024
01:51:26,660 --> 01:51:27,260
这个还好

3025
01:51:27,560 --> 01:51:28,190
这个还好

3026
01:51:28,490 --> 01:51:30,170
但是这块儿我们会找到什么

3027
01:51:30,230 --> 01:51:31,850
找到我们的更新逻辑monkey的是吧

3028
01:51:31,910 --> 01:51:32,570
Mounted挂载

3029
01:51:32,720 --> 01:51:33,680
Mount挂载的时候

3030
01:51:33,680 --> 01:51:36,020
你看它会判断你这里边儿有没有

3031
01:51:36,340 --> 01:51:36,760
Render

3032
01:51:36,790 --> 01:51:37,630
如果没有render

3033
01:51:37,690 --> 01:51:38,860
他会去找一些

3034
01:51:38,950 --> 01:51:40,000
就是什么处理

3035
01:51:40,000 --> 01:51:41,180
因为你的option里面没有

3036
01:51:41,180 --> 01:51:41,500
没有

3037
01:51:41,500 --> 01:51:42,370
竟然还没有人儿

3038
01:51:42,370 --> 01:51:43,480
没有人儿就报错是吧

3039
01:51:43,870 --> 01:51:44,710
然后去走一些

3040
01:51:44,830 --> 01:51:45,970
然后去做什么

3041
01:51:46,120 --> 01:51:47,140
做一个挂载

3042
01:51:47,170 --> 01:51:49,900
就是真正去更新数据的方法

3043
01:51:49,900 --> 01:51:51,160
他会怎么去做一下

3044
01:51:51,310 --> 01:51:52,990
这个是第一位环节呢

3045
01:51:52,990 --> 01:51:53,770
你可以不用管

3046
01:51:53,920 --> 01:51:55,960
就是怎么去更新数据的方法

3047
01:51:56,020 --> 01:51:57,160
他会去把它封装起来

3048
01:51:57,490 --> 01:51:58,630
怎么去更新数据的方法

3049
01:51:58,630 --> 01:51:58,960
同学们

3050
01:51:59,290 --> 01:52:00,160
这是我的render

3051
01:52:00,250 --> 01:52:01,210
这是我的render

3052
01:52:01,710 --> 01:52:03,840
这是我自自定义的render是吧

3053
01:52:04,290 --> 01:52:05,970
然后把这个render传到一块儿去

3054
01:52:06,300 --> 01:52:07,830
传到我这个

3055
01:52:07,920 --> 01:52:09,630
我这个update里面去是吧

3056
01:52:09,900 --> 01:52:10,890
我这个APP在里面去

3057
01:52:10,950 --> 01:52:12,810
我这个APP里边儿还维护了一些什么

3058
01:52:12,900 --> 01:52:14,670
维护了一些东地府是吧

3059
01:52:15,320 --> 01:52:16,010
构建好了之后

3060
01:52:16,010 --> 01:52:17,570
你看这是我的东地方是吧

3061
01:52:17,570 --> 01:52:19,010
这是我的之前的DF

3062
01:52:19,010 --> 01:52:20,450
这是我之后的DF是吧

3063
01:52:20,480 --> 01:52:21,890
然后去动的这个过程

3064
01:52:22,070 --> 01:52:24,170
所以说在这一步他会拿着我是吧

3065
01:52:25,480 --> 01:52:26,920
他会构建一个方法

3066
01:52:26,920 --> 01:52:28,720
这个方法就是包含了我这个render

3067
01:52:28,750 --> 01:52:30,400
包括我们的这个方法

3068
01:52:30,550 --> 01:52:31,570
然后拿到那边去

3069
01:52:31,570 --> 01:52:32,350
拿到那边去

3070
01:52:32,710 --> 01:52:34,810
你看到这里边来看到吗同学们

3071
01:52:35,400 --> 01:52:36,900
把这个方法吗给到这里边来

3072
01:52:36,930 --> 01:52:38,730
看到这儿出错

3073
01:52:39,780 --> 01:52:40,230
看到吗

3074
01:52:40,500 --> 01:52:41,130
这说实话

3075
01:52:41,940 --> 01:52:42,780
然后在这之前

3076
01:52:42,780 --> 01:52:44,010
在调这个生命周期之前

3077
01:52:44,010 --> 01:52:45,090
调一下before update

3078
01:52:45,920 --> 01:52:48,200
明白了明白了吗

3079
01:52:49,030 --> 01:52:49,840
听明白了吗

3080
01:52:50,080 --> 01:52:51,040
这不就赚钱了吗

3081
01:52:52,260 --> 01:52:53,940
不就算起来初始化的时候

3082
01:52:53,970 --> 01:52:55,080
这个过程就算起来了吗

3083
01:52:55,740 --> 01:52:56,640
你这个render

3084
01:52:56,880 --> 01:52:58,350
你这个render执行完了之后

3085
01:52:59,260 --> 01:53:00,370
你这个文件执行完之后

3086
01:53:00,370 --> 01:53:03,100
它这里边就是做什么过程就是什么过程

3087
01:53:03,250 --> 01:53:04,180
就是去不断

3088
01:53:05,080 --> 01:53:06,430
东帝夫的过程是吧

3089
01:53:06,610 --> 01:53:08,500
地府的过程是多么地服

3090
01:53:08,500 --> 01:53:09,430
我们这块儿不讲

3091
01:53:09,580 --> 01:53:09,820
兄弟

3092
01:53:09,820 --> 01:53:12,040
府里边儿有一个算法的目的

3093
01:53:12,040 --> 01:53:12,790
我们在

3094
01:53:13,870 --> 01:53:14,830
我们在那个什么

3095
01:53:19,080 --> 01:53:19,800
嗯

3096
01:53:20,620 --> 01:53:21,880
你应该下的是V1

3097
01:53:22,180 --> 01:53:23,710
下的不是V2吗

3098
01:53:26,740 --> 01:53:30,040
我这个一我这个应该是有几问题

3099
01:53:30,040 --> 01:53:31,060
应该差不多吧

3100
01:53:31,060 --> 01:53:32,530
差不了差不了太多知道吧

3101
01:53:32,890 --> 01:53:33,880
应该差不了太多

3102
01:53:36,200 --> 01:53:37,100
差不了太多

3103
01:53:37,130 --> 01:53:37,820
没什么区别

3104
01:53:38,550 --> 01:53:39,300
这没什么区别

3105
01:53:39,300 --> 01:53:40,200
还有什么区别吗

3106
01:53:40,890 --> 01:53:41,790
这不就这些区别吗

3107
01:53:41,790 --> 01:53:43,830
你说这些没有备注吗

3108
01:53:43,830 --> 01:53:44,550
你说没有备注吗

3109
01:53:44,640 --> 01:53:45,570
备注是我写的

3110
01:53:45,810 --> 01:53:47,550
这文中文备注全是我写的

3111
01:53:48,790 --> 01:53:49,930
这位妹子是我写的

3112
01:53:49,960 --> 01:53:50,980
我下来之后给你们

3113
01:53:52,460 --> 01:53:53,180
你以为呢

3114
01:53:56,290 --> 01:53:56,590
你

3115
01:53:56,590 --> 01:53:58,510
你见过哪些人血中中文备注

3116
01:53:58,540 --> 01:54:00,160
他会觉得写中文很low逼

3117
01:54:00,800 --> 01:54:01,970
那其实现在中国话

3118
01:54:01,970 --> 01:54:03,470
全世界都在学中国话是吧

3119
01:54:05,310 --> 01:54:06,780
她觉得写中文很牛逼

3120
01:54:07,020 --> 01:54:08,790
是不是其实就应该写中文

3121
01:54:12,020 --> 01:54:12,980
所以你看他这一步

3122
01:54:13,190 --> 01:54:14,930
他完了之后就会地府

3123
01:54:14,930 --> 01:54:19,070
地府我们这块儿讲东地府在数据结构与算法那块儿

3124
01:54:19,870 --> 01:54:22,180
有专门的结论给大家讲好吧

3125
01:54:22,330 --> 01:54:24,610
我们这块就不用给大家说这一步

3126
01:54:24,640 --> 01:54:26,020
你看整个过程是不是就拉起来了

3127
01:54:26,170 --> 01:54:26,560
是吧

3128
01:54:26,830 --> 01:54:27,820
绌发动触发

3129
01:54:27,850 --> 01:54:29,680
整个东西是不是全部拿拿起来了

3130
01:54:29,890 --> 01:54:32,050
所以这一步整个过程拿起来完了之后

3131
01:54:32,230 --> 01:54:33,220
稍微出发render是吧

3132
01:54:33,280 --> 01:54:34,510
Water里边儿出发render

3133
01:54:34,980 --> 01:54:35,400
Water

3134
01:54:36,250 --> 01:54:36,790
调用

3135
01:54:36,820 --> 01:54:38,590
然后出发去update a是吧

3136
01:54:39,240 --> 01:54:39,510
同学

3137
01:54:39,510 --> 01:54:40,140
明白了吗

3138
01:54:40,810 --> 01:54:42,130
这整个过程

3139
01:54:42,280 --> 01:54:45,310
现在整个整个过程你们现在自己再看一遍吗

3140
01:54:45,460 --> 01:54:47,200
很多小的细节上的东西

3141
01:54:47,530 --> 01:54:50,230
就比如说他哪块儿什么时候去执行生命周期

3142
01:54:50,530 --> 01:54:51,880
比如说什么monkey的

3143
01:54:51,880 --> 01:54:52,600
那些生命周期

3144
01:54:52,600 --> 01:54:53,290
那些生命周期

3145
01:54:53,290 --> 01:54:55,930
那些什么before after的这个各种生命周期

3146
01:54:55,930 --> 01:54:57,280
它就是不同的一个流程

3147
01:54:57,310 --> 01:54:58,840
直接拉下来就执行就行了

3148
01:54:59,350 --> 01:55:00,610
这个东西我就不给大家讲了

3149
01:55:00,610 --> 01:55:02,050
生命周期这个东西很简单了

3150
01:55:02,170 --> 01:55:02,560
知道吧

3151
01:55:03,330 --> 01:55:05,520
所以说这个整个流程就基本拉通了

3152
01:55:05,700 --> 01:55:06,660
这个流程拉通了

3153
01:55:06,780 --> 01:55:08,310
现在我还要给大家讲几个东西

3154
01:55:08,340 --> 01:55:09,600
第一个批处理

3155
01:55:09,990 --> 01:55:11,460
我们刚刚说了water

3156
01:55:11,700 --> 01:55:14,340
你看我们这个water掉update的时候

3157
01:55:14,670 --> 01:55:16,140
他直接跳掉软是吧

3158
01:55:16,230 --> 01:55:19,620
调入如果如果如果是同步的情况下调用

3159
01:55:19,890 --> 01:55:20,550
他会调人

3160
01:55:20,730 --> 01:55:22,380
那调人的时候会走什么

3161
01:55:22,830 --> 01:55:24,120
会走这里边儿这个转是吧

3162
01:55:24,240 --> 01:55:25,200
走这个转的时候

3163
01:55:25,230 --> 01:55:28,440
他判断当前这个状态是激活了的时候

3164
01:55:28,470 --> 01:55:31,230
他会走什么call back call back不就是我们的render嘛

3165
01:55:31,230 --> 01:55:31,410
是吧

3166
01:55:31,410 --> 01:55:33,450
就是我们那个update component是吧

3167
01:55:33,690 --> 01:55:37,560
我们这儿写的update component是是这个东西是吧

3168
01:55:37,890 --> 01:55:40,710
就用这个东西掉这个东西的时候就会执行update

3169
01:55:40,710 --> 01:55:41,880
就会执行render是吧

3170
01:55:42,240 --> 01:55:44,010
那这个过程同学们

3171
01:55:44,770 --> 01:55:46,420
这个过程我要给大家说的是

3172
01:55:48,140 --> 01:55:49,670
他这儿做了一个批处理

3173
01:55:49,880 --> 01:55:50,720
什么叫批处理

3174
01:55:50,750 --> 01:55:51,770
就是说他不会

3175
01:55:52,530 --> 01:55:54,390
每一次都直接去重新调

3176
01:55:54,480 --> 01:55:57,060
为什么我要调update update一个批处理

3177
01:55:57,060 --> 01:55:58,080
批处理是什么意思

3178
01:55:59,440 --> 01:56:00,340
就比如说我现在

3179
01:56:01,220 --> 01:56:02,150
我不断

3180
01:56:02,270 --> 01:56:03,860
我现在我们刚刚说了

3181
01:56:03,860 --> 01:56:05,450
这修改了99是吧

3182
01:56:05,450 --> 01:56:05,900
修改了

3183
01:56:06,140 --> 01:56:07,340
你看我这循环了

3184
01:56:07,490 --> 01:56:08,690
我们这个洞这个洞

3185
01:56:10,330 --> 01:56:10,870
哪个洞

3186
01:56:13,940 --> 01:56:14,690
这个东西是吧

3187
01:56:15,470 --> 01:56:17,060
我们这是循环了99次

3188
01:56:17,060 --> 01:56:19,820
是不循环了99次是同学是吧

3189
01:56:20,510 --> 01:56:21,710
那么循环了99次

3190
01:56:21,710 --> 01:56:24,110
这里边他只修改了一次是吧

3191
01:56:24,170 --> 01:56:25,160
只展示了一次

3192
01:56:25,670 --> 01:56:26,720
那怎么办

3193
01:56:26,720 --> 01:56:27,350
他怎么处理的

3194
01:56:27,830 --> 01:56:28,460
怎么处理的

3195
01:56:28,550 --> 01:56:29,330
在这里边儿

3196
01:56:30,040 --> 01:56:31,450
我们在这儿做了处理

3197
01:56:31,840 --> 01:56:32,950
在这做的处理是吧

3198
01:56:33,310 --> 01:56:34,690
我们是在这里边做的处理

3199
01:56:35,870 --> 01:56:37,670
在这里边儿再update的时候

3200
01:56:38,490 --> 01:56:40,260
After的时候在这儿做了处理是吧

3201
01:56:40,530 --> 01:56:41,220
这做什么处理

3202
01:56:41,220 --> 01:56:42,660
同学就很简单

3203
01:56:42,780 --> 01:56:43,500
这是做什么处理

3204
01:56:45,800 --> 01:56:46,820
你看我们在这一步

3205
01:56:47,420 --> 01:56:52,040
它会把如果你当前全局没有全局这个全局对象

3206
01:56:52,250 --> 01:56:53,360
全局没有B

3207
01:56:53,510 --> 01:56:55,610
这个BTE我会初始化一个闭气

3208
01:56:55,700 --> 01:56:58,670
然后把我当成这个water添加到我这个BT里边

3209
01:56:58,910 --> 01:57:01,490
添加到我这个BT里面是添加了这个BT里边

3210
01:57:02,140 --> 01:57:04,120
就是我这个对象里边这个东西

3211
01:57:04,920 --> 01:57:06,540
这个这个this添加里边儿

3212
01:57:06,540 --> 01:57:07,890
我这里边儿这个S呢

3213
01:57:08,250 --> 01:57:10,170
是不是有字具体的render

3214
01:57:10,170 --> 01:57:11,100
有具体的call back呀

3215
01:57:11,100 --> 01:57:11,970
所以说我不用管

3216
01:57:11,970 --> 01:57:14,730
我只要water添加里边儿来的时候

3217
01:57:14,790 --> 01:57:15,600
然后这个water

3218
01:57:15,600 --> 01:57:16,950
这个BT什么时候执行呢

3219
01:57:16,950 --> 01:57:18,420
我们来看一下这个B什么时候执行

3220
01:57:19,520 --> 01:57:20,360
你看这个必选

3221
01:57:21,070 --> 01:57:21,700
这是个闭气

3222
01:57:21,700 --> 01:57:22,180
我说实话

3223
01:57:22,180 --> 01:57:24,520
这个时候它会调用rest rest是什么

3224
01:57:24,640 --> 01:57:25,270
会判断

3225
01:57:25,270 --> 01:57:27,160
会构建一个空的map空间

3226
01:57:27,160 --> 01:57:27,880
空的队列

3227
01:57:28,360 --> 01:57:29,200
给一个标识符

3228
01:57:29,230 --> 01:57:30,190
没有等待的过程

3229
01:57:30,490 --> 01:57:32,530
然后在这一步你会调调用谱系是吧

3230
01:57:32,530 --> 01:57:33,460
我们调用谱系的时候

3231
01:57:33,460 --> 01:57:35,380
同学们你看用细的时候

3232
01:57:35,950 --> 01:57:37,600
判断你这个东西的ID

3233
01:57:37,630 --> 01:57:39,580
如果没有里边添加是吧

3234
01:57:40,120 --> 01:57:41,230
往这个队列里面添加

3235
01:57:41,840 --> 01:57:43,880
然后给他加个标识

3236
01:57:43,880 --> 01:57:44,330
食醋

3237
01:57:44,510 --> 01:57:46,310
然后我在里边判断是否在等待

3238
01:57:46,400 --> 01:57:48,980
没有等待就是没有正在运行的过程

3239
01:57:49,580 --> 01:57:50,210
那怎么办

3240
01:57:51,060 --> 01:57:52,770
就把字为正在运行的过程

3241
01:57:52,950 --> 01:57:54,540
字为韵正在运行的过程之后

3242
01:57:54,750 --> 01:58:00,090
然后去判断我当前是否支持Thomas和system out就是支撑红任务和微任务

3243
01:58:00,150 --> 01:58:01,260
如果支持的话

3244
01:58:01,410 --> 01:58:04,380
要用什么this flash调用一个什么全局更新

3245
01:58:04,770 --> 01:58:07,320
调用flash flash会有一个什么过程

3246
01:58:07,650 --> 01:58:08,940
这个party是什么时候

3247
01:58:08,970 --> 01:58:09,570
这是宏任务

3248
01:58:09,570 --> 01:58:10,170
微任务啦

3249
01:58:10,170 --> 01:58:10,440
是吧

3250
01:58:10,560 --> 01:58:11,550
他在下一帧

3251
01:58:12,040 --> 01:58:13,240
才去做处理了是不是

3252
01:58:13,510 --> 01:58:17,740
那所以说你只要在这个宏任务微任务这个时间段内

3253
01:58:18,920 --> 01:58:21,830
你都来修改这个这个这个操作

3254
01:58:22,190 --> 01:58:23,870
他每一次都来修改这个操作

3255
01:58:23,930 --> 01:58:25,430
你都会触发这个water是吧

3256
01:58:25,460 --> 01:58:26,750
都会触发这个water的update

3257
01:58:27,050 --> 01:58:28,280
都出了这个water up data

3258
01:58:28,700 --> 01:58:31,160
但是他在里边一直就有你这个ID是吧

3259
01:58:31,220 --> 01:58:31,850
他在里边儿

3260
01:58:31,880 --> 01:58:33,200
里边儿就不会去做什么

3261
01:58:33,500 --> 01:58:35,600
就不会往这里边儿去再再复习了

3262
01:58:35,600 --> 01:58:35,990
知道吗

3263
01:58:36,230 --> 01:58:39,020
它这里边就一直保留着你这个东西懂不懂

3264
01:58:39,520 --> 01:58:40,750
一直保留着你这个东西

3265
01:58:40,840 --> 01:58:41,860
保证这个东西之后

3266
01:58:41,890 --> 01:58:43,450
然后到了下一帧的时候

3267
01:58:43,630 --> 01:58:48,160
到了下一针下一针的什么那个那个那个V任务的时候

3268
01:58:49,260 --> 01:58:50,190
下一站微任务的时候

3269
01:58:50,190 --> 01:58:52,440
这段时间内你触发所有的修改

3270
01:58:52,650 --> 01:58:53,610
调用它的update

3271
01:58:53,610 --> 01:58:59,790
你是不是每一次修改都会调用water的update update都会去添加这个任务是吧

3272
01:58:59,910 --> 01:59:01,920
但是每一次添加这个之前

3273
01:59:01,920 --> 01:59:02,790
因为这儿有一个了

3274
01:59:02,790 --> 01:59:04,440
所以说这都添加不进来是吧

3275
01:59:04,500 --> 01:59:06,000
他只会维护一个卧室吧

3276
01:59:06,450 --> 01:59:07,590
这个我一个water

3277
01:59:08,720 --> 01:59:11,510
然后在你到了下一个生命周期的时候

3278
01:59:12,200 --> 01:59:13,370
要调用这个flash是吧

3279
01:59:13,520 --> 01:59:17,000
用flash调用flash的时候去便利你这个water里边儿的是吗

3280
01:59:17,820 --> 01:59:18,450
队列是吧

3281
01:59:18,600 --> 01:59:19,830
这个队列然后去执行什么

3282
01:59:19,860 --> 01:59:24,570
Call back water call back water call back就会执行什么我们具体的什么render

3283
01:59:24,810 --> 01:59:25,650
对water

3284
01:59:25,650 --> 01:59:27,570
课外就会执行我们具体的render

3285
01:59:27,630 --> 01:59:29,010
所以说这边water你看

3286
01:59:30,330 --> 01:59:31,530
如果是批处理

3287
01:59:31,560 --> 01:59:33,420
你看把我的water添加了什么

3288
01:59:33,660 --> 01:59:34,800
添加我这个队列里面去

3289
01:59:35,070 --> 01:59:36,180
看到添加了

3290
01:59:36,180 --> 01:59:37,170
我这儿也维护了

3291
01:59:37,170 --> 01:59:38,340
他这儿也维护了对立

3292
01:59:38,460 --> 01:59:39,630
到维护这个对立

3293
01:59:39,780 --> 01:59:40,620
然后判断有没有

3294
01:59:40,620 --> 01:59:41,610
你看它也是这个样子

3295
01:59:41,700 --> 01:59:42,900
看到判断有没有

3296
01:59:43,080 --> 01:59:44,400
如果没有没有刷新

3297
01:59:44,920 --> 01:59:45,850
往这队里边儿

3298
01:59:46,770 --> 01:59:47,940
这他做了一个排序

3299
01:59:49,680 --> 01:59:50,340
做一个排序

3300
01:59:50,880 --> 01:59:51,870
然后去拿这个玩意儿

3301
01:59:51,990 --> 01:59:53,760
然后拿这玩意儿判断有没有带

3302
01:59:53,790 --> 01:59:54,600
如果没有等待

3303
01:59:55,380 --> 01:59:55,860
怎么

3304
01:59:56,550 --> 01:59:59,010
加到下一个红微任务队列里面去是吧

3305
01:59:59,160 --> 02:00:00,480
Next tick是什么

3306
02:00:00,780 --> 02:00:02,550
让他们next tick就是一个什么过程

3307
02:00:03,090 --> 02:00:05,460
就是一个去执行这个promise的过程

3308
02:00:05,640 --> 02:00:07,710
包括next tick没有喷嚏的时候

3309
02:00:07,920 --> 02:00:08,220
你看

3310
02:00:08,310 --> 02:00:09,810
Next tick这个东西你看

3311
02:00:10,630 --> 02:00:11,470
如果扣他

3312
02:00:12,140 --> 02:00:12,860
有的时候

3313
02:00:13,570 --> 02:00:13,990
因为有

3314
02:00:14,710 --> 02:00:17,650
就会把你这个东西拿放到你这个call back里面是吧

3315
02:00:18,070 --> 02:00:19,300
加到一个全局的课外课

3316
02:00:19,330 --> 02:00:20,770
然后没有喷顶

3317
02:00:21,510 --> 02:00:23,790
就会盼就会执行处

3318
02:00:23,820 --> 02:00:28,260
然后去执行这个timer function function就是很多

3319
02:00:28,260 --> 02:00:29,610
你看就他们function就是什么

3320
02:00:29,820 --> 02:00:32,070
就是不同的per me是封装起来的

3321
02:00:32,070 --> 02:00:33,180
然后去执行你的回调

3322
02:00:33,870 --> 02:00:35,670
你的回调就是不同的什么

3323
02:00:36,180 --> 02:00:38,880
你的回调你看这是任务回到回到这全都是微任务

3324
02:00:39,270 --> 02:00:41,010
就是泡米丝这他妈的

3325
02:00:41,070 --> 02:00:42,540
所以说你们说那个什么

3326
02:00:45,160 --> 02:00:45,670
对呀

3327
02:00:45,760 --> 02:00:47,320
什么时候他更心动

3328
02:00:47,620 --> 02:00:48,910
他什么时候可以更新动态

3329
02:00:49,120 --> 02:00:52,390
他为什么在这个在你next dick的时候你才可以拿到动

3330
02:00:53,670 --> 02:00:55,320
因为他在next dick的时候

3331
02:00:55,320 --> 02:00:56,490
他才会更心动

3332
02:00:56,730 --> 02:00:58,530
这个时候你才可以拿到更心动

3333
02:00:58,890 --> 02:00:59,790
现在明白了吗

3334
02:01:01,090 --> 02:01:03,160
这个时候才会到调用call back呀

3335
02:01:04,990 --> 02:01:06,460
才用掉才会调用科派克

3336
02:01:06,460 --> 02:01:07,150
才会触发render

3337
02:01:07,150 --> 02:01:08,050
才会去更新动漫

3338
02:01:08,230 --> 02:01:11,260
所以说你在这个时候才去拿到动物才是才是对的

3339
02:01:13,420 --> 02:01:13,990
对呀

3340
02:01:14,230 --> 02:01:14,770
对呀

3341
02:01:15,340 --> 02:01:17,020
这不就是一个微任务吗

3342
02:01:17,050 --> 02:01:19,210
是不是这就是like dickX的课

3343
02:01:19,450 --> 02:01:20,530
然后你的call back是吧

3344
02:01:20,920 --> 02:01:21,880
然后你的content嘛

3345
02:01:22,090 --> 02:01:22,480
是吧

3346
02:01:22,960 --> 02:01:24,130
它里面就是一个网

3347
02:01:24,130 --> 02:01:25,840
你这个call back里边儿去加回调是吧

3348
02:01:26,170 --> 02:01:26,980
加回调是吧

3349
02:01:27,040 --> 02:01:28,060
Cur加回调

3350
02:01:28,850 --> 02:01:29,510
然后将回调

3351
02:01:29,540 --> 02:01:31,280
然后在里边儿触发一个什么唐门

3352
02:01:32,070 --> 02:01:33,630
然后去执行我这个回调

3353
02:01:33,750 --> 02:01:34,710
这个回调是什么

3354
02:01:34,830 --> 02:01:35,730
就是我这个东西吗

3355
02:01:36,120 --> 02:01:37,290
不就是你这个

3356
02:01:37,350 --> 02:01:38,280
就是你这个什么

3357
02:01:38,610 --> 02:01:40,770
你这个这个这个这个call back吗

3358
02:01:40,800 --> 02:01:41,100
是吧

3359
02:01:41,550 --> 02:01:41,940
是吧

3360
02:01:42,450 --> 02:01:45,750
我这里边儿执行的也就是我这个flashback flashback就是吗

3361
02:01:45,780 --> 02:01:48,720
拿到你这个扣扣全部及时执行明白吧

3362
02:01:48,780 --> 02:01:49,560
这是客

3363
02:01:50,300 --> 02:01:51,890
所以你看这个东西就是一个什么

3364
02:01:53,060 --> 02:01:55,070
异步任务为二

3365
02:01:57,270 --> 02:01:58,200
基本上就这些

3366
02:01:58,230 --> 02:01:59,100
还有最后一个点

3367
02:01:59,160 --> 02:02:00,330
还有最后一个知识点

3368
02:02:01,390 --> 02:02:03,760
V2和V3基本上

3369
02:02:03,760 --> 02:02:04,630
V2基本上就是这些

3370
02:02:04,660 --> 02:02:06,010
基本上这些虚拟的

3371
02:02:06,010 --> 02:02:06,880
我们这个就不用说了

3372
02:02:07,360 --> 02:02:08,290
我们这个就不用说了

3373
02:02:08,290 --> 02:02:09,940
需要我们这个就是他的一个

3374
02:02:09,940 --> 02:02:13,060
他有同学不知道虚拟到底是什么

3375
02:02:13,120 --> 02:02:15,190
有没有同学不知道虚拟到底是什么

3376
02:02:15,740 --> 02:02:17,180
有没有有的同学抠个零

3377
02:02:17,210 --> 02:02:17,690
我看一下

3378
02:02:25,060 --> 02:02:25,810
有一个同学

3379
02:02:26,320 --> 02:02:29,590
续洞是什么洞就是一个

3380
02:02:29,800 --> 02:02:30,610
同学们看

3381
02:02:31,420 --> 02:02:32,650
我给大家说一下虚拟动什么

3382
02:02:32,920 --> 02:02:34,120
这是我的真实动物是吧

3383
02:02:34,540 --> 02:02:36,190
这是我的一个真实动物节点是吧

3384
02:02:36,550 --> 02:02:36,970
是不是

3385
02:02:37,880 --> 02:02:39,200
那我真实冻结点

3386
02:02:39,260 --> 02:02:42,350
我是不是每一次操作都是一个什么操作的过程

3387
02:02:42,650 --> 02:02:43,850
都是一个什么操作的过程

3388
02:02:44,800 --> 02:02:47,410
都是一个真正要去做什么读写操作的过程

3389
02:02:47,830 --> 02:02:49,000
比如说很简单的例子

3390
02:02:49,640 --> 02:02:50,510
我这个冻结

3391
02:02:51,540 --> 02:02:52,320
我这个怎么减

3392
02:02:53,980 --> 02:02:54,820
这是个冻结

3393
02:02:55,330 --> 02:02:56,410
我这动节点

3394
02:02:56,440 --> 02:02:57,940
我每一次操作它的时候

3395
02:02:58,300 --> 02:02:59,800
它上面有原生的点

3396
02:02:59,800 --> 02:03:00,550
有多少个属性

3397
02:03:00,880 --> 02:03:01,390
你看一下

3398
02:03:05,340 --> 02:03:06,240
你看有多少个属性

3399
02:03:11,960 --> 02:03:13,130
你看上面有多少属性

3400
02:03:13,280 --> 02:03:14,870
有这么多个属性看见了吗

3401
02:03:15,080 --> 02:03:17,240
我正常的多么节点有多个属性

3402
02:03:17,300 --> 02:03:18,980
我如果我的页面

3403
02:03:19,550 --> 02:03:22,790
我直接每一次操作的洞全是直接操作这些动

3404
02:03:23,480 --> 02:03:24,980
全是直接操作的这些东西

3405
02:03:25,550 --> 02:03:28,700
我是不是每一次就会就会就会修改很多数据

3406
02:03:28,700 --> 02:03:30,440
是不是我的性能是不是就很低

3407
02:03:30,800 --> 02:03:34,490
是不是因为我每一次修改的时候都会有数据的监听

3408
02:03:34,490 --> 02:03:36,230
都会有数据的处理是不是

3409
02:03:36,880 --> 02:03:39,220
我在内存里边儿保存能够保存这种数据吗

3410
02:03:39,820 --> 02:03:41,140
是不能够保存这种数据

3411
02:03:41,200 --> 02:03:44,560
是不是因为我要做多么的负是什么

3412
02:03:46,000 --> 02:03:47,590
VIVO的对对对对对

3413
02:03:47,860 --> 02:03:49,330
就这微动就是微动

3414
02:03:50,540 --> 02:03:52,490
我我是不是我这里边会有遗漏的

3415
02:03:52,490 --> 02:03:53,360
为什么要微漏的

3416
02:03:53,360 --> 02:03:54,590
就是我们要当dif是吧

3417
02:03:54,920 --> 02:03:56,810
我们就需要去对比是吧

3418
02:03:56,810 --> 02:04:00,020
我们说了第一次修改和第二次修改是不一不一样

3419
02:04:00,020 --> 02:04:01,250
我们才去修改某一个节点

3420
02:04:01,520 --> 02:04:04,340
这一次修改和这一次修改是不一样是吧

3421
02:04:04,790 --> 02:04:06,050
我是去修改这个节点是吧

3422
02:04:06,690 --> 02:04:08,280
那些这些点是不是就不需要修改

3423
02:04:08,280 --> 02:04:09,210
那怎么去修

3424
02:04:09,330 --> 02:04:12,060
对比是我需要保存起来才会对比

3425
02:04:12,060 --> 02:04:14,970
我我需要把上一次节点保存起来才能对比呢

3426
02:04:14,970 --> 02:04:16,170
我保存上一次的节点

3427
02:04:16,350 --> 02:04:17,700
那我如果保存的是这个节点

3428
02:04:17,760 --> 02:04:18,480
同学我问你

3429
02:04:19,200 --> 02:04:19,920
原时间是不是

3430
02:04:19,920 --> 02:04:21,720
你看有这么多属性看到吗

3431
02:04:21,960 --> 02:04:23,820
是不是特别占内存是不是

3432
02:04:24,300 --> 02:04:24,900
那怎么办

3433
02:04:25,050 --> 02:04:25,920
我就把这个节点

3434
02:04:26,690 --> 02:04:28,400
对比的时候也要对比这么属性

3435
02:04:28,460 --> 02:04:28,970
那怎么办

3436
02:04:29,180 --> 02:04:30,050
我把它抽你一下

3437
02:04:30,720 --> 02:04:32,940
我真的我们真的使用的时候就得几个属性

3438
02:04:33,270 --> 02:04:34,290
就这几个属性是吧

3439
02:04:34,410 --> 02:04:35,730
就是他的标签儿是吧

3440
02:04:35,730 --> 02:04:36,690
他的标签名是什么

3441
02:04:36,990 --> 02:04:39,240
它上面的这几个ID属性是什么是吧

3442
02:04:39,450 --> 02:04:40,680
还有它的子节点是什么

3443
02:04:40,710 --> 02:04:44,730
它的子节点是不是又是标签是什么ID子节点是吗

3444
02:04:44,760 --> 02:04:46,470
你看就抽离层这种节点

3445
02:04:46,560 --> 02:04:48,540
这种结构是这种结构

3446
02:04:50,730 --> 02:04:51,180
是不是

3447
02:05:01,415 --> 02:05:02,780
我要把这个人禁言了

3448
02:05:15,560 --> 02:05:16,220
出问题了吗

3449
02:05:30,560 --> 02:05:31,460
反正不管怎么教

3450
02:05:31,460 --> 02:05:32,810
你们明白这个意思就行

3451
02:05:33,200 --> 02:05:33,680
好吧

3452
02:05:34,300 --> 02:05:34,960
不管怎么教

3453
02:05:34,960 --> 02:05:36,310
你们明白这个意思就行

3454
02:05:36,340 --> 02:05:36,880
好不好

3455
02:05:37,600 --> 02:05:38,320
你别说话

3456
02:05:38,380 --> 02:05:38,800
你一说话

3457
02:05:38,800 --> 02:05:39,850
我现在又看到好多条

3458
02:05:39,850 --> 02:05:40,810
你们先别说话了好吧

3459
02:05:45,660 --> 02:05:46,320
你们别说话啦

3460
02:05:46,320 --> 02:05:46,770
别说话啦

3461
02:05:46,770 --> 02:05:47,040
我问

3462
02:05:47,040 --> 02:05:47,670
你们在说话

3463
02:05:49,910 --> 02:05:50,570
别说话啦

3464
02:05:50,870 --> 02:05:51,770
可别说话了

3465
02:05:55,430 --> 02:05:56,390
我的滚动条出问题了

3466
02:05:56,390 --> 02:05:57,530
他这是是不是

3467
02:05:58,070 --> 02:06:00,650
所以你看这一部这个这个东西明白了吗

3468
02:06:00,650 --> 02:06:01,490
这个东西明白了吗

3469
02:06:01,730 --> 02:06:02,060
徐总

3470
02:06:02,060 --> 02:06:03,530
我们这个这个东西明白了吧

3471
02:06:06,900 --> 02:06:08,850
所以这一步一

3472
02:06:08,880 --> 02:06:09,900
我看见你们的意啦

3473
02:06:11,080 --> 02:06:13,270
所以这这就是虚拟动物为什么要有的

3474
02:06:13,270 --> 02:06:14,500
他就抽了一个过程

3475
02:06:14,650 --> 02:06:15,220
那需招募

3476
02:06:15,220 --> 02:06:16,690
你看把徐州牧拿过来

3477
02:06:16,870 --> 02:06:19,540
根据这个项目我我们可以制定render

3478
02:06:19,810 --> 02:06:20,260
知道吧

3479
02:06:20,410 --> 02:06:23,350
你们下来之后自己去搜一下虚拟动物的那个render

3480
02:06:23,350 --> 02:06:23,980
其实很简单

3481
02:06:24,100 --> 02:06:25,690
你看我拿到我这个虚拟动

3482
02:06:25,780 --> 02:06:27,130
然后便利你这个对象是吧

3483
02:06:27,130 --> 02:06:29,230
便利这个对象拿着我这个胎给他

3484
02:06:29,560 --> 02:06:32,320
我他根据他创建我们标签是吧

3485
02:06:32,410 --> 02:06:34,330
然后便利你这个target的purpose

3486
02:06:34,540 --> 02:06:36,820
然后往这purpose上面去添加属性

3487
02:06:36,970 --> 02:06:38,290
然后便利你这边是L的

3488
02:06:38,290 --> 02:06:40,510
然后在人在递归这个东西不就行了嘛

3489
02:06:40,660 --> 02:06:41,980
就是创建我的真实

3490
02:06:41,980 --> 02:06:43,090
懂了明白吧

3491
02:06:44,380 --> 02:06:46,060
所以这个过程

3492
02:06:46,680 --> 02:06:55,560
也就是这个过程吸引动动地府就不用说了多么的这个有一点算法后边儿在那个那个那个那个什么那个

3493
02:06:56,300 --> 02:06:58,310
数据结构与算法的时候大家讲

3494
02:06:58,820 --> 02:07:01,730
然后整体流程这块儿基本上就是这些

3495
02:07:03,560 --> 02:07:04,730
整体流程

3496
02:07:07,290 --> 02:07:10,260
整体流程基本上就这些了然后

3497
02:07:11,570 --> 02:07:13,580
然后然后然后

3498
02:07:17,340 --> 02:07:19,290
整体流程基本上这些

3499
02:07:19,770 --> 02:07:23,940
然后还要聊一个就是运行计划也给大家讲了

3500
02:07:24,560 --> 02:07:25,130
还聊一个

3501
02:07:25,130 --> 02:07:26,390
就是LRU

3502
02:07:29,140 --> 02:07:30,850
还有一个就是low的东西

3503
02:07:33,500 --> 02:07:34,730
我们是不是有个keep live

3504
02:07:35,060 --> 02:07:38,720
你们是不是用那个用用了用了一个那个主角叫做keep live

3505
02:07:43,170 --> 02:07:45,540
Keep liv k啊

3506
02:07:45,540 --> 02:07:46,140
KL是吧

3507
02:07:46,470 --> 02:07:48,540
KTV的K5件是吧

3508
02:07:49,740 --> 02:07:50,190
对

3509
02:07:51,640 --> 02:07:53,050
We keep liv是吧

3510
02:07:54,490 --> 02:07:55,720
那么KPL是什么意思呢

3511
02:07:55,720 --> 02:07:57,100
就是你看我现在是两个组件儿

3512
02:07:57,100 --> 02:07:58,180
我在这儿点了这个东西

3513
02:07:58,360 --> 02:07:59,560
然后我切换再回来

3514
02:07:59,590 --> 02:08:00,070
它没了

3515
02:08:00,190 --> 02:08:01,150
QQ是什么意思呢

3516
02:08:01,150 --> 02:08:03,280
我点这个东西我会切换回来

3517
02:08:03,280 --> 02:08:04,330
有知道吧

3518
02:08:05,310 --> 02:08:06,840
对这个东西是怎么实现的

3519
02:08:07,590 --> 02:08:08,550
这个东西怎么实现的

3520
02:08:08,820 --> 02:08:10,440
他就是保存是吧

3521
02:08:10,500 --> 02:08:11,280
我们刚说了

3522
02:08:12,160 --> 02:08:14,440
就是我们保存的是威露的是吧

3523
02:08:15,060 --> 02:08:18,660
我们页面里边儿的那个东西会保存我们的威露的是吧

3524
02:08:18,720 --> 02:08:19,680
我这个keep liv

3525
02:08:19,920 --> 02:08:21,150
当他离开这个时候

3526
02:08:21,150 --> 02:08:22,350
离开这个东西的时候

3527
02:08:22,740 --> 02:08:24,060
他也会保存我的VIVO的

3528
02:08:24,740 --> 02:08:25,100
知道吧

3529
02:08:25,160 --> 02:08:26,300
也会保存微露的

3530
02:08:26,390 --> 02:08:28,280
保存的是当前的威露的保存

3531
02:08:28,640 --> 02:08:29,690
保存的不是状态

3532
02:08:31,900 --> 02:08:32,590
懂不懂

3533
02:08:32,620 --> 02:08:33,910
但是微露的就很大

3534
02:08:34,030 --> 02:08:34,780
所以说怎么办

3535
02:08:34,960 --> 02:08:35,830
会有什么过程

3536
02:08:36,190 --> 02:08:36,940
VIVO的就很大

3537
02:08:36,940 --> 02:08:37,840
他会用什么过程

3538
02:08:38,490 --> 02:08:41,040
他会用一个算法叫做LRU算法

3539
02:08:41,070 --> 02:08:42,120
你们如果刷了

3540
02:08:42,330 --> 02:08:43,290
刷了那个

3541
02:08:43,290 --> 02:08:44,880
刷过那个题

3542
02:08:44,880 --> 02:08:46,440
刷过那个妮蔻

3543
02:08:47,230 --> 02:08:48,070
刷够Nico

3544
02:08:48,800 --> 02:08:50,330
就有一个LRU算法

3545
02:08:50,330 --> 02:08:51,110
缓存算法

3546
02:08:53,600 --> 02:08:54,830
下来之后一定要去

3547
02:08:54,860 --> 02:08:57,020
这个缓存算法我就不讲了很简单很简单

3548
02:08:57,020 --> 02:08:58,670
一个换算下来之后去看一下

3549
02:08:59,060 --> 02:09:00,260
就是这会儿给大家提一嘴

3550
02:09:01,700 --> 02:09:02,270
换成了

3551
02:09:03,710 --> 02:09:04,280
Are you

3552
02:09:04,900 --> 02:09:06,550
他会去相当于是一个什么过程

3553
02:09:06,550 --> 02:09:08,380
他会去把一把你的

3554
02:09:08,620 --> 02:09:11,290
就是相当于我们有一个

3555
02:09:11,320 --> 02:09:13,300
比如说有有有五个内存是吧

3556
02:09:13,480 --> 02:09:15,370
现在他可以存五个东西是吧

3557
02:09:16,270 --> 02:09:19,090
是不是对超出放前活跃放前面有五个内存

3558
02:09:19,090 --> 02:09:20,380
是不是有个内存

3559
02:09:20,380 --> 02:09:21,700
我现在五个东西

3560
02:09:21,880 --> 02:09:22,690
第一次进来

3561
02:09:22,780 --> 02:09:23,800
然后存不存存储

3562
02:09:23,800 --> 02:09:25,120
第二个进来全部存储

3563
02:09:25,270 --> 02:09:26,230
然后存储完了

3564
02:09:26,350 --> 02:09:29,470
我现在第六个要进来了怎么办第六个要进来怎么办

3565
02:09:29,590 --> 02:09:33,070
我是不是把醉酒没有使用的给删除了是吧

3566
02:09:33,310 --> 02:09:34,060
删除了之后

3567
02:09:34,060 --> 02:09:35,260
然后把最新的来使用

3568
02:09:35,470 --> 02:09:36,610
那这个过程当中

3569
02:09:36,730 --> 02:09:38,830
我在使用的时候

3570
02:09:39,490 --> 02:09:42,040
这里边儿如果有有有有有一个缓存

3571
02:09:42,040 --> 02:09:43,630
比如说这儿有一个缓存被使用了

3572
02:09:43,750 --> 02:09:44,800
那我也要把它删除

3573
02:09:45,430 --> 02:09:46,390
删除了之后

3574
02:09:47,440 --> 02:09:49,090
又重新把它拿到什么

3575
02:09:49,780 --> 02:09:50,290
顶不来

3576
02:09:50,500 --> 02:09:53,530
因为他醉死又使用了一次是吧

3577
02:09:53,800 --> 02:09:57,160
所以这就是一个把它缓存放到最顶部的一个过程

3578
02:09:57,310 --> 02:09:58,750
就是最近使用的

3579
02:09:59,850 --> 02:10:01,800
和超出的删除

3580
02:10:01,800 --> 02:10:03,090
删除删除的是什么

3581
02:10:03,180 --> 02:10:05,400
删除是删除的是最久没有使用的

3582
02:10:05,820 --> 02:10:06,810
最久没有使用了

3583
02:10:08,290 --> 02:10:11,410
那么最久没有使用什么东西会变成最久没有使用

3584
02:10:11,500 --> 02:10:13,240
就是不断往里边儿添加

3585
02:10:13,240 --> 02:10:14,590
就会变成不断没有使用

3586
02:10:14,800 --> 02:10:17,140
那不断往里面添加的东西

3587
02:10:17,200 --> 02:10:18,700
如果中间有使用

3588
02:10:18,760 --> 02:10:23,830
那就把他删除了之后重新拿到拿拿拿进来往里边再添加懂不懂

3589
02:10:23,830 --> 02:10:28,150
他有更新里边的这个这个这个顺序删除醉酒没有使用懂了吗

3590
02:10:28,390 --> 02:10:31,300
这个所以说这个LRU淘汰算法你们这块儿要明白

3591
02:10:32,190 --> 02:10:32,700
同学们

3592
02:10:33,660 --> 02:10:34,680
下来之后你们看一下

3593
02:10:35,560 --> 02:10:36,370
只知道这个概念

3594
02:10:36,980 --> 02:10:38,180
刷题Niko

3595
02:10:38,180 --> 02:10:39,620
有这个有这个题

3596
02:10:41,180 --> 02:10:42,050
你可有这个题

3597
02:10:47,340 --> 02:10:48,150
这是有提啦

3598
02:10:50,280 --> 02:10:50,940
这都有提的

3599
02:10:51,540 --> 02:10:52,560
这边都有解答啦

3600
02:10:53,960 --> 02:10:56,300
下面有解答有答案是吧

3601
02:10:56,420 --> 02:10:56,870
体检

3602
02:10:57,540 --> 02:10:59,580
这个答案的ru算法这都有的

3603
02:11:00,850 --> 02:11:01,540
作文

3604
02:11:03,580 --> 02:11:04,000
是吧

3605
02:11:09,080 --> 02:11:11,270
所以这一步明白了之后

3606
02:11:13,350 --> 02:11:15,090
这不明白了之后V2

3607
02:11:15,090 --> 02:11:17,100
我想想还有什么讲V2

3608
02:11:18,240 --> 02:11:19,860
V2、基本上没什么讲的了

3609
02:11:21,190 --> 02:11:22,510
We are基本上没怎么讲的

3610
02:11:22,870 --> 02:11:27,220
然后我就要V3 V3我们花个再花个十分钟吧

3611
02:11:27,430 --> 02:11:28,840
再花个十分钟

3612
02:11:28,840 --> 02:11:29,710
V2没讲的

3613
02:11:30,410 --> 02:11:30,500
V2

3614
02:11:30,500 --> 02:11:31,010
没讲到的

3615
02:11:31,010 --> 02:11:31,400
同学们

3616
02:11:31,640 --> 02:11:32,870
威尔基本上就这些

3617
02:11:33,260 --> 02:11:34,400
威尔基本上就这些

3618
02:11:35,380 --> 02:11:36,550
We are基本就是这些

3619
02:11:37,270 --> 02:11:38,560
下来之后把课件发给他

3620
02:11:39,530 --> 02:11:40,700
为啥都没用过

3621
02:11:40,850 --> 02:11:41,840
没用过我无所谓

3622
02:11:42,110 --> 02:11:42,740
没用过无所谓

3623
02:11:43,130 --> 02:11:43,970
知道原理就行

3624
02:11:44,390 --> 02:11:45,770
缓存不讲什么缓存

3625
02:11:47,460 --> 02:11:48,420
刚刚缓存吗

3626
02:11:49,820 --> 02:11:50,750
不讲了吗

3627
02:11:50,750 --> 02:11:51,500
LRU算法

3628
02:11:52,040 --> 02:11:52,850
Keep live吗

3629
02:11:52,850 --> 02:11:53,330
你说

3630
02:11:55,940 --> 02:11:56,690
这个东西没有什么

3631
02:11:56,690 --> 02:11:57,950
讲的就是一个算法

3632
02:12:00,270 --> 02:12:01,380
这一个算法K

3633
02:12:01,380 --> 02:12:03,270
你不用去关注它这里边的东西

3634
02:12:03,450 --> 02:12:04,410
这里边儿就是一个组件

3635
02:12:04,410 --> 02:12:06,450
你看keep这个东西

3636
02:12:06,480 --> 02:12:07,410
它就是一个组件儿

3637
02:12:07,800 --> 02:12:08,970
你看他生命的一个组件儿

3638
02:12:08,970 --> 02:12:10,020
你看这个组件

3639
02:12:10,080 --> 02:12:11,460
这个组件有自己的purpose

3640
02:12:11,850 --> 02:12:12,600
有自己的name

3641
02:12:12,600 --> 02:12:13,950
是有自己的生命周期

3642
02:12:13,950 --> 02:12:14,430
看到吗

3643
02:12:14,550 --> 02:12:15,510
有自己的生命周期

3644
02:12:15,570 --> 02:12:16,470
那你这个组件儿

3645
02:12:16,590 --> 02:12:18,210
当你用它的时候

3646
02:12:18,450 --> 02:12:19,380
当你用它的时候

3647
02:12:19,410 --> 02:12:20,790
你包包裹它的时候

3648
02:12:20,790 --> 02:12:22,050
它就会把你的子节点

3649
02:12:22,170 --> 02:12:23,820
你所谓的节点全部存起来

3650
02:12:23,820 --> 02:12:24,720
你看render

3651
02:12:24,960 --> 02:12:26,130
他会把你的节点你看

3652
02:12:26,130 --> 02:12:27,660
他会拿到get component

3653
02:12:27,870 --> 02:12:29,130
他会拿到你所有的子节点

3654
02:12:29,130 --> 02:12:29,550
看见了吗

3655
02:12:30,080 --> 02:12:31,130
拿到你说的直接点

3656
02:12:31,130 --> 02:12:31,490
这是你的

3657
02:12:31,490 --> 02:12:33,440
直接拿到你的直接就往里面存

3658
02:12:33,440 --> 02:12:34,220
它有一个数组

3659
02:12:34,520 --> 02:12:36,140
它有一个数组里面就是一个数字

3660
02:12:36,140 --> 02:12:37,550
你看它有一个数组

3661
02:12:38,310 --> 02:12:39,390
这里边儿干嘛

3662
02:12:39,600 --> 02:12:42,060
在里面会存储一个数组卡其

3663
02:12:42,840 --> 02:12:43,920
为维护一个数组

3664
02:12:43,950 --> 02:12:44,730
这个数组哪去了

3665
02:12:44,970 --> 02:12:45,330
妈的

3666
02:12:45,330 --> 02:12:47,460
这个数组可以存储一个数组

3667
02:12:53,620 --> 02:12:54,520
这是它的卡气

3668
02:12:58,880 --> 02:13:03,170
宿主宿主在宿主刚刚说错点去这这

3669
02:13:03,860 --> 02:13:05,330
他闻出一维护存储一个数字

3670
02:13:05,330 --> 02:13:05,780
知道吧

3671
02:13:05,930 --> 02:13:06,740
存储一个数组

3672
02:13:06,830 --> 02:13:07,730
存储一个数字之后

3673
02:13:07,730 --> 02:13:09,080
他就往里面不断去擦

3674
02:13:09,440 --> 02:13:09,860
知道吧

3675
02:13:09,920 --> 02:13:10,940
他又不断叉

3676
02:13:10,970 --> 02:13:12,770
然后刚刚那个算法就看他

3677
02:13:13,320 --> 02:13:15,360
扑西扑西的就是扑稀

3678
02:13:15,360 --> 02:13:16,650
包括日暮这些东西

3679
02:13:16,890 --> 02:13:19,080
他都是你看他会存储知道吧

3680
02:13:19,760 --> 02:13:21,890
他不吸墨付息的是K和K

3681
02:13:21,890 --> 02:13:24,950
但是它存储的时候会把这个微弱的存储到什么

3682
02:13:24,980 --> 02:13:26,690
存储到我们的这个APP上面知道吧

3683
02:13:26,690 --> 02:13:28,520
所以说这块儿有一个删除的过程

3684
02:13:29,400 --> 02:13:30,420
换成几个威尔

3685
02:13:30,420 --> 02:13:31,890
换成几个这个

3686
02:13:31,890 --> 02:13:34,800
我还没有看到他这个设置的这个max

3687
02:13:35,980 --> 02:13:38,890
我都没有看见他这个max是是什么情况

3688
02:13:39,880 --> 02:13:42,400
这个你这个这个你们下来之后可以去看一下

3689
02:13:42,640 --> 02:13:44,500
我都没有看他的max默认是多少

3690
02:13:45,390 --> 02:13:46,860
这个你们可以下来自己看一下

3691
02:13:47,640 --> 02:13:50,460
所以这块儿这块儿这个就就就就

3692
02:13:52,410 --> 02:13:54,300
现在看不到你们这个这个这个

3693
02:13:55,220 --> 02:13:56,030
这个

3694
02:13:57,440 --> 02:14:01,220
这个评论所以说现在现在我很我很懵逼

3695
02:14:04,440 --> 02:14:05,370
谁给我送花

3696
02:14:05,370 --> 02:14:07,170
我看一下会不会把这个bug给清了

3697
02:14:09,560 --> 02:14:09,890
别送了

3698
02:14:09,890 --> 02:14:10,190
别送了

3699
02:14:10,190 --> 02:14:10,550
别送了

3700
02:14:10,550 --> 02:14:11,240
送太多不好

3701
02:14:18,420 --> 02:14:19,380
Despite up

3702
02:14:24,220 --> 02:14:24,910
没有区别

3703
02:14:25,300 --> 02:14:25,810
没有区别

3704
02:14:25,870 --> 02:14:27,070
一个是在内存里边儿

3705
02:14:27,550 --> 02:14:29,320
一个是在浏览器里边儿维护

3706
02:14:29,650 --> 02:14:31,360
一个是内存里边帮帮你维护

3707
02:14:31,360 --> 02:14:32,710
一个是内存里边帮你维护

3708
02:14:32,770 --> 02:14:34,090
一个现现在就是之前

3709
02:14:34,330 --> 02:14:38,320
之前是浏览器帮你记录display none给你不展示这个过程

3710
02:14:38,770 --> 02:14:40,600
但是浏览器的缓存会帮你记录

3711
02:14:41,200 --> 02:14:46,000
现在是哪个这个缓存挪到了什么JJS轮流的V这一块儿知道吧

3712
02:14:47,190 --> 02:14:48,510
所以这块儿基本上就是这些

3713
02:14:48,720 --> 02:14:51,660
然后V3我们讲一下

3714
02:14:51,660 --> 02:14:52,530
V3V2基本讲完了

3715
02:14:52,530 --> 02:14:54,060
V3我们开头开头

3716
02:14:55,920 --> 02:14:56,070
V3

3717
02:14:56,070 --> 02:14:56,490
开头呢

3718
02:14:56,490 --> 02:14:57,360
我们怎么开头呢

3719
02:14:58,040 --> 02:14:59,450
微商我们还是说

3720
02:15:00,140 --> 02:15:01,010
监听是吧

3721
02:15:01,010 --> 02:15:03,290
我们昨天说把监听这个东西搞明白

3722
02:15:03,710 --> 02:15:04,310
你们下来之后

3723
02:15:04,310 --> 02:15:05,630
所以说一定要去

3724
02:15:06,780 --> 02:15:07,680
研究一下这个什么

3725
02:15:13,680 --> 02:15:16,050
所以说你们这边一定要去搞一个什么

3726
02:15:16,920 --> 02:15:18,180
这块一定要搞一个什么

3727
02:15:21,860 --> 02:15:22,790
我还在讲课

3728
02:15:23,240 --> 02:15:24,140
所以说这块儿

3729
02:15:24,830 --> 02:15:25,430
我还是讲

3730
02:15:25,880 --> 02:15:29,300
所以说这块儿给他给他同学们要讲一个什么奖

3731
02:15:29,300 --> 02:15:31,550
一个那个V3这块儿的这个什么东西

3732
02:15:32,840 --> 02:15:33,320
等一下

3733
02:15:33,320 --> 02:15:33,740
同学们

3734
02:15:34,720 --> 02:15:35,290
我

3735
02:15:36,150 --> 02:15:37,410
迪丽丝记不起来了

3736
02:15:37,940 --> 02:15:41,030
同学们我我同学们我我跟我媳妇儿说一句话

3737
02:15:41,300 --> 02:15:42,020
我要讲课

3738
02:15:42,170 --> 02:15:42,770
我讲课

3739
02:15:42,890 --> 02:15:43,940
我不去喊他们去了

3740
02:15:45,710 --> 02:15:47,360
我还要你喊我去吃外卖

3741
02:15:47,360 --> 02:15:48,080
我肯定还讲

3742
02:15:51,560 --> 02:15:52,310
讲到12点

3743
02:15:54,380 --> 02:15:55,730
继续继续继续继续

3744
02:16:02,770 --> 02:16:03,100
对

3745
02:16:03,100 --> 02:16:04,000
所以说这块儿

3746
02:16:05,440 --> 02:16:06,490
这块儿我们

3747
02:16:07,290 --> 02:16:07,950
呵呵

3748
02:16:12,040 --> 02:16:14,290
这块儿我们回到我们的问题

3749
02:16:14,320 --> 02:16:15,400
我们讲V3

3750
02:16:15,880 --> 02:16:18,910
我们V2 V21个问题是吧

3751
02:16:18,910 --> 02:16:19,570
V2是什么问题

3752
02:16:19,870 --> 02:16:21,880
回来回来回来回来回来吧

3753
02:16:22,860 --> 02:16:22,980
V2

3754
02:16:22,980 --> 02:16:23,490
有什么问题

3755
02:16:23,490 --> 02:16:23,970
同学们

3756
02:16:24,300 --> 02:16:25,260
VR是什么问题

3757
02:16:26,530 --> 02:16:27,130
威尔士

3758
02:16:27,130 --> 02:16:28,960
Object object

3759
02:16:29,670 --> 02:16:30,570
地方party是吧

3760
02:16:31,790 --> 02:16:32,330
威尔斯

3761
02:16:33,320 --> 02:16:33,680
是不是

3762
02:16:34,580 --> 02:16:34,820
不对

3763
02:16:34,820 --> 02:16:35,180
顶峰吧

3764
02:16:35,180 --> 02:16:36,230
不理他会做什么处理

3765
02:16:36,290 --> 02:16:37,370
他们会做什么处理

3766
02:16:37,520 --> 02:16:39,590
拦截是拦截

3767
02:16:40,800 --> 02:16:42,090
拦截拦截什么

3768
02:16:42,240 --> 02:16:43,920
它会拦截修它是兰

3769
02:16:43,950 --> 02:16:44,850
他去修改是吧

3770
02:16:45,030 --> 02:16:46,830
修改每一个K是吧

3771
02:16:47,130 --> 02:16:50,220
修改每一个对象的K是吧

3772
02:16:51,060 --> 02:16:51,990
对象的K是不是

3773
02:16:52,290 --> 02:16:53,790
这个东西是相当于什么情况

3774
02:16:53,790 --> 02:16:55,860
相当于我这儿原来有一个人

3775
02:16:56,500 --> 02:17:01,150
我直接去修改我这个人上面是什么应该说人这个东西

3776
02:17:01,630 --> 02:17:02,755
这个这个不好去

3777
02:17:02,755 --> 02:17:05,560
就比如说我这儿要接这是一个这是一个人是吧

3778
02:17:06,010 --> 02:17:08,710
然后原来这里边儿我直接这个人

3779
02:17:08,710 --> 02:17:09,820
我要接收消息是吧

3780
02:17:09,820 --> 02:17:12,130
接收一个消息我原来是怎么接收的

3781
02:17:12,130 --> 02:17:14,320
我原来直接给这个人牵了个线是吧

3782
02:17:14,780 --> 02:17:15,830
给这个人牵了个线

3783
02:17:17,520 --> 02:17:18,120
牵了个线

3784
02:17:18,120 --> 02:17:18,900
牵了个什么线呢

3785
02:17:19,110 --> 02:17:21,570
牵个线就是说我需要给他通知

3786
02:17:22,430 --> 02:17:24,830
就是这每一次不管是哪个K

3787
02:17:25,040 --> 02:17:26,840
我都会去给这个人说

3788
02:17:26,840 --> 02:17:28,610
这个K我会重写

3789
02:17:28,610 --> 02:17:29,420
怎么去接收

3790
02:17:29,540 --> 02:17:30,530
这个K我重写

3791
02:17:30,530 --> 02:17:31,130
怎么去接收

3792
02:17:31,220 --> 02:17:33,170
不同的K我会有不同的处理逻辑

3793
02:17:34,320 --> 02:17:35,340
都需要去做处理

3794
02:17:36,210 --> 02:17:38,730
但是现在在V3里面他怎么去处理

3795
02:17:38,970 --> 02:17:41,460
同学们在V3里面他怎么去做处理

3796
02:17:42,370 --> 02:17:43,960
V3里面他是拦截知道吧

3797
02:17:44,170 --> 02:17:44,830
他是拦截

3798
02:17:44,830 --> 02:17:46,900
一个是修改你具体的K

3799
02:17:47,320 --> 02:17:49,540
重写每一个K一个是拦截

3800
02:17:49,900 --> 02:17:51,160
拦截这个就很有意思了

3801
02:17:51,160 --> 02:17:52,900
就是你这个对你这个对象

3802
02:17:54,680 --> 02:17:55,730
你这个对象是什么意思

3803
02:17:55,730 --> 02:18:00,650
你这个对象所有的操作都需要在外边走一下

3804
02:18:00,650 --> 02:18:02,900
他这个拦截就相当于他外边有一个铁门

3805
02:18:03,580 --> 02:18:04,480
外边有保安

3806
02:18:04,750 --> 02:18:05,410
你可以这么理解

3807
02:18:05,410 --> 02:18:06,340
外边有个保安

3808
02:18:06,520 --> 02:18:08,860
你所有的处理都需要经经过这个保安

3809
02:18:09,430 --> 02:18:11,050
所有的处理就要经过这个保安

3810
02:18:11,260 --> 02:18:13,240
你所有的K访问都要经过这个保安

3811
02:18:13,660 --> 02:18:16,210
那我这个保安就可以拿到你所所谓的访问地了

3812
02:18:17,680 --> 02:18:18,040
明白吗

3813
02:18:18,040 --> 02:18:18,580
同学们

3814
02:18:19,260 --> 02:18:21,900
所以说这个拦截和劫持就不一样了

3815
02:18:22,380 --> 02:18:25,080
所以这个proxy这个V2V3里边

3816
02:18:26,300 --> 02:18:27,050
用了一个什么

3817
02:18:27,140 --> 02:18:28,610
就用了一个proxy这个东西

3818
02:18:30,320 --> 02:18:31,580
就用了proxy这个东西

3819
02:18:31,940 --> 02:18:33,320
Proxy他就是做什么

3820
02:18:34,400 --> 02:18:40,940
Proxy他就是去拦截拦截拦截它会拦截拦截所有的

3821
02:18:42,140 --> 02:18:43,220
拦截所有K

3822
02:18:43,400 --> 02:18:45,380
他就不会去针对某一个K

3823
02:18:45,680 --> 02:18:46,460
不针对

3824
02:18:47,700 --> 02:18:48,090
不挣

3825
02:18:48,090 --> 02:18:49,920
他的围度就不是在K的维度了

3826
02:18:50,220 --> 02:18:51,240
他的维度是什么

3827
02:18:51,840 --> 02:18:53,910
他的维度是针对于这个对象

3828
02:18:54,600 --> 02:18:57,300
对象这个对象的

3829
02:18:58,210 --> 02:19:02,050
这个对象所有的什么K拦截是吧

3830
02:19:02,110 --> 02:19:04,630
只要你对针针对这个对象去做处理

3831
02:19:04,660 --> 02:19:05,890
它就会做所有的拦截

3832
02:19:05,950 --> 02:19:08,320
所以说这一块儿他就不需要去什么便利了

3833
02:19:08,320 --> 02:19:08,890
是不是同学

3834
02:19:10,660 --> 02:19:11,170
是不是

3835
02:19:11,800 --> 02:19:13,150
是不是就不需要去便利了

3836
02:19:13,510 --> 02:19:15,340
不需要去便利这个对象的每一个K了

3837
02:19:15,460 --> 02:19:17,770
我们之前是不是还需要去便利对象的每一个K

3838
02:19:17,920 --> 02:19:18,310
是不是

3839
02:19:19,880 --> 02:19:20,210
是不是

3840
02:19:20,930 --> 02:19:21,680
所以这一步

3841
02:19:21,710 --> 02:19:23,600
这一步遍历对象的某一刻

3842
02:19:23,630 --> 02:19:24,740
遇到递归的时候

3843
02:19:24,740 --> 02:19:25,640
我们还需要去递归

3844
02:19:25,640 --> 02:19:26,000
是不是

3845
02:19:26,660 --> 02:19:28,610
是不是说这块儿给大家留个任务

3846
02:19:28,610 --> 02:19:29,450
第一个任务是吗

3847
02:19:31,250 --> 02:19:33,230
Proxy这个用法你们下去看一下

3848
02:19:33,230 --> 02:19:34,010
一定要去看

3849
02:19:34,430 --> 02:19:38,060
一定要下去看X的用法你们一定要下去看好不好

3850
02:19:39,200 --> 02:19:39,710
好吧

3851
02:19:42,670 --> 02:19:44,470
Proxy这块儿这个用法一定要下去

3852
02:19:45,160 --> 02:19:46,270
然后我们明天

3853
02:19:47,420 --> 02:19:48,170
明天

3854
02:19:48,740 --> 02:19:50,570
再给大家把这个proxy这块儿

3855
02:19:50,600 --> 02:19:51,560
您看了之后

3856
02:19:51,560 --> 02:19:53,000
我再给大家讲他的东西

3857
02:19:53,090 --> 02:19:53,840
所以用法的时候

3858
02:19:53,840 --> 02:19:55,550
你要看他监听数组

3859
02:19:55,580 --> 02:19:57,080
数组你们要去怎么看

3860
02:19:57,140 --> 02:19:59,390
数组的就是正常对象

3861
02:19:59,840 --> 02:20:01,250
正常对象的修改

3862
02:20:03,440 --> 02:20:05,240
然后第二个什么数组

3863
02:20:06,110 --> 02:20:06,920
对象的修改

3864
02:20:08,780 --> 02:20:10,340
第三个是什么数组的修改

3865
02:20:10,340 --> 02:20:10,970
数组修改

3866
02:20:12,020 --> 02:20:14,030
你可以照样谱系CF这些东西

3867
02:20:14,090 --> 02:20:15,980
还有第三个什么深度

3868
02:20:18,070 --> 02:20:20,590
嵌套的数据修改

3869
02:20:21,190 --> 02:20:22,300
拦截之后的数据修改

3870
02:20:22,300 --> 02:20:24,280
你看一下它的各种不同的处理

3871
02:20:24,430 --> 02:20:28,600
所以这次然后就是对于运行时它的price

3872
02:20:28,600 --> 02:20:29,110
我们说了

3873
02:20:29,110 --> 02:20:30,700
运行时就是监听数据是吧

3874
02:20:30,910 --> 02:20:32,410
然后维护一套映射

3875
02:20:32,500 --> 02:20:33,220
然后把它

3876
02:20:33,870 --> 02:20:36,480
就是把你的render和map维护一套音色去做处理

3877
02:20:36,480 --> 02:20:36,750
是不是

3878
02:20:37,050 --> 02:20:39,330
那么这一块儿我们再给大家讲一个什么

3879
02:20:39,480 --> 02:20:41,490
就是我们要讲的性能优化

3880
02:20:42,320 --> 02:20:48,140
昨天我们来讲讲一个什么奖那个那个那个那个那个对

3881
02:20:48,170 --> 02:20:51,110
我我说我就说我始终惦记着要有个什么东西要讲

3882
02:20:52,400 --> 02:20:53,930
我们回到V2这里边儿

3883
02:20:54,900 --> 02:20:56,400
V2里面我们一直给大家说什么

3884
02:20:56,430 --> 02:20:57,600
一个指令是吧

3885
02:20:57,750 --> 02:21:00,150
一个指令一个指令

3886
02:21:01,350 --> 02:21:04,020
一个指令对应对应

3887
02:21:05,350 --> 02:21:06,430
一个render是吧

3888
02:21:06,670 --> 02:21:08,110
一个指令是不是对应一个render

3889
02:21:08,980 --> 02:21:11,500
那现在我意思就是说我这个指令

3890
02:21:12,060 --> 02:21:15,300
比如说我现在我现在现在是

3891
02:21:16,320 --> 02:21:16,830
DV

3892
02:21:20,250 --> 02:21:20,610
是吧

3893
02:21:22,980 --> 02:21:23,430
典韦

3894
02:21:23,460 --> 02:21:24,810
然后这里边儿是个name试试吧

3895
02:21:27,360 --> 02:21:28,530
Names试一试吧

3896
02:21:28,830 --> 02:21:30,150
这是不是就是一个指令

3897
02:21:30,150 --> 02:21:32,820
M11是不是我第二次为二是吧

3898
02:21:32,940 --> 02:21:33,570
那么是为二

3899
02:21:33,660 --> 02:21:36,360
我如果一个指令对应一个数据一个指令

3900
02:21:36,930 --> 02:21:37,140
对

3901
02:21:37,140 --> 02:21:39,960
一个render对应一个指令对应的render

3902
02:21:39,990 --> 02:21:41,850
然后一个指令对应一个water是吧

3903
02:21:42,630 --> 02:21:42,960
是吧

3904
02:21:42,990 --> 02:21:43,770
同学们

3905
02:21:43,800 --> 02:21:45,150
一个指令我对应的water

3906
02:21:45,270 --> 02:21:46,380
那么我这个water

3907
02:21:46,880 --> 02:21:50,420
是不是直接就可以执行render直接就可以修改这个东西

3908
02:21:50,450 --> 02:21:52,040
是不是直接就可以修改这个东西是吧

3909
02:21:52,710 --> 02:21:53,940
直接修改这个东西是吧

3910
02:21:54,030 --> 02:21:55,650
我就不需要去动的服了

3911
02:21:55,650 --> 02:21:56,820
我还需要冻的干啥呀

3912
02:21:57,390 --> 02:21:57,750
是不是啊

3913
02:21:57,810 --> 02:21:58,800
我为什么还需要的

3914
02:21:58,980 --> 02:22:01,170
我就直接修改这个定向的这个东西了

3915
02:22:01,530 --> 02:22:02,670
我必须要去到目的地了

3916
02:22:03,180 --> 02:22:05,370
是不是我为什么还需要这么低俗呢

3917
02:22:07,820 --> 02:22:08,180
是不是

3918
02:22:08,210 --> 02:22:14,330
所以说我们这块儿这个是这个这个就是V1 V1的V1的方案

3919
02:22:14,330 --> 02:22:16,400
V1的方案就是没有动地方

3920
02:22:16,400 --> 02:22:17,270
V1没

3921
02:22:18,290 --> 02:22:19,820
有没有多么地府

3922
02:22:21,800 --> 02:22:23,360
他直接就一个双向数据绑定

3923
02:22:23,450 --> 02:22:25,340
然后绑定了什么一个指令

3924
02:22:28,420 --> 02:22:29,230
对应的是什么

3925
02:22:29,680 --> 02:22:30,340
一个water

3926
02:22:32,080 --> 02:22:34,450
那同学我问你一个water

3927
02:22:35,730 --> 02:22:38,100
是不是需要跟对象映射起来

3928
02:22:38,190 --> 02:22:41,130
你的water是不是需要在低谷里边儿保存起来

3929
02:22:41,250 --> 02:22:41,670
是不是

3930
02:22:42,410 --> 02:22:43,010
你们送花

3931
02:22:43,010 --> 02:22:43,820
你们送花我看得见

3932
02:22:43,820 --> 02:22:44,090
好吧

3933
02:22:44,270 --> 02:22:45,080
你们明白就送花

3934
02:22:45,080 --> 02:22:46,160
送花我这儿看得见

3935
02:22:46,280 --> 02:22:47,030
不用说吧

3936
02:22:47,720 --> 02:22:48,740
是不是一个water

3937
02:22:49,260 --> 02:22:51,390
一个water是不是可以被保保存起来是吧

3938
02:22:51,900 --> 02:22:52,350
是不是

3939
02:22:53,680 --> 02:22:55,900
那么我现在我们维护的是什么

3940
02:22:55,900 --> 02:22:57,220
维护的是water是不是

3941
02:22:57,820 --> 02:23:00,640
就是我们在V1和V2里边儿是不是维护音色

3942
02:23:00,640 --> 02:23:01,300
维护的是water

3943
02:23:01,300 --> 02:23:02,710
就是你数据

3944
02:23:02,740 --> 02:23:04,000
数据对应的映射

3945
02:23:04,000 --> 02:23:05,080
具体的是water是吧

3946
02:23:05,260 --> 02:23:06,610
那现在我的water

3947
02:23:06,610 --> 02:23:08,200
你如果一个指令维护一个water

3948
02:23:08,200 --> 02:23:10,000
我的页面如果有多个指令

3949
02:23:10,660 --> 02:23:11,680
我的页面是

3950
02:23:11,680 --> 02:23:13,030
比如说我的页面正常页面

3951
02:23:13,030 --> 02:23:13,840
如果是这种页面

3952
02:23:16,740 --> 02:23:18,900
我的页面如果是这种是吧

3953
02:23:24,510 --> 02:23:25,710
特别特别多是吧

3954
02:23:26,280 --> 02:23:26,610
哎呀

3955
02:23:26,610 --> 02:23:28,110
我我重新搞一下吧

3956
02:23:29,250 --> 02:23:30,450
对特别特别多的

3957
02:23:30,450 --> 02:23:32,700
特别特别多特别特别多的指令

3958
02:23:32,700 --> 02:23:33,300
这个正常

3959
02:23:33,390 --> 02:23:34,620
我们正常页面里边的是吧

3960
02:23:34,770 --> 02:23:38,820
你页面正常V2现在是不是就是这个样子指令比较多是吧

3961
02:23:38,850 --> 02:23:40,200
全页面都是动态数据是不是

3962
02:23:40,620 --> 02:23:42,330
那这个样子是不是就需要维护

3963
02:23:42,510 --> 02:23:43,620
你有多少个指令

3964
02:23:43,620 --> 02:23:45,120
我就需要维护多少个render是吧

3965
02:23:45,680 --> 02:23:46,670
同学们

3966
02:23:46,740 --> 02:23:47,670
我有五个指令

3967
02:23:47,670 --> 02:23:49,020
你就需要维护五个render

3968
02:23:49,080 --> 02:23:49,860
我这儿是个指令

3969
02:23:49,860 --> 02:23:50,730
你看我这是个指令

3970
02:23:50,730 --> 02:23:52,020
这个指令这儿又是个指令

3971
02:23:52,080 --> 02:23:53,010
我这儿有三个指令

3972
02:23:53,280 --> 02:23:54,390
我就需要维护三个点

3973
02:23:55,020 --> 02:23:55,860
我是三个维护

3974
02:23:55,860 --> 02:23:56,520
三个water

3975
02:23:56,580 --> 02:23:58,290
是不是我三个WATER3个意思

3976
02:23:58,380 --> 02:24:00,120
那在内存里面就要维护

3977
02:24:00,330 --> 02:24:02,610
那内存越占用的越多是不是就越卡

3978
02:24:02,970 --> 02:24:06,450
是不是内存占用的越多是不是就越卡内存

3979
02:24:07,200 --> 02:24:09,150
内存占用

3980
02:24:10,200 --> 02:24:10,770
越多

3981
02:24:12,000 --> 02:24:14,550
就越卡就越卡

3982
02:24:14,700 --> 02:24:17,010
这还不止是性能泄漏的问题

3983
02:24:17,010 --> 02:24:18,420
是不是就性能就很

3984
02:24:18,980 --> 02:24:19,850
很低了是吧

3985
02:24:20,150 --> 02:24:21,470
因为你占用了很多内存吗

3986
02:24:21,470 --> 02:24:22,850
你的性能是不是就很低了吗

3987
02:24:23,150 --> 02:24:23,570
是吧

3988
02:24:24,370 --> 02:24:25,540
是不是内存越多

3989
02:24:25,540 --> 02:24:26,230
是不是越卡

3990
02:24:27,400 --> 02:24:27,700
是不是

3991
02:24:28,840 --> 02:24:29,260
是不是

3992
02:24:29,800 --> 02:24:30,880
那么是因为什么

3993
02:24:30,910 --> 02:24:33,280
是因为你一个water对应扔

3994
02:24:33,460 --> 02:24:34,690
那怎么办

3995
02:24:34,690 --> 02:24:35,050
怎么办

3996
02:24:35,350 --> 02:24:36,100
他就优化了

3997
02:24:36,580 --> 02:24:41,890
这是V1的版本优化怎么优化把握的维度提升一个维度

3998
02:24:43,410 --> 02:24:45,390
Water维度提升一个维度

3999
02:24:46,380 --> 02:24:48,450
一个water对应一个component组件

4000
02:24:50,310 --> 02:24:50,910
明白了吗

4001
02:24:51,660 --> 02:24:53,670
一个water对应一个component组件儿

4002
02:24:53,820 --> 02:24:54,870
你一个组劲儿

4003
02:24:55,170 --> 02:24:57,060
我维护一个water water就现在

4004
02:24:57,060 --> 02:24:58,620
就是我们昨天昨天给大家说的

4005
02:24:59,360 --> 02:25:03,830
你render编译出来的一个东西是一个是一个你编译出来的render

4006
02:25:04,070 --> 02:25:07,550
这个render是不是这个东西是一个整个你当前这个微组件

4007
02:25:07,550 --> 02:25:09,980
你唯一的template里边儿那个组劲儿

4008
02:25:10,540 --> 02:25:11,380
编译出来的论点

4009
02:25:12,430 --> 02:25:14,380
它并不是某一个指令编译出来的认证

4010
02:25:14,470 --> 02:25:15,100
懂了吗

4011
02:25:15,840 --> 02:25:16,560
落尘

4012
02:25:17,960 --> 02:25:18,560
明白吗

4013
02:25:20,440 --> 02:25:22,630
我现在是一个组件去编译一个论点

4014
02:25:23,500 --> 02:25:25,150
那我现在一个组建去一个认证

4015
02:25:25,150 --> 02:25:26,080
现在问题就来了

4016
02:25:26,590 --> 02:25:28,450
我的water直接去修改

4017
02:25:29,510 --> 02:25:31,040
去执行call back是吧

4018
02:25:31,040 --> 02:25:31,580
执行render

4019
02:25:31,760 --> 02:25:33,200
那执行render执行的就是什么

4020
02:25:33,260 --> 02:25:34,580
整个组件的render是吧

4021
02:25:34,730 --> 02:25:38,240
那整个组件重新就需要重新去扔这儿了吗

4022
02:25:38,540 --> 02:25:39,950
整个世界全部都重新扔了吗

4023
02:25:40,010 --> 02:25:42,890
所以说这一步他就会有一个什么我们的福的维度

4024
02:25:43,420 --> 02:25:43,750
懂了吗

4025
02:25:43,750 --> 02:25:46,990
所以说他这个维度就是在主角东地府

4026
02:25:48,140 --> 02:25:49,640
V的动物地府是什么

4027
02:25:49,670 --> 02:25:52,460
层面上的动物地复式组建内部的动物地府

4028
02:25:54,570 --> 02:25:55,380
组建

4029
02:25:56,430 --> 02:26:00,720
组建内部的动物地府知道吧

4030
02:26:01,470 --> 02:26:02,670
组建内部的这种地方

4031
02:26:02,760 --> 02:26:07,020
组建外部是直接通过water d项更新到的是吧

4032
02:26:07,320 --> 02:26:09,000
组织外部是直接通过water

4033
02:26:09,640 --> 02:26:11,200
Water d项更新

4034
02:26:14,190 --> 02:26:18,390
定向更新的明白吗

4035
02:26:18,420 --> 02:26:20,520
同学们这回用了吗

4036
02:26:20,970 --> 02:26:21,750
现在用了吗

4037
02:26:24,050 --> 02:26:27,110
一个water对V2不是V对对对

4038
02:26:27,200 --> 02:26:29,750
微微1V2是一个组建一个water

4039
02:26:30,140 --> 02:26:30,650
一个render

4040
02:26:30,680 --> 02:26:32,690
因为一个render对应的就是一个组件是吧

4041
02:26:32,720 --> 02:26:33,590
一个组件为主

4042
02:26:33,980 --> 02:26:35,690
我们平时编写的代码是不是就是这些的

4043
02:26:35,960 --> 02:26:38,900
你们平时你们平时编写的代码是不是就是这些东西

4044
02:26:38,900 --> 02:26:40,070
就是就是一个template

4045
02:26:40,520 --> 02:26:41,150
那这个template

4046
02:26:45,260 --> 02:26:45,800
对呀

4047
02:26:46,430 --> 02:26:48,140
所以这就是编译词优化

4048
02:26:49,310 --> 02:26:50,600
这是编译时优化

4049
02:26:51,330 --> 02:26:51,960
它编译时

4050
02:26:51,960 --> 02:26:55,230
他天生就做了很多编译

4051
02:26:55,230 --> 02:26:55,770
私有化呀

4052
02:26:55,770 --> 02:26:56,280
它的性能

4053
02:26:56,280 --> 02:26:57,390
它的架构就决定了

4054
02:26:57,480 --> 02:27:00,240
所以说这个东西你再聊跟we的架构的时候

4055
02:27:00,240 --> 02:27:01,260
跟react的架构的时候

4056
02:27:01,260 --> 02:27:02,430
这些层面不就出来了

4057
02:27:02,700 --> 02:27:04,680
他天生就做到了定向更新

4058
02:27:04,950 --> 02:27:06,420
定向更新到某一个组件

4059
02:27:07,330 --> 02:27:11,170
所以说他不需要去做什么动物地府飞奔的一套的东西

4060
02:27:11,290 --> 02:27:12,640
他不需要全局去

4061
02:27:13,910 --> 02:27:15,590
全局去非本

4062
02:27:15,590 --> 02:27:16,700
全局去盗墓地府

4063
02:27:17,260 --> 02:27:18,940
Rocker需要全局驱动地府

4064
02:27:19,090 --> 02:27:21,190
所以说搞得出了非本这套东西

4065
02:27:22,070 --> 02:27:22,970
懂了吗

4066
02:27:24,200 --> 02:27:25,190
这不是解释到位

4067
02:27:25,190 --> 02:27:27,020
这是这不是解释到位

4068
02:27:30,840 --> 02:27:31,380
对呀

4069
02:27:32,270 --> 02:27:34,370
因为你的因为你的数据映射

4070
02:27:34,370 --> 02:27:37,940
你现在数数据映射添加的water water维护的是什么

4071
02:27:37,970 --> 02:27:40,700
是一个主机的render知道这不是解释到位

4072
02:27:41,320 --> 02:27:43,570
这个东西是你学到了深度的之后

4073
02:27:43,570 --> 02:27:45,190
你对这个架构

4074
02:27:45,340 --> 02:27:46,570
对两个框架的架构

4075
02:27:46,570 --> 02:27:48,130
你在背后看到的思维

4076
02:27:48,610 --> 02:27:50,410
他的优化它的维度

4077
02:27:50,410 --> 02:27:51,550
它的设计的维度

4078
02:27:51,820 --> 02:27:52,930
它的不同的维度

4079
02:27:54,410 --> 02:27:56,960
所以说V2V3为什么不适合大应用

4080
02:27:56,960 --> 02:27:58,280
就是这个原因知道吧

4081
02:27:59,880 --> 02:28:01,920
我就说我一直想讲一个什么东西

4082
02:28:02,130 --> 02:28:02,970
我一直在想

4083
02:28:02,970 --> 02:28:04,500
一直在想就讲这个东西

4084
02:28:05,130 --> 02:28:05,910
现在明白了吗

4085
02:28:06,060 --> 02:28:07,110
这是V2V1

4086
02:28:07,350 --> 02:28:09,690
这V1和V2的区别呢

4087
02:28:09,690 --> 02:28:11,520
V3就是proxy这一块儿

4088
02:28:12,000 --> 02:28:13,800
还有就是静态编译

4089
02:28:13,800 --> 02:28:15,180
V3更有静态编译的东西

4090
02:28:19,040 --> 02:28:20,000
静态编译的优化

4091
02:28:21,380 --> 02:28:24,920
我们知道正则匹配一个回溯的过程

4092
02:28:26,370 --> 02:28:28,020
Sight的时候为啥还要处罚

4093
02:28:31,890 --> 02:28:32,640
我讲了这么多

4094
02:28:32,640 --> 02:28:33,150
你就

4095
02:28:37,540 --> 02:28:39,190
Proxy会讲什么意思

4096
02:28:39,340 --> 02:28:42,670
Proxy会讲编译运行是吗

4097
02:28:46,570 --> 02:28:47,890
我现在V3

4098
02:28:49,770 --> 02:28:50,400
会讲会讲

4099
02:28:53,910 --> 02:28:55,320
静态编译就是离线编译

4100
02:29:00,000 --> 02:29:00,720
Theatre

4101
02:29:01,670 --> 02:29:03,950
CTE的时候为啥还要触发water

4102
02:29:04,490 --> 02:29:05,960
不是在组件内部吗

4103
02:29:09,000 --> 02:29:10,860
那你是完全这个东西

4104
02:29:10,890 --> 02:29:11,670
你下来之后

4105
02:29:11,880 --> 02:29:14,220
你中间是不是有没有在的时候

4106
02:29:14,920 --> 02:29:15,820
就想换个名字

4107
02:29:15,820 --> 02:29:18,070
你是不是昨天你是不是有没有在的时候

4108
02:29:18,430 --> 02:29:19,060
没有在的时候

4109
02:29:19,060 --> 02:29:21,370
那你下来之后要自己去再看一下

4110
02:29:21,980 --> 02:29:24,140
这个东西完全就是整个架构的东西了

4111
02:29:24,410 --> 02:29:25,640
我们都讲了好多遍了

4112
02:29:26,650 --> 02:29:27,340
知不知道

4113
02:29:28,280 --> 02:29:29,240
Sight的时候

4114
02:29:30,040 --> 02:29:30,940
肯定要出发喔

4115
02:29:30,940 --> 02:29:31,390
村啊

4116
02:29:32,640 --> 02:29:33,570
因为water

4117
02:29:34,320 --> 02:29:34,620
Sight

4118
02:29:34,620 --> 02:29:36,120
是不是数据发生了改变

4119
02:29:37,050 --> 02:29:39,090
是不是是不是数据发生了改变

4120
02:29:41,240 --> 02:29:45,770
数据发生改变之后应该怎么办数据发生改变怎么办

4121
02:29:46,880 --> 02:29:48,440
那就应该改变页面是吧

4122
02:29:48,680 --> 02:29:49,730
那改变页面

4123
02:29:51,280 --> 02:29:53,920
改变页面是谁来做做改变页面的

4124
02:29:55,020 --> 02:29:56,550
改变页面是谁来改变页面的

4125
02:29:56,580 --> 02:29:58,680
是不是具体的water来改变的

4126
02:29:58,680 --> 02:30:00,990
因为我们的render是封封装的water里边儿是吧

4127
02:30:01,260 --> 02:30:02,190
谁来打电话

4128
02:30:02,610 --> 02:30:03,720
是不是就需要他来打电话

4129
02:30:03,930 --> 02:30:05,250
明白吗

4130
02:30:05,940 --> 02:30:09,330
你明天再把你下来之后再把一块儿再看一下好不好

4131
02:30:09,810 --> 02:30:11,460
对这些同学都可以解释

4132
02:30:11,760 --> 02:30:13,770
在群里边也可以问一下同学们好不好

4133
02:30:16,210 --> 02:30:18,820
然后明天我们要给从几个维度给大家讲

4134
02:30:18,820 --> 02:30:20,620
Proxy静态编译

4135
02:30:22,330 --> 02:30:23,710
还有就是运行失

4136
02:30:25,840 --> 02:30:26,560
就这几个点

4137
02:30:27,640 --> 02:30:28,390
这几个点

4138
02:30:29,510 --> 02:30:30,950
V3优化也就是这几个点

4139
02:30:31,370 --> 02:30:32,510
他的大价格完全没变

4140
02:30:32,540 --> 02:30:34,370
所以说你V2学明白了

4141
02:30:34,370 --> 02:30:35,600
V3我们讲那一块儿的东西

4142
02:30:35,600 --> 02:30:36,350
就讲的特别快

4143
02:30:36,440 --> 02:30:37,610
没有什么好讲的

4144
02:30:37,640 --> 02:30:41,180
就是家就是什么为构建构构造映射关系那一块儿

4145
02:30:42,280 --> 02:30:42,580
没错

4146
02:30:42,580 --> 02:30:43,870
这东西没什么好讲的

4147
02:30:44,900 --> 02:30:45,320
知道吧

4148
02:30:50,360 --> 02:30:52,010
说不同就是变异形式

4149
02:30:54,480 --> 02:30:56,730
我就明白你说的这个什么意思什么

4150
02:30:57,210 --> 02:30:58,980
然后今天就到这里

4151
02:30:59,250 --> 02:31:00,000
今天在这里

4152
02:31:00,000 --> 02:31:03,490
你们下来之后看一下我给你说的这个proxy好不好

4153
02:31:03,490 --> 02:31:06,690
看一下proxy这个东西然后明天我们继续好吧

4154
02:31:09,470 --> 02:31:09,950
嗯

4155
02:31:10,630 --> 02:31:11,890
你要从多个维度来讲

4156
02:31:11,920 --> 02:31:12,310
好吧

4157
02:31:12,580 --> 02:31:14,230
拜拜拜拜拜拜

