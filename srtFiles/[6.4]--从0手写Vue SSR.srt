1
00:00:30,320 --> 00:00:31,040
吃饭了吗

2
00:00:31,130 --> 00:00:31,910
还有课吗

3
00:07:25,470 --> 00:07:26,130
嗯

4
00:08:08,280 --> 00:08:09,600
英国夫人

5
00:08:11,340 --> 00:08:11,760
夫人

6
00:08:12,150 --> 00:08:12,900
夫人

7
00:08:15,530 --> 00:08:18,980
天下英雄唯使君与曹

8
00:08:20,780 --> 00:08:23,900
踏过8000里加两句执政的北方的旷野

9
00:08:23,900 --> 00:08:26,090
更艰巨的尘土开始奔赴

10
00:08:26,090 --> 00:08:28,400
怎么深入阻挡我爸一个人出

11
00:08:28,400 --> 00:08:29,120
遥望西边

12
00:08:29,300 --> 00:08:30,980
期待一行白鹭镇胸膛

13
00:08:31,220 --> 00:08:32,090
淮北到洪湖

14
00:08:32,150 --> 00:08:34,640
我在常熟的牙修复就是真正的军师

15
00:08:34,640 --> 00:08:35,390
一统天下

16
00:08:35,390 --> 00:08:36,530
官渡大丈夫

17
00:08:36,530 --> 00:08:37,430
能屈人生

18
00:08:37,670 --> 00:08:39,230
人生案件亦假亦真

19
00:08:39,500 --> 00:08:40,160
我曾见过

20
00:08:40,160 --> 00:08:41,030
内心又转身

21
00:08:41,030 --> 00:08:44,540
奈何我求草四处试片满仓为沙漠的罪人

22
00:08:44,540 --> 00:08:46,100
不可旁人依偎在冒犯

23
00:08:46,310 --> 00:08:48,500
我渴望天下人

24
00:08:48,500 --> 00:08:50,120
不愿天下人负

25
00:08:50,450 --> 00:08:53,750
失去承诺中沉默

26
00:08:53,780 --> 00:08:55,940
天下分久必合

27
00:08:56,330 --> 00:08:58,640
为你我都

28
00:08:59,930 --> 00:09:00,980
谁的错

29
00:09:01,400 --> 00:09:04,670
留给行人挺多寂寞

30
00:09:04,910 --> 00:09:09,260
不愿去旋风剥夺遵循木有的原则为目的

31
00:09:09,260 --> 00:09:12,230
不择手段不罢休的气魄

32
00:09:12,290 --> 00:09:14,090
这天下何人沉溺和

33
00:09:14,220 --> 00:09:19,020
长光与我点燃乱世烂片烽火

34
00:09:19,050 --> 00:09:20,160
烽火

35
00:09:23,190 --> 00:09:25,410
一线的前程方便去

36
00:09:25,410 --> 00:09:28,620
阵阵暴雨前面我该死的传承

37
00:09:28,620 --> 00:09:29,550
手来心恨

38
00:09:30,240 --> 00:09:33,420
曾经看的有多深爱他有多疼我在乎科舍

39
00:09:33,960 --> 00:09:35,880
如今看看有多伟大的经验

40
00:09:35,880 --> 00:09:38,340
都是不可猜测的

41
00:09:38,340 --> 00:09:38,490
人

42
00:09:39,600 --> 00:09:40,620
就只能被抛弃

43
00:09:41,340 --> 00:09:42,480
我又爬上了高地

44
00:09:42,480 --> 00:09:44,370
民众财富一抬手都是道理

45
00:09:45,240 --> 00:09:48,180
狂傲的娇气我娇气无语加失之交臂

46
00:09:48,720 --> 00:09:51,090
摩托猫咪的奥利小人告密状

47
00:10:06,180 --> 00:10:08,100
失去承诺

48
00:10:08,310 --> 00:10:13,080
从承诺天下分久必合为你我

49
00:10:15,640 --> 00:10:16,780
谁的错

50
00:10:17,440 --> 00:10:17,980
新人

51
00:10:21,730 --> 00:10:24,100
多多遵循的原则

52
00:10:24,280 --> 00:10:25,840
为目的的手段

53
00:10:25,840 --> 00:10:27,940
不罢休的气魄

54
00:10:28,000 --> 00:10:32,020
这天下何人沉溺和人称光感与我点燃

55
00:10:32,020 --> 00:10:33,400
乱世难眠

56
00:10:36,270 --> 00:10:47,100
用一生去承诺中承诺久必合为你我都不可谁的错

57
00:10:47,580 --> 00:10:49,050
可谓是人挺多

58
00:11:41,960 --> 00:11:45,080
踏过8000里加两句之称的北方的旷野

59
00:11:45,080 --> 00:11:47,960
跟他前去来征途开始奔我深入

60
00:11:47,960 --> 00:11:49,550
阻挡我八年一个人出

61
00:11:49,550 --> 00:11:50,390
遥望西边

62
00:11:50,450 --> 00:11:52,580
期待一行白鹭镇胸膛淮

63
00:11:52,580 --> 00:11:53,960
知道鸿鹄的成熟

64
00:11:56,430 --> 00:11:57,570
先到了8.05

65
00:11:57,600 --> 00:11:58,980
我们开始今天的课程

66
00:12:01,050 --> 00:12:03,990
今天是我给大家讲

67
00:12:03,990 --> 00:12:04,890
你能做什么

68
00:12:06,170 --> 00:12:06,590
有你

69
00:12:08,840 --> 00:12:10,130
因为你不是在小程序

70
00:12:10,990 --> 00:12:12,070
在小程序里了吗

71
00:12:12,130 --> 00:12:13,720
跨端或APP之类的

72
00:12:19,080 --> 00:12:21,030
你看S具体要干啥

73
00:12:21,300 --> 00:12:24,780
你在小城APP他

74
00:12:28,430 --> 00:12:28,820
在呢

75
00:12:29,630 --> 00:12:31,850
建议你去看一下有哪怎么想

76
00:12:31,850 --> 00:12:33,320
好像是

77
00:12:33,320 --> 00:12:33,740
没有吧

78
00:12:33,740 --> 00:12:34,190
我记得

79
00:12:35,280 --> 00:12:37,080
这个你可以看一下官网这个支持

80
00:12:37,080 --> 00:12:38,190
这个你一看就知道了

81
00:12:39,060 --> 00:12:40,770
因为这个基于第三方框架了

82
00:12:40,770 --> 00:12:42,630
你得看他的框架支不支持

83
00:12:45,630 --> 00:12:46,650
那应该是

84
00:12:50,840 --> 00:12:51,410
看一下

85
00:12:52,670 --> 00:12:54,470
有可能

86
00:12:59,550 --> 00:13:00,750
所以你可以看一下自己看一下

87
00:13:00,780 --> 00:13:01,920
如果支持的话就可以

88
00:13:01,920 --> 00:13:04,590
如果他官方价没有支持

89
00:13:04,680 --> 00:13:05,820
那你如果实在想写

90
00:13:05,820 --> 00:13:08,130
那有可能就需要你自己动手

91
00:13:08,310 --> 00:13:11,880
比如说做一套什么东西去实现它可以

92
00:13:13,680 --> 00:13:14,910
还可以看到这里有一个

93
00:13:16,270 --> 00:13:17,440
你得使用它这个优点

94
00:13:19,120 --> 00:13:20,200
Club的原函数

95
00:13:20,350 --> 00:13:24,730
然后是可将有意见不属于这次暗杀的一次网站

96
00:13:26,100 --> 00:13:28,320
那这个有一定条件

97
00:13:28,320 --> 00:13:28,890
你可以使用它

98
00:13:28,890 --> 00:13:32,880
也可以做这样的只爱喳喳的一些网站也是可以的

99
00:13:36,800 --> 00:13:37,910
那么就开始我们今天课程

100
00:13:37,910 --> 00:13:40,730
今天我们主要是来做一下VS

101
00:13:40,730 --> 00:13:42,320
我们就是来从头搭建一下

102
00:13:43,250 --> 00:13:47,720
这个话主要也是为了给大家熟悉一下这个SOD搭建的一个流程

103
00:13:47,780 --> 00:13:49,790
像现在的话有非常成熟的库

104
00:13:49,790 --> 00:13:54,020
比如说LV是不是分别都有next或者next这样的框架

105
00:13:54,440 --> 00:13:55,670
如一般的话

106
00:13:55,670 --> 00:13:57,020
大家如果大家不熟练的话

107
00:13:57,020 --> 00:13:59,060
就直接使用这种成熟的框架就行了

108
00:13:59,120 --> 00:14:00,680
因为你自己去搭的话

109
00:14:01,250 --> 00:14:05,630
像SR它的配置起来就是还是有一点成本的

110
00:14:05,840 --> 00:14:07,550
这个配置还是比较复杂的

111
00:14:08,890 --> 00:14:09,430
所以说呢

112
00:14:09,790 --> 00:14:12,280
如果没有什么特别的有需求

113
00:14:12,280 --> 00:14:15,070
你可以直接用这些称作框架酒也是可以的

114
00:14:15,100 --> 00:14:16,180
但是我们学习阶段呢

115
00:14:16,390 --> 00:14:19,540
我们还需要从头来搭建一下的话

116
00:14:19,540 --> 00:14:21,760
可以看到AOE的官网

117
00:14:24,760 --> 00:14:25,720
唯一的官网的话

118
00:14:25,720 --> 00:14:29,500
它这里像唯一他给我们提供了一个非常详细的指南的

119
00:14:30,010 --> 00:14:30,790
来看一下

120
00:14:31,840 --> 00:14:34,960
在这服务端阿旋

121
00:14:36,530 --> 00:14:38,120
但这个的话它是

122
00:14:39,160 --> 00:14:39,790
2X的

123
00:14:40,150 --> 00:14:41,740
像现在V2X的

124
00:14:41,740 --> 00:14:43,810
但现在的话我们是不是都是V3了

125
00:14:44,200 --> 00:14:45,610
现在V3已经发布好久了

126
00:14:45,970 --> 00:14:49,450
所以这里的话我们可以看到他VG3的一个系法

127
00:14:49,600 --> 00:14:51,970
现在就是像到了现在我们开发的话

128
00:14:51,970 --> 00:14:54,070
因为技术更新是非常频繁的嘛

129
00:14:54,370 --> 00:14:56,590
所以说我们在使用一些库的时候

130
00:14:56,590 --> 00:14:58,870
一定要注意一下它的版本的问题了

131
00:15:00,860 --> 00:15:03,260
可以看到这时候就是V3的了

132
00:15:04,470 --> 00:15:05,430
其实他们两个的话

133
00:15:05,430 --> 00:15:07,860
首先是包的名字

134
00:15:08,790 --> 00:15:09,360
有些区别

135
00:15:09,360 --> 00:15:11,670
还有一些细节的地方

136
00:15:11,670 --> 00:15:12,300
都有更新

137
00:15:12,300 --> 00:15:13,800
像V3和V2了

138
00:15:13,920 --> 00:15:15,180
V如厕四

139
00:15:15,480 --> 00:15:17,130
现在是V1那么多

140
00:15:17,130 --> 00:15:17,790
四还是五

141
00:15:18,030 --> 00:15:19,980
他和之前上一版本都是有差别的

142
00:15:20,040 --> 00:15:21,150
像VS之类的

143
00:15:21,510 --> 00:15:24,120
这对现版本的话是给我们提供这种顾客的写法儿

144
00:15:24,120 --> 00:15:25,440
之前的话他是没有的

145
00:15:25,440 --> 00:15:26,850
所以说在写的时候

146
00:15:26,850 --> 00:15:29,100
对这个版本问题一定要注意了

147
00:15:29,160 --> 00:15:30,180
他们今天搭配的话

148
00:15:30,180 --> 00:15:33,300
你如果因为版本版本的问题

149
00:15:33,390 --> 00:15:35,160
就有可能会引起各种各样的问题

150
00:15:36,260 --> 00:15:37,460
所以说这个一定要注意

151
00:15:38,180 --> 00:15:40,400
即使现在我们是不是用RPM包

152
00:15:40,400 --> 00:15:41,600
经常用好的

153
00:15:41,630 --> 00:15:42,500
这个也是一个包

154
00:15:42,500 --> 00:15:43,280
经常会更新

155
00:15:43,520 --> 00:15:44,900
所以说一般你上线的话

156
00:15:45,080 --> 00:15:46,190
他的版本又不固定

157
00:15:46,190 --> 00:15:48,380
每次按F1M一次到

158
00:15:48,380 --> 00:15:49,640
或者一按一次的话

159
00:15:49,850 --> 00:15:51,020
有可能按照最新版本

160
00:15:51,020 --> 00:15:53,840
你之前写的代码的语法有可能都会变化了

161
00:15:53,900 --> 00:15:55,880
所以说这个也是需要注意的

162
00:15:58,080 --> 00:15:59,190
那像这个五一的话

163
00:15:59,190 --> 00:15:59,850
它的光斑呢

164
00:15:59,850 --> 00:16:01,290
其实已经写的

165
00:16:01,290 --> 00:16:02,490
非常的详细了

166
00:16:02,490 --> 00:16:04,110
相比于爱的光辉说的话

167
00:16:04,350 --> 00:16:06,180
他阅读起来也是非常容易阅读的

168
00:16:06,450 --> 00:16:09,510
就是还可以看到非常像关于比如说代码分割

169
00:16:09,510 --> 00:16:10,530
源码的结构

170
00:16:10,770 --> 00:16:13,470
还有编写的一些注意事项等等都可以写在这里了

171
00:16:13,710 --> 00:16:15,390
各种各样的都写的非常详细

172
00:16:15,690 --> 00:16:16,260
那这块的话

173
00:16:16,260 --> 00:16:19,230
我们就带大家一起来走一下这个流程

174
00:16:23,430 --> 00:16:25,320
爱他的话大家都有搭建过吗

175
00:16:25,440 --> 00:16:30,030
有搭建过的同学可以扣下一就是或者是了解的就是熟悉的

176
00:16:33,300 --> 00:16:34,290
直接就恢复二吗

177
00:16:35,220 --> 00:16:36,450
不熟悉的可以回复下零

178
00:16:39,350 --> 00:16:41,660
大部分同学都都没有接触过是吧

179
00:16:42,260 --> 00:16:44,660
因为这个的话面试中也经常可能会问到

180
00:16:44,660 --> 00:16:47,060
所以说我们有必要来数一下它这个流程

181
00:16:47,090 --> 00:16:47,480
这样的话

182
00:16:47,480 --> 00:16:50,510
面试官在问你这相关的HR问题的时候

183
00:16:50,510 --> 00:16:52,040
你也可以比较容易地回答

184
00:16:52,040 --> 00:16:54,500
比如说你再去问他遇到什么问题之类的

185
00:16:54,500 --> 00:16:57,050
或者是中间要注意什么东西等等的话

186
00:16:57,050 --> 00:16:58,220
我们自己搭建一遍之后

187
00:16:58,220 --> 00:16:59,420
我们就会比较熟悉了

188
00:17:02,660 --> 00:17:03,920
那第一个的话需要注意的话

189
00:17:03,920 --> 00:17:05,390
就是它版本这里提到了

190
00:17:05,510 --> 00:17:07,550
就是可以看到

191
00:17:07,580 --> 00:17:10,760
基本用法这是唯一二的他的

192
00:17:11,620 --> 00:17:14,860
官方给我们提供了这样一个大的这样一个包儿

193
00:17:14,860 --> 00:17:16,000
到了为三中呢

194
00:17:17,010 --> 00:17:17,730
录音三的话

195
00:17:17,730 --> 00:17:19,410
它在前面加了一个艾特符号

196
00:17:19,650 --> 00:17:21,990
现在是不是我们经常欠了一些抱歉

197
00:17:21,990 --> 00:17:22,800
加艾特符号

198
00:17:23,130 --> 00:17:27,000
这主要是是不是基本代表的是下一个版本的一个包

199
00:17:27,030 --> 00:17:28,155
像背包之类的

200
00:17:28,155 --> 00:17:29,640
是前面也是下载的符号

201
00:17:33,810 --> 00:17:35,580
那既然我们讲撒

202
00:17:35,700 --> 00:17:37,680
大家知道什么是S码

203
00:17:39,650 --> 00:17:41,600
其实比较通俗理解的话

204
00:17:41,600 --> 00:17:43,520
其实就是服务端

205
00:17:44,630 --> 00:17:45,410
还有客户端

206
00:17:46,580 --> 00:17:47,660
共用一套代码

207
00:17:51,460 --> 00:17:51,970
然后呢

208
00:17:52,120 --> 00:17:54,070
服务端将我们的组件

209
00:17:54,100 --> 00:17:55,210
像HTML字符串

210
00:17:55,210 --> 00:17:57,280
然后直接发送到我的浏览器

211
00:17:57,400 --> 00:18:01,990
这样就是像一个爱她一个最直接的解释

212
00:18:01,990 --> 00:18:04,900
MPMP不像MP

213
00:18:05,290 --> 00:18:06,430
MP是多页吗

214
00:18:07,810 --> 00:18:10,180
现在我们常见是SPI是单页模式

215
00:18:10,180 --> 00:18:10,990
单页模式的话

216
00:18:11,290 --> 00:18:12,700
我们的页面中是不是只有一个空的

217
00:18:12,700 --> 00:18:14,500
第二位是Deng JS加载完毕

218
00:18:14,680 --> 00:18:16,300
你的内容是不是才能渲染进去

219
00:18:16,480 --> 00:18:18,460
这是不是现在创建XP行事

220
00:18:18,820 --> 00:18:20,530
但是S的话是我们常见的

221
00:18:20,530 --> 00:18:21,970
就是一个白屏

222
00:18:24,510 --> 00:18:26,430
但是你像做SM的话

223
00:18:26,430 --> 00:18:29,490
他就很好的就可以解决你的这个白白屏问题

224
00:18:29,970 --> 00:18:31,590
露营对应真实基本

225
00:18:31,590 --> 00:18:31,860
对

226
00:18:33,320 --> 00:18:33,950
所以说的话

227
00:18:34,070 --> 00:18:35,060
我们做S2的话

228
00:18:36,570 --> 00:18:38,940
基本策略就是我们做首屏支出嘛

229
00:18:41,970 --> 00:18:43,170
就是有服务的

230
00:18:43,590 --> 00:18:44,850
我们去杀一面的时候

231
00:18:44,850 --> 00:18:45,630
守平指出

232
00:18:45,630 --> 00:18:46,560
就是从服务端

233
00:18:50,660 --> 00:18:51,650
直接返回回来

234
00:18:58,070 --> 00:18:59,180
所以说这个的话

235
00:18:59,180 --> 00:19:00,230
我们就要处理的东西

236
00:19:00,230 --> 00:19:02,150
首先在路由这里我们就需要处理了

237
00:19:02,270 --> 00:19:03,380
还有就是

238
00:19:04,040 --> 00:19:04,940
在客户端源代码

239
00:19:04,940 --> 00:19:07,280
我们让他同样让他在服务端也可以执行

240
00:19:07,310 --> 00:19:09,020
并且渲染为起码都串

241
00:19:09,020 --> 00:19:10,130
然后直接反馈回来

242
00:19:10,250 --> 00:19:11,450
所以这里我们就需要处理

243
00:19:11,750 --> 00:19:13,160
像之前在没有note之前的话

244
00:19:13,160 --> 00:19:15,950
我们想实现在服务端和客户端供应商代码

245
00:19:15,950 --> 00:19:18,320
这个是键不限时的

246
00:19:18,320 --> 00:19:19,670
比如说像之前的PPT了

247
00:19:19,940 --> 00:19:22,730
或者是之前一些其他语言或者Java之类的

248
00:19:22,970 --> 00:19:25,460
你想去共用一套代码是

249
00:19:25,460 --> 00:19:26,360
基本不可行的

250
00:19:26,660 --> 00:19:27,920
所以说有了弄了之后

251
00:19:27,980 --> 00:19:29,300
是不是我们的撒

252
00:19:30,530 --> 00:19:31,910
这样的技术也就出来了

253
00:19:33,000 --> 00:19:35,880
下路的话还是算是

254
00:19:36,990 --> 00:19:39,330
前台发展也是一次里程碑了

255
00:19:42,490 --> 00:19:42,760
对啊

256
00:19:42,760 --> 00:19:43,840
路由电影31米

257
00:19:45,620 --> 00:19:46,610
那这其实提到了

258
00:19:46,640 --> 00:19:48,950
其实大家就好处就非常明显了

259
00:19:48,950 --> 00:19:51,650
首先就解决了就是更快的内容到达时间

260
00:19:54,230 --> 00:19:54,710
正常的话

261
00:19:54,710 --> 00:19:56,600
我们SP模式的话

262
00:19:56,600 --> 00:19:58,280
你需要等待你的JS加载完毕

263
00:19:58,280 --> 00:19:59,000
你才能看内容

264
00:19:59,000 --> 00:19:59,570
而现在呢

265
00:19:59,750 --> 00:20:01,910
服务端就直接把这个字符串处理好之后

266
00:20:01,910 --> 00:20:02,510
直接返回

267
00:20:02,510 --> 00:20:04,280
用户可以直接就看到了页面的内容

268
00:20:04,310 --> 00:20:08,000
另一个的另一个非常关键的就是来解决了SUV的问题

269
00:20:08,420 --> 00:20:09,140
像之前的话

270
00:20:09,140 --> 00:20:11,450
我们的页面中是不是只有一个空的第二位

271
00:20:11,810 --> 00:20:13,160
那这样你爬出来爬的话

272
00:20:13,160 --> 00:20:14,450
你的价值没有价值完毕

273
00:20:14,750 --> 00:20:16,370
那爬虫是什么也碰不到的

274
00:20:16,370 --> 00:20:16,700
所以说

275
00:20:17,440 --> 00:20:18,700
像这种SPM的话

276
00:20:18,700 --> 00:20:20,140
它非常不利于这种Su

277
00:20:20,380 --> 00:20:21,790
所以说为了更好Su的话

278
00:20:21,790 --> 00:20:22,810
我们应该中肯定是

279
00:20:23,640 --> 00:20:26,070
以前的文件是放在后端线

280
00:20:28,080 --> 00:20:29,520
那个还还有区别

281
00:20:29,520 --> 00:20:30,090
那个就是

282
00:20:32,160 --> 00:20:39,240
纯的像之前我们用屁屁乐或者是不是安加入这样的企服务或者是APP的部署的服务器这种

283
00:20:39,600 --> 00:20:41,040
它是纯的服务端渲染

284
00:20:42,750 --> 00:20:45,150
服务端渲染客户端渲染

285
00:20:46,640 --> 00:20:52,070
还有SSR这个这这几个概念其实我们要分清楚一下

286
00:20:52,070 --> 00:20:54,740
我们刚刚提到了他是首屏指数

287
00:20:55,070 --> 00:20:56,240
只有首屏的时候

288
00:20:56,390 --> 00:20:58,310
它才是服务端渲染后边呢

289
00:20:58,460 --> 00:20:59,480
后边进行切换的时候

290
00:20:59,480 --> 00:21:00,950
就是我们扣端渲染了

291
00:21:00,950 --> 00:21:04,190
所以说其实存在理解的话就是服务端渲染

292
00:21:05,470 --> 00:21:07,840
客户端渲染加服务端渲染结合

293
00:21:11,960 --> 00:21:12,800
这是肯定的

294
00:21:12,950 --> 00:21:16,400
所以说我们所以说就采用结合的方式吗这个

295
00:21:17,650 --> 00:21:19,390
在这里我们就正好给大家讲一下

296
00:21:19,420 --> 00:21:21,070
关于这几个概念性的东西

297
00:21:21,070 --> 00:21:23,050
大家也需要就是理解一下

298
00:21:24,560 --> 00:21:26,030
首先我们说一下这爱他优点

299
00:21:26,030 --> 00:21:27,140
优点的话就是

300
00:21:27,140 --> 00:21:28,340
这是最显著的两个优点

301
00:21:28,340 --> 00:21:30,230
就是来解决了白屏的问题

302
00:21:31,160 --> 00:21:32,300
解决白屏

303
00:21:33,890 --> 00:21:36,740
但是他有相应的一些条件

304
00:21:36,740 --> 00:21:38,570
就是需要我们权衡的

305
00:21:40,550 --> 00:21:41,390
权衡的是啥呢

306
00:21:41,570 --> 00:21:42,830
首先就是开发条件

307
00:21:44,090 --> 00:21:44,480
受限

308
00:21:44,750 --> 00:21:47,360
因为像我们一些比如说你操作DOM之类的

309
00:21:47,360 --> 00:21:48,590
那你再弄的比如说服务端

310
00:21:48,740 --> 00:21:49,580
那肯定是没有的

311
00:21:49,580 --> 00:21:50,990
还有一些一些API之类的

312
00:21:50,990 --> 00:21:52,400
我们使用的物业或者爱的

313
00:21:52,700 --> 00:21:54,530
她在服务端还是有一些限制的

314
00:21:54,560 --> 00:21:57,620
就是在服务端的话它是没有的

315
00:21:59,100 --> 00:22:01,230
其实主要的话就是向着DOM的限制之类的

316
00:22:01,230 --> 00:22:02,160
服务端是没有

317
00:22:02,730 --> 00:22:06,540
另外的话就是配置还是相对来说比较复杂一些的

318
00:22:06,720 --> 00:22:11,070
所以这个我们再决定采不采用SSR或者使用APP的时候

319
00:22:11,070 --> 00:22:12,810
我们要就是考虑一下

320
00:22:14,100 --> 00:22:18,630
另外一个就是刚刚同学提到的在服务器端负担

321
00:22:19,660 --> 00:22:20,680
也会大一些

322
00:22:21,880 --> 00:22:22,390
但是呢

323
00:22:22,450 --> 00:22:23,380
这个大一些的话

324
00:22:23,500 --> 00:22:28,870
它吸它相比于就是我们这个纯的服务端渲染还是小一点的

325
00:22:28,870 --> 00:22:31,210
因为它只有首屏的时候再去请求服务端

326
00:22:31,360 --> 00:22:32,620
而你后边的路由切换

327
00:22:32,770 --> 00:22:34,720
他都走了本地的客户端渲染

328
00:22:34,960 --> 00:22:35,800
所以这样的话

329
00:22:35,800 --> 00:22:38,800
我们其实相当于HR就是结合了这两个的优点

330
00:22:38,920 --> 00:22:40,480
然后摒弃了他们的缺点

331
00:22:46,420 --> 00:22:47,620
那这里的话我们就

332
00:22:48,770 --> 00:22:50,420
来看一下传到服务端下载

333
00:22:50,420 --> 00:22:52,550
这个其实就不用说了

334
00:22:52,550 --> 00:22:54,770
因为是直接从服务端返回来了

335
00:22:54,890 --> 00:22:56,540
那首屏渲染是不是肯定快了

336
00:22:56,750 --> 00:22:58,520
就不需要等待JS加载完毕

337
00:22:58,520 --> 00:22:59,540
那首屏渲染肯定快

338
00:22:59,630 --> 00:23:01,730
所以说HR就采用了这样一个优点

339
00:23:01,760 --> 00:23:02,900
然后Su友好

340
00:23:03,290 --> 00:23:04,790
因为页面都是直接反映回来的

341
00:23:04,790 --> 00:23:07,010
那爬出来爬的话肯定没有什么问题

342
00:23:07,040 --> 00:23:08,150
但相对于他的缺点呢

343
00:23:08,570 --> 00:23:09,860
那肯定是服务器压力大了

344
00:23:09,980 --> 00:23:10,670
所谓的页面

345
00:23:11,060 --> 00:23:12,320
你点击路由切换的时候

346
00:23:12,320 --> 00:23:14,300
比如说我们链接跳转是不是进行路由切换

347
00:23:14,510 --> 00:23:15,650
都需要去请求服务站

348
00:23:15,800 --> 00:23:17,660
那服务器压力是不是肯定非常大

349
00:23:17,870 --> 00:23:22,160
然后每次因为像之前的这种页面的话说

350
00:23:22,160 --> 00:23:24,440
每个页面里边好多内容都是重复的

351
00:23:24,440 --> 00:23:26,750
所以说才会造成一些每次就是

352
00:23:27,810 --> 00:23:29,940
需要请求重复的资源

353
00:23:30,630 --> 00:23:31,650
所以这也是它的缺点

354
00:23:31,710 --> 00:23:35,790
另外一个就是可见不一定可操作

355
00:23:36,540 --> 00:23:37,410
这是什么意思呢

356
00:23:37,620 --> 00:23:39,000
就是说我们负担渲染图的话

357
00:23:39,000 --> 00:23:40,140
是不是我们的h ma啊

358
00:23:40,350 --> 00:23:41,850
你虽然说看到页面内容

359
00:23:41,850 --> 00:23:43,260
但是你既然没有加载完毕

360
00:23:43,260 --> 00:23:45,060
比如说你按钮的点击事件之类的

361
00:23:45,240 --> 00:23:46,260
他说你即使看见了

362
00:23:46,410 --> 00:23:48,330
说你点击的时候你家都没加载完毕

363
00:23:48,480 --> 00:23:49,470
他也是不可交互的

364
00:23:49,470 --> 00:23:51,060
所以说它有一个缺点的话

365
00:23:51,210 --> 00:23:53,580
是不是就是可见不一定可操作

366
00:23:55,320 --> 00:23:57,450
然后客户端先生他的

367
00:23:59,250 --> 00:24:00,330
先说他的优点吧

368
00:24:00,660 --> 00:24:02,580
优点可见即可操作

369
00:24:03,090 --> 00:24:06,090
因为这时候你的页面键加载完毕了

370
00:24:06,240 --> 00:24:07,470
才选择你的页面上

371
00:24:07,470 --> 00:24:08,610
所以说你见了之后

372
00:24:08,610 --> 00:24:09,870
你GS是一定加载完毕

373
00:24:09,870 --> 00:24:12,180
所以说这时候你交互是完全没有问题的

374
00:24:12,210 --> 00:24:14,760
另外的话就是页面切换流畅

375
00:24:16,090 --> 00:24:17,230
为什么切换流畅呢

376
00:24:17,380 --> 00:24:20,170
因为我们的像XP这种模式的话

377
00:24:20,170 --> 00:24:22,810
客户端渲染它是采用的是本地路由方式

378
00:24:23,140 --> 00:24:25,750
就相当于他做的这种就是

379
00:24:26,630 --> 00:24:28,970
取不能切换是通过减资操作的

380
00:24:29,150 --> 00:24:30,710
那切换肯定是非常流畅的

381
00:24:30,710 --> 00:24:32,840
因为他不需要向服务端渲染的时候

382
00:24:32,960 --> 00:24:34,460
还需要每次去请求服务端

383
00:24:35,280 --> 00:24:35,670
这里的话

384
00:24:35,670 --> 00:24:39,960
他只是做了一些食物局部的利用到我们的这个现在是检视

385
00:24:41,550 --> 00:24:43,740
控制切换是不需要请求服务端的

386
00:24:43,740 --> 00:24:45,120
所以说切换是

387
00:24:46,530 --> 00:24:47,400
非常流畅的

388
00:24:47,400 --> 00:24:48,330
不需要请求服务的

389
00:24:49,540 --> 00:24:50,890
所以这是它的优点

390
00:24:50,920 --> 00:24:52,540
那缺点也是非常显而易见的

391
00:24:52,660 --> 00:24:54,850
首先的话就是Su的问题

392
00:24:55,930 --> 00:24:58,630
这不你的页面一加载进来就是一个空壳

393
00:24:58,630 --> 00:25:02,200
就是一个空的div GS加载完成之前里面是什么内容没有的

394
00:25:02,440 --> 00:25:03,490
那爬出来爬的话

395
00:25:03,640 --> 00:25:05,950
那时候就什么也爬出来爬不到了

396
00:25:06,220 --> 00:25:07,810
另外的话就是白屏时间长

397
00:25:08,470 --> 00:25:09,370
白屏时间长的话

398
00:25:09,370 --> 00:25:11,770
主要是需要等待你的JS加载完毕

399
00:25:11,980 --> 00:25:13,990
是不是你的页面内容才能看得到

400
00:25:13,990 --> 00:25:16,120
所以说白屏的一个时间就会重来

401
00:25:16,300 --> 00:25:18,340
所以说你对于你的项目的话

402
00:25:18,340 --> 00:25:22,180
具体看你的项目对性能是否要求非常的高

403
00:25:22,300 --> 00:25:25,630
比如说车你看面对的是比如说这种后台管理系统

404
00:25:25,630 --> 00:25:29,980
或者是面向的是广大用户向后台管理系统这个你做一些Su啦

405
00:25:29,980 --> 00:25:35,050
或者是这种性能优化是不是一般的话没有那么大的要求

406
00:25:35,110 --> 00:25:38,110
而像类似这种网站或者是商城之类的话

407
00:25:38,110 --> 00:25:40,120
可能话对这种打开的

408
00:25:41,720 --> 00:25:43,820
时间有时间可能要求比较长一些

409
00:25:44,000 --> 00:25:45,320
就可以抓紧考虑一下

410
00:25:45,920 --> 00:25:46,880
然后其它的话

411
00:25:47,150 --> 00:25:48,140
他说技术的话

412
00:25:48,140 --> 00:25:50,090
并不是说我非得用什么技术

413
00:25:50,090 --> 00:25:51,710
技术的话需要你去调研

414
00:25:51,740 --> 00:25:52,940
跟你具体的场景

415
00:25:53,060 --> 00:25:55,160
你具体要去解决什么问题

416
00:25:55,280 --> 00:25:56,690
还是要从需求出发的

417
00:25:56,690 --> 00:25:58,490
所以说并不是一刀切

418
00:25:58,790 --> 00:26:01,460
我就是我就要用这个技术之类的

419
00:26:01,520 --> 00:26:03,140
这个并不是的

420
00:26:03,170 --> 00:26:04,700
所以要灵活的去处理

421
00:26:05,450 --> 00:26:08,150
那这里可以看到了服务端渲染和客户端渲染

422
00:26:08,150 --> 00:26:10,430
他们是不是各有各自的优缺点

423
00:26:10,430 --> 00:26:10,790
SOD呢

424
00:26:10,820 --> 00:26:12,200
它就正好结合这个优点

425
00:26:12,500 --> 00:26:15,110
他只有首屏之处

426
00:26:15,710 --> 00:26:17,870
这个的话是采用的是不是无端渲染

427
00:26:18,230 --> 00:26:19,730
那一刷新页面

428
00:26:19,790 --> 00:26:21,020
你立马就能看到内容

429
00:26:21,020 --> 00:26:22,730
是不是白屏时间就没有了

430
00:26:24,060 --> 00:26:24,480
然后呢

431
00:26:24,480 --> 00:26:25,770
Su是不是也解决了

432
00:26:25,800 --> 00:26:28,020
那你后边儿再进行页面切换的时候呢

433
00:26:30,640 --> 00:26:31,450
页面切换

434
00:26:31,480 --> 00:26:34,720
然后就有本地的GS控制了

435
00:26:34,870 --> 00:26:36,310
其实就是我们现在使用的

436
00:26:36,550 --> 00:26:38,260
比如说react了或未root

437
00:26:38,260 --> 00:26:39,610
我们都知道它的一个原理吗

438
00:26:39,880 --> 00:26:43,990
是不是都采用了比如说有黑色模式或者是Hans模式

439
00:26:44,110 --> 00:26:47,380
其实就GS通过动态监测我们地址栏中地址的变化

440
00:26:47,380 --> 00:26:51,340
然后通过JS或DOM去控制我们页面内容的切换

441
00:26:53,300 --> 00:26:54,050
对后台系统

442
00:26:54,080 --> 00:26:54,980
后台系统管理的话

443
00:26:54,980 --> 00:26:58,730
有的基本上对内一般就是性能要求并没有那么急躁

444
00:26:58,820 --> 00:27:01,760
基本上他更加注重的是这种功能

445
00:27:02,210 --> 00:27:05,390
所以说大家现在对这个S客户端渲染

446
00:27:05,390 --> 00:27:08,150
服务端渲染则概念应该就比较明确了吧

447
00:27:11,550 --> 00:27:12,810
其实这个在不到之前的话

448
00:27:12,810 --> 00:27:14,700
有可能就是哎呀比较困惑一些

449
00:27:14,820 --> 00:27:16,680
其实这样你一梳理之后

450
00:27:16,680 --> 00:27:18,360
其实就非常容易理解了

451
00:27:20,980 --> 00:27:22,480
这里的话主要还是一个同步

452
00:27:22,480 --> 00:27:23,950
同步的话就是同步

453
00:27:23,950 --> 00:27:24,820
其实啊

454
00:27:24,820 --> 00:27:25,690
其实你也可以

455
00:27:25,750 --> 00:27:26,950
他其实就是一个同步

456
00:27:26,950 --> 00:27:28,450
就是服务端和客户端

457
00:27:28,600 --> 00:27:29,740
就是供了一套代码

458
00:27:29,770 --> 00:27:32,770
像这官网中记得他有解释

459
00:27:34,040 --> 00:27:35,720
可以看广告设计起来非常明显

460
00:27:35,720 --> 00:27:36,710
大家从这里看

461
00:27:36,950 --> 00:27:38,420
其实大概知道这是什么东西

462
00:27:38,420 --> 00:27:39,260
其实你没有做过

463
00:27:39,290 --> 00:27:42,530
可以看到这一刻也可以被认为是同构的

464
00:27:42,590 --> 00:27:45,200
这基本上是翻译过来的一个名词

465
00:27:45,260 --> 00:27:46,190
或者是通用的

466
00:27:46,550 --> 00:27:48,950
其实主要是就是我们的代码

467
00:27:48,950 --> 00:27:53,210
这里就可以同时一套代码可以同时运行在服务端就可以运行的客户端

468
00:27:53,450 --> 00:27:54,440
基本是通用

469
00:27:54,500 --> 00:27:55,820
通用或者是同构

470
00:27:56,530 --> 00:27:58,180
这都是些概念性的东西这个

471
00:27:59,620 --> 00:28:01,360
那关于这个概念性的东西了解完了

472
00:28:01,510 --> 00:28:03,730
接下来的话我们就需要来自己动手搭建

473
00:28:07,180 --> 00:28:07,570
动手

474
00:28:07,570 --> 00:28:08,170
大学之前的话

475
00:28:08,170 --> 00:28:09,910
我们就需要了解一些注意事项

476
00:28:09,910 --> 00:28:11,200
首先就是我们刚刚提到的

477
00:28:11,440 --> 00:28:11,980
就是

478
00:28:11,980 --> 00:28:13,300
我们刚刚提到爱他的话

479
00:28:13,300 --> 00:28:16,240
他的是不是开发条件是受限的

480
00:28:16,510 --> 00:28:17,890
那像危重的话

481
00:28:17,890 --> 00:28:19,000
它有哪些地方受限呢

482
00:28:19,270 --> 00:28:20,290
我们就来看一下

483
00:28:20,290 --> 00:28:23,320
首先的话看一下这里他可以写了

484
00:28:23,350 --> 00:28:25,300
首先是比如说我们一些生命周期

485
00:28:25,720 --> 00:28:26,650
像之前的话

486
00:28:26,740 --> 00:28:28,270
是不是你可以用一些before create

487
00:28:28,270 --> 00:28:31,000
或者是现在比如说一些create这种生命周期之类的

488
00:28:32,460 --> 00:28:34,350
但是现在我们就需要置业

489
00:28:34,350 --> 00:28:35,640
是我们在这里边的话

490
00:28:35,640 --> 00:28:38,100
就需要做一些比如说一些副作用的

491
00:28:38,100 --> 00:28:42,750
比如说我们之前或者是你在里面写了一些set timeout或者是interval之类的

492
00:28:42,990 --> 00:28:46,620
像我们一般是在这个生命周期可以起这样一个定时器

493
00:28:46,620 --> 00:28:47,730
或者是斜的interview

494
00:28:48,030 --> 00:28:49,980
然后在我们的汽车的生命周期的时候

495
00:28:50,100 --> 00:28:51,420
是不是可以把它清理掉

496
00:28:51,720 --> 00:28:52,320
但是呢

497
00:28:52,440 --> 00:28:54,240
如果我们在服务端的时候就要注意了

498
00:28:54,240 --> 00:28:56,430
因为服务端渲染的时候在

499
00:28:57,400 --> 00:28:58,330
我们的服务端

500
00:28:58,450 --> 00:29:01,840
它是没有像这种before mass或者是

501
00:29:02,770 --> 00:29:03,070
不是

502
00:29:03,460 --> 00:29:06,280
是IMT或者dei TY的这个生命周期的

503
00:29:06,490 --> 00:29:07,660
所以说这时候呢

504
00:29:08,620 --> 00:29:10,090
在使用的时候就需要注意了

505
00:29:12,400 --> 00:29:13,420
因为可以看到这里

506
00:29:13,600 --> 00:29:14,650
在爱的过程中

507
00:29:15,610 --> 00:29:17,800
只有这两个生命周期会被调用

508
00:29:17,860 --> 00:29:19,390
所以说在我们服务端去执行的时候

509
00:29:19,540 --> 00:29:20,890
你其他生命周期

510
00:29:20,890 --> 00:29:21,940
他也是不能访问的

511
00:29:21,940 --> 00:29:24,250
所以说这就是是不是开发条件就比较受限了

512
00:29:24,250 --> 00:29:25,540
所以说在使用过程中

513
00:29:25,720 --> 00:29:26,620
所以需要注意一下

514
00:29:26,650 --> 00:29:28,990
另外的话就是特定平台的一些APP

515
00:29:29,290 --> 00:29:30,610
一些温度DOM的话

516
00:29:30,760 --> 00:29:32,800
再我们相怒的服务

517
00:29:32,800 --> 00:29:33,940
但他是肯定没有的

518
00:29:33,970 --> 00:29:35,920
所以说这个都需要注意的

519
00:29:39,230 --> 00:29:41,120
或者说一些特定的平台处理的时候

520
00:29:41,120 --> 00:29:42,350
我们就需要特定注意一下

521
00:29:43,040 --> 00:29:45,410
然后的话还有还有一个地方

522
00:29:45,710 --> 00:29:46,910
这个地方需要特别注意的

523
00:29:51,950 --> 00:29:53,540
还有一个的话就是像我们

524
00:29:53,540 --> 00:29:56,000
这个就是避免状态单位这个模式

525
00:29:56,210 --> 00:29:57,770
我们尤其要注意的

526
00:29:57,800 --> 00:29:59,150
下面再写为函数的时候

527
00:29:59,150 --> 00:30:01,460
我们直播间这样写为二的时候

528
00:30:01,640 --> 00:30:02,930
我们写定这个的时候

529
00:30:02,930 --> 00:30:06,050
我们是不是都写一个那个函数

530
00:30:06,170 --> 00:30:07,910
每次执行的时候就是

531
00:30:10,760 --> 00:30:11,930
他都能去执行

532
00:30:12,760 --> 00:30:14,590
生成一个什么新的

533
00:30:14,590 --> 00:30:16,600
比如说这种对象数据之类的

534
00:30:16,900 --> 00:30:19,030
而且我们在服务端为什么

535
00:30:20,030 --> 00:30:21,080
一定要注意这个状态

536
00:30:21,080 --> 00:30:21,650
Dan力呢

537
00:30:22,900 --> 00:30:23,770
因为你服务单的话

538
00:30:23,770 --> 00:30:25,120
你这个服务起来之后

539
00:30:25,210 --> 00:30:26,440
它就会一直在那了

540
00:30:26,620 --> 00:30:28,480
如果你定义了这样一个对象的形式

541
00:30:28,480 --> 00:30:29,890
我们都知道对象他是引用的

542
00:30:30,130 --> 00:30:32,380
那有可能就会造成全球的状态污染了

543
00:30:32,680 --> 00:30:33,970
所以这时候就需要注意一下

544
00:30:34,150 --> 00:30:37,570
每次你调的时候都把它定义成一个函数的性质

545
00:30:37,720 --> 00:30:38,320
看这里

546
00:30:43,200 --> 00:30:43,710
那有

547
00:30:44,400 --> 00:30:44,790
你看

548
00:30:45,000 --> 00:30:46,980
每次去之前小是不是都咨询一下

549
00:30:46,980 --> 00:30:48,240
这个可是APP函数

550
00:30:48,270 --> 00:30:50,220
每次去重新的去执行

551
00:30:50,580 --> 00:30:51,510
就避免装修案例

552
00:30:51,720 --> 00:30:53,760
这个装箱单里并不支持

553
00:30:53,760 --> 00:30:55,650
只有这里创建这个应用的时候

554
00:30:55,650 --> 00:30:57,240
像我们在使用

555
00:30:59,160 --> 00:31:02,940
比如说VS中我们定一些全球state之类的

556
00:31:02,940 --> 00:31:04,650
还有像如厕

557
00:31:04,860 --> 00:31:07,200
我们都需要注意这个避免状态单里

558
00:31:08,310 --> 00:31:09,900
因为我们需要记住一点

559
00:31:09,900 --> 00:31:11,130
就是在服务端

560
00:31:11,160 --> 00:31:12,450
这个服务端起来之后

561
00:31:12,480 --> 00:31:13,590
它就会一直在那儿了

562
00:31:13,800 --> 00:31:15,270
他并不会再去纯净

563
00:31:15,270 --> 00:31:16,440
而不像客户端

564
00:31:16,440 --> 00:31:19,080
每次他都还重新去执行一下这样的

565
00:31:20,300 --> 00:31:22,550
所以说这个地方就需要注意一下

566
00:31:23,480 --> 00:31:24,830
这里都写的比较清楚

567
00:31:29,630 --> 00:31:30,140
The bomb

568
00:31:31,890 --> 00:31:32,370
对象

569
00:31:32,520 --> 00:31:34,170
主要对象的引用不是背包

570
00:31:34,930 --> 00:31:35,680
就我们这

571
00:31:36,320 --> 00:31:36,830
嗯

572
00:31:38,090 --> 00:31:38,990
就是对像

573
00:31:39,080 --> 00:31:40,580
比如说我们在全预定了个对象

574
00:31:40,580 --> 00:31:42,200
你在其他地方修改了之后

575
00:31:42,200 --> 00:31:43,550
你下一个用户再来请求

576
00:31:43,730 --> 00:31:46,940
那是不是就拿到了上一个用户的这个对对相对应的数据

577
00:31:47,390 --> 00:31:48,410
那这样是不是就不行了

578
00:31:48,860 --> 00:31:50,030
你不是闭包的问题

579
00:31:52,500 --> 00:31:55,020
是关于这个对象引用的这个问题

580
00:32:01,220 --> 00:32:02,180
然后这是

581
00:32:03,060 --> 00:32:05,220
一个也需要特别注意的地方

582
00:32:05,220 --> 00:32:07,290
然后其他的话其实就还好了

583
00:32:07,530 --> 00:32:10,350
其他的话主要是一些版本的

584
00:32:10,920 --> 00:32:12,330
就是语法更新的问题了

585
00:32:12,720 --> 00:32:14,760
其实没有其他问题可以看到这个

586
00:32:14,760 --> 00:32:17,220
这就是我们一个要做一个整体流程了

587
00:32:17,280 --> 00:32:18,240
这边的话

588
00:32:18,240 --> 00:32:19,530
是不是就是我们写的源码

589
00:32:19,530 --> 00:32:21,000
比如说写到我们的VS

590
00:32:21,000 --> 00:32:22,740
如我们的root

591
00:32:23,010 --> 00:32:24,930
然后company是我们写的一些组件之类的

592
00:32:24,990 --> 00:32:26,880
最终经过打包可以看到

593
00:32:26,880 --> 00:32:27,960
有个服务端入口

594
00:32:28,200 --> 00:32:29,310
有个客户端入口

595
00:32:29,430 --> 00:32:30,690
为什么有这两个入口呢

596
00:32:30,930 --> 00:32:33,420
因为一个我们需要在服务端运行的

597
00:32:33,630 --> 00:32:35,730
一个是我们要在客户端去运行的

598
00:32:35,730 --> 00:32:37,320
所以说我们在打包的时候

599
00:32:38,000 --> 00:32:38,360
这

600
00:32:39,340 --> 00:32:40,510
服务端还有客户端代码

601
00:32:40,510 --> 00:32:41,890
我们要经过WiFi打包

602
00:32:42,100 --> 00:32:44,140
然后再一个是在服务端去调用

603
00:32:44,140 --> 00:32:45,460
一个是在客户端去调用

604
00:32:46,440 --> 00:32:47,790
这里我们记得用WiFi处理

605
00:32:47,790 --> 00:32:50,850
因为我们写代码是不是我们用的是we这种语法

606
00:32:51,880 --> 00:32:53,350
浏览器它也是不识别的

607
00:32:53,410 --> 00:32:55,060
像你的诺顿的话它也不能识别

608
00:32:55,060 --> 00:32:57,550
所以我们需要经过ipad的进行打包分析

609
00:32:58,450 --> 00:33:00,070
比如说用他唯一法的话

610
00:33:00,070 --> 00:33:02,440
我们是不是需要配置危楼的解析等等

611
00:33:02,440 --> 00:33:03,880
它像一个CS

612
00:33:03,880 --> 00:33:05,140
我们如果用到其他的话

613
00:33:05,350 --> 00:33:07,420
还需要配置CL的等等各种各样的解析

614
00:33:07,420 --> 00:33:08,830
通过派打包完成之后

615
00:33:09,190 --> 00:33:12,760
我们分别让客户端和服务端去掉用去使用就可以了

616
00:33:13,570 --> 00:33:16,060
基本的一个大体的目录结构就是这样的

617
00:33:17,320 --> 00:33:21,670
一个是在浏览器运行的一个扣的一个入口

618
00:33:21,700 --> 00:33:24,160
一个是在服务器端运行的一个入口

619
00:33:24,160 --> 00:33:29,560
然后下面的话就是说像平时开发唯一项目其实就是一样的

620
00:33:29,590 --> 00:33:31,630
没有什么太多其他的地方

621
00:33:38,280 --> 00:33:40,560
那这里的话我们就来开始动手搭建了

622
00:33:40,560 --> 00:33:43,710
首先的话就是来先把我们的目录搭建起来

623
00:33:44,740 --> 00:33:45,520
但目录的话

624
00:33:45,550 --> 00:33:46,600
我们就可以快速的

625
00:33:46,600 --> 00:33:49,270
这里我之前创建好的东西魏延杀

626
00:33:49,660 --> 00:33:51,250
那这里我们就来搭建了

627
00:33:57,410 --> 00:33:58,880
这里我们先见一下

628
00:33:58,910 --> 00:34:02,240
首先先见一下我们的HR是我们开发源码

629
00:34:02,270 --> 00:34:02,870
开发源码的话

630
00:34:02,870 --> 00:34:04,010
我们这里分一下

631
00:34:04,310 --> 00:34:07,220
一个是我们可另一次端的客户端的代码

632
00:34:08,020 --> 00:34:08,530
还有一个

633
00:34:12,340 --> 00:34:14,320
虽然一个是clean的

634
00:34:14,350 --> 00:34:14,950
还有一个呢

635
00:34:15,070 --> 00:34:16,720
是我们的show

636
00:34:23,230 --> 00:34:27,490
生物的话一般是我们有一个ABS去写我们的服务端的

637
00:34:27,490 --> 00:34:29,830
服务端的话我们还是采用我们的框

638
00:34:29,890 --> 00:34:31,630
就是我们的技术站的话

639
00:34:31,630 --> 00:34:33,100
还是大家都比较熟悉的

640
00:34:33,130 --> 00:34:34,750
其实像这节课的话

641
00:34:34,750 --> 00:34:35,230
应该

642
00:34:36,700 --> 00:34:37,870
做起来并不是太难

643
00:34:38,170 --> 00:34:39,250
大家应该比较清楚了

644
00:34:39,250 --> 00:34:40,750
我们还是用学习呢

645
00:34:40,750 --> 00:34:42,010
我们就不用VCR了

646
00:34:42,010 --> 00:34:43,900
我们还是自己手动的去打

647
00:34:44,290 --> 00:34:46,930
我们主要在是用的WiFi pike5

648
00:34:47,260 --> 00:34:49,360
然后是UE3

649
00:34:50,050 --> 00:34:55,840
还有的话是we如此都是对一些比较新的一如此

650
00:34:55,840 --> 00:34:57,130
现在版本应该是四了

651
00:34:57,280 --> 00:34:59,980
还有一个吴雅氏是我们来

652
00:35:01,110 --> 00:35:01,680
请行的话

653
00:35:01,680 --> 00:35:06,060
我们是就用XX这个使用还是非常广的

654
00:35:06,150 --> 00:35:07,800
基本上我们的一个汽车站就是这样的

655
00:35:09,120 --> 00:35:11,070
然后我们继续来创建我们的目录

656
00:35:12,420 --> 00:35:12,960
服务端的话

657
00:35:12,960 --> 00:35:14,820
我们就是用我们课那一套

658
00:35:16,050 --> 00:35:17,220
扣那一系列统

659
00:35:18,240 --> 00:35:20,580
然后服务端是不是也有一个如此

660
00:35:22,530 --> 00:35:23,940
这就是我们服务端

661
00:35:23,940 --> 00:35:25,050
然后客户端代码呢

662
00:35:25,620 --> 00:35:27,750
就是比如说我们的一些组件啦

663
00:35:28,860 --> 00:35:29,790
我们碰一次

664
00:35:30,300 --> 00:35:32,010
然后还有我们的如此

665
00:35:35,420 --> 00:35:36,440
武夷山没用过

666
00:35:38,010 --> 00:35:38,910
那这个可以用了

667
00:35:38,910 --> 00:35:40,230
V三都发布这么久了

668
00:35:40,230 --> 00:35:42,720
它使用起来还是挺舒服的

669
00:35:42,750 --> 00:35:43,560
更加灵活了

670
00:35:43,890 --> 00:35:46,080
不像之前的option

671
00:35:46,230 --> 00:35:49,170
那种固定的那种配置API之类的方式

672
00:35:49,320 --> 00:35:50,730
现在就是更加灵活了

673
00:35:53,920 --> 00:35:55,270
如果有新项目之类的话

674
00:35:55,270 --> 00:35:56,440
就可以尝试去使用

675
00:35:58,660 --> 00:36:01,240
现在基本已经没什么太大的问题了

676
00:36:04,830 --> 00:36:08,880
就是will是到root component组件

677
00:36:08,880 --> 00:36:09,750
然后还有啥呢

678
00:36:10,930 --> 00:36:12,760
还有我们的根组件

679
00:36:15,500 --> 00:36:17,060
然后APP的

680
00:36:19,490 --> 00:36:21,230
穿一个跟子健app.v

681
00:36:24,740 --> 00:36:26,120
我们大体的一个目录就这样

682
00:36:26,120 --> 00:36:26,570
然后呢

683
00:36:26,840 --> 00:36:27,500
我们要模糊

684
00:36:27,500 --> 00:36:29,510
刚刚师傅有一个分两个入口

685
00:36:29,510 --> 00:36:31,820
一个是让客户端使用的

686
00:36:31,820 --> 00:36:32,900
一个是服务端使用的

687
00:36:32,900 --> 00:36:34,250
所以我们这里就清洁一下

688
00:36:34,340 --> 00:36:35,600
叫阴吹

689
00:36:35,780 --> 00:36:36,740
Cleaning jas

690
00:36:37,100 --> 00:36:39,560
还有是in TE sol jas

691
00:36:40,620 --> 00:36:43,920
可以看到我们基本就模仿他这个大全目录我们来的

692
00:36:48,060 --> 00:36:50,730
这样我们的目录基本上就处理的差不多了

693
00:36:52,750 --> 00:36:53,980
这个差不多之后

694
00:36:57,420 --> 00:36:59,340
我们就可以来初始化我们的项目啦

695
00:37:04,240 --> 00:37:04,570
你看

696
00:37:06,520 --> 00:37:07,720
是不是让策划完成了

697
00:37:07,720 --> 00:37:08,680
排队之前就出来了

698
00:37:09,620 --> 00:37:11,630
那接下来我们就来做我们的事情啦

699
00:37:13,430 --> 00:37:13,970
创建目录

700
00:37:13,970 --> 00:37:15,980
我们完成了就是要做的事情

701
00:37:20,260 --> 00:37:22,720
首先就是搭建我们的客户端代码

702
00:37:29,490 --> 00:37:30,780
客户端代码搭建

703
00:37:31,260 --> 00:37:32,010
大家现在

704
00:37:33,030 --> 00:37:34,200
没有不熟悉的同学吧

705
00:37:34,260 --> 00:37:35,880
可能有的同学是react技术栈

706
00:37:35,880 --> 00:37:36,960
可能对无意义不熟的

707
00:37:37,050 --> 00:37:38,460
其实他们大体思路是一样

708
00:37:38,460 --> 00:37:40,650
就是比如说你配着你的VSLA配置V如

709
00:37:41,040 --> 00:37:42,510
然后就写下你的页面就行了

710
00:37:42,510 --> 00:37:43,170
然后搭建

711
00:37:43,500 --> 00:37:44,610
然后再搭建完之后

712
00:37:44,730 --> 00:37:47,010
我们还需要配置ipad来对它进行解析

713
00:37:47,010 --> 00:37:48,540
因为没有用VCM

714
00:37:49,990 --> 00:37:50,920
现在大家对于手机

715
00:37:50,920 --> 00:37:51,400
Ipad

716
00:37:51,400 --> 00:37:55,540
就比如说处理这无疑自己搭一个这种简单西安应该都可以了吧

717
00:37:56,440 --> 00:37:57,790
还有问题的可以回复下零

718
00:37:57,970 --> 00:37:59,890
如果比较熟练的就可以回复下一

719
00:38:00,930 --> 00:38:02,040
因为现在都到了

720
00:38:02,040 --> 00:38:03,000
现在是第几周了

721
00:38:03,000 --> 00:38:03,720
第六周了吧

722
00:38:04,170 --> 00:38:05,340
你应该第二

723
00:38:08,110 --> 00:38:10,750
前边儿前我们不是都打过好几次吗

724
00:38:11,990 --> 00:38:14,420
录播课程有关WiFi使用呢

725
00:38:14,420 --> 00:38:15,470
应该再多练练

726
00:38:15,470 --> 00:38:17,660
如果还不熟悉的话可以多练一下

727
00:38:19,150 --> 00:38:20,350
比如说ipad

728
00:38:20,350 --> 00:38:22,030
首先是不是我们各种low的解析

729
00:38:22,030 --> 00:38:23,260
微语法的解析

730
00:38:23,260 --> 00:38:24,970
S的像

731
00:38:27,040 --> 00:38:27,190
好

732
00:38:27,190 --> 00:38:28,810
我们先大体介绍一下

733
00:38:29,050 --> 00:38:31,630
比如说CL的事要处理什么文件

734
00:38:31,630 --> 00:38:33,100
就可以配置些load之类的

735
00:38:33,100 --> 00:38:36,010
还有像我们的拉盖往下拍发音

736
00:38:36,010 --> 00:38:39,940
或者是提取我们的亚瑟这些plug in是不就配置一些

737
00:38:40,090 --> 00:38:41,350
最终进行我们的打包

738
00:38:41,350 --> 00:38:44,200
然后介绍配置是不他的一些银去入口啦

739
00:38:44,200 --> 00:38:45,010
或者是我们的

740
00:38:46,760 --> 00:38:48,680
有饮水还有最终打包出来的

741
00:38:48,680 --> 00:38:49,790
铺的打包到哪

742
00:38:49,790 --> 00:38:50,660
然后开发环境的话

743
00:38:50,660 --> 00:38:51,980
是不是还有DV舍瓦

744
00:38:52,580 --> 00:38:53,420
这个要注意一下的话

745
00:38:53,420 --> 00:38:54,680
就快拍个五中的话

746
00:38:54,830 --> 00:38:55,850
他是否有些变化

747
00:38:55,850 --> 00:38:57,890
相对于之前的版本需要单独的

748
00:38:58,130 --> 00:38:59,300
比如说安装一下之类的

749
00:39:00,830 --> 00:39:02,150
就是ipad

750
00:39:02,150 --> 00:39:03,980
然后这个客户端项目基本完成之后

751
00:39:04,040 --> 00:39:05,690
就需要搭建我们的服务器

752
00:39:08,000 --> 00:39:10,190
大服务器我们就是孩子换了一套

753
00:39:12,150 --> 00:39:12,540
Car

754
00:39:12,540 --> 00:39:16,770
然后还有像如此的静态资源服务器之类的

755
00:39:16,770 --> 00:39:17,760
是不是就完成了

756
00:39:17,760 --> 00:39:24,420
然后最后可以来处理我们的LLRL的话主要是我们需要处理个路由

757
00:39:24,510 --> 00:39:26,940
只有首页的时候进行去请这个服务单

758
00:39:26,940 --> 00:39:28,830
然后其他的是不是都本着一个路由

759
00:39:29,460 --> 00:39:31,380
另外的话还有就是一个请求的处理

760
00:39:31,980 --> 00:39:33,150
为什么做企业处理呢

761
00:39:33,150 --> 00:39:34,980
就是因为就是你在企业的时候

762
00:39:34,980 --> 00:39:36,660
首页的时候你已经请求了服务端了

763
00:39:36,900 --> 00:39:38,730
你没必要等待JS加载完毕

764
00:39:38,880 --> 00:39:40,740
你再去请求这个页面上的一些

765
00:39:40,740 --> 00:39:43,230
比如说你通过阿贾克斯企业数据

766
00:39:43,230 --> 00:39:45,570
你就可以通过服务端就直接翻译回来了

767
00:39:45,570 --> 00:39:49,530
就没必要再去经过X这客户端去请求了

768
00:39:49,680 --> 00:39:52,680
直接推动服务端和页面就一块返回回来了

769
00:39:54,430 --> 00:39:57,760
这这就是我们这节课基本要做的这样一些事情

770
00:39:58,630 --> 00:39:59,770
其实像前面这一块的话

771
00:39:59,770 --> 00:40:01,900
基本上都是我们前边儿来做到过的

772
00:40:01,900 --> 00:40:03,250
其实大家都比较熟悉的话

773
00:40:03,250 --> 00:40:05,530
我们就可以快速的来搭建一下

774
00:40:06,880 --> 00:40:08,950
首先的话就来带一下我们的APP点

775
00:40:10,630 --> 00:40:13,090
首先是不是创建我们的template的

776
00:40:15,010 --> 00:40:17,110
没有快捷template

777
00:40:18,070 --> 00:40:18,370
嗯

778
00:40:25,530 --> 00:40:26,970
来创建我的模板指标

779
00:40:26,970 --> 00:40:28,350
这里我先简单写一下

780
00:40:37,920 --> 00:40:38,340
首页

781
00:40:46,240 --> 00:40:47,410
然后什么

782
00:40:49,360 --> 00:40:51,520
然后把它导出airport

783
00:40:58,180 --> 00:40:58,840
给fault

784
00:41:00,070 --> 00:41:01,420
而且镶嵌的话为三

785
00:41:01,420 --> 00:41:02,710
是不是也出了一个语法糖

786
00:41:02,710 --> 00:41:05,110
就是script的setup

787
00:41:05,170 --> 00:41:07,330
是不是你直接在这血之后也retain了

788
00:41:07,330 --> 00:41:08,230
你就直接不用写了

789
00:41:08,590 --> 00:41:09,640
现在所谓

790
00:41:10,870 --> 00:41:13,600
更加就是让你少操这些东西

791
00:41:13,600 --> 00:41:16,210
就是你可以写起来就是更灵活的

792
00:41:16,210 --> 00:41:20,080
像之前的话也显示你还需要单独的去写return之类的话

793
00:41:20,080 --> 00:41:21,430
我们就先不用语法头

794
00:41:21,580 --> 00:41:22,960
我们先用这个

795
00:41:24,420 --> 00:41:25,920
最基本的唯一下一个语法

796
00:41:27,720 --> 00:41:28,740
这里的话是我们的根

797
00:41:28,740 --> 00:41:29,730
我们就先这样写一下

798
00:41:29,730 --> 00:41:31,470
然后的话我们写两个页面

799
00:41:32,870 --> 00:41:33,590
两个页面的话

800
00:41:33,590 --> 00:41:34,760
我们创建一个home

801
00:41:34,880 --> 00:41:35,690
一个首页

802
00:41:35,690 --> 00:41:37,100
然后一个五层

803
00:41:41,300 --> 00:41:42,800
Home新建文件

804
00:41:43,100 --> 00:41:44,180
The index

805
00:41:46,160 --> 00:41:47,030
about

806
00:41:51,400 --> 00:41:53,950
然后木也是刚刚那一套复制一下

807
00:41:56,180 --> 00:41:56,510
后

808
00:42:00,310 --> 00:42:02,830
这里给大家管这类名

809
00:42:05,200 --> 00:42:05,680
等于

810
00:42:13,170 --> 00:42:13,740
然后呢

811
00:42:16,690 --> 00:42:18,820
这里的话导致的话是

812
00:42:23,150 --> 00:42:24,860
然后style简单的给点样式

813
00:42:25,160 --> 00:42:28,190
然后只让他起不起作用是够的

814
00:42:32,840 --> 00:42:37,040
然后稍微给点钥匙后没期比如说给他一个卡了

815
00:42:38,660 --> 00:42:39,860
这里主要也是为了测试

816
00:42:39,860 --> 00:42:41,930
下一会我们配ipad她是不生效

817
00:42:43,120 --> 00:42:44,170
然后这是hope

818
00:42:44,260 --> 00:42:45,250
然后about

819
00:42:47,800 --> 00:42:48,940
那就是bug

820
00:42:53,960 --> 00:42:55,520
这个也改一下吧

821
00:42:59,050 --> 00:43:00,730
然后把车改成

822
00:43:02,560 --> 00:43:03,790
这样非常简单呢

823
00:43:03,970 --> 00:43:06,100
我们两个页面是不就有了

824
00:43:07,280 --> 00:43:07,850
AI都有了

825
00:43:07,850 --> 00:43:10,550
我们是不是还需要创建一个页面模板就是

826
00:43:11,590 --> 00:43:12,010
VO

827
00:43:12,040 --> 00:43:13,150
像WiFi打包之后

828
00:43:13,150 --> 00:43:14,230
最终就跟JS渲染

829
00:43:14,230 --> 00:43:15,130
需要渲染到哪呢

830
00:43:15,130 --> 00:43:16,360
是我们XP模式的话

831
00:43:16,360 --> 00:43:18,280
就是就只有一个页面

832
00:43:18,460 --> 00:43:19,600
所以说只有一个页面的话

833
00:43:19,600 --> 00:43:22,600
这里我们就需要来创建一个页面的模板

834
00:43:23,200 --> 00:43:26,800
比如说我们就给它起名叫index的template

835
00:43:30,580 --> 00:43:35,290
非常简单的一个模板S2

836
00:43:37,360 --> 00:43:39,790
常见的我们这里是不是就是一个空的div

837
00:43:40,610 --> 00:43:42,620
所以说那显然会看到白品的

838
00:43:42,620 --> 00:43:44,120
因为一上来一面啥也没有

839
00:43:44,120 --> 00:43:45,680
就等着你脚本加载完毕

840
00:43:45,860 --> 00:43:48,320
才能把那个当插入进来

841
00:43:49,490 --> 00:43:50,240
页面有了

842
00:43:50,570 --> 00:43:51,950
现在基本上都全了

843
00:43:52,010 --> 00:43:52,850
那接下来的话

844
00:43:53,240 --> 00:43:55,250
我们就来创建我们的唯一实例

845
00:43:55,490 --> 00:43:57,950
最终把我们这五一的话

846
00:43:57,950 --> 00:44:00,440
最终都给他挂在到我们这个倒木上

847
00:44:07,160 --> 00:44:08,720
这里的话我们是不是就需要用到

848
00:44:11,570 --> 00:44:14,390
无忧一三给我们提供了一些方法

849
00:44:17,050 --> 00:44:18,550
他给我们提供了

850
00:44:18,610 --> 00:44:19,720
客户端使用的是吧

851
00:44:19,870 --> 00:44:21,760
我们就使用他的可瑞的APP

852
00:44:22,060 --> 00:44:22,780
然后服务端呢

853
00:44:22,870 --> 00:44:25,270
我们就可以使用他的可瑞的APP

854
00:44:25,870 --> 00:44:28,630
这个是和吴悠一还是有一些区别的

855
00:44:31,230 --> 00:44:32,550
滋流安装一下

856
00:44:37,340 --> 00:44:39,560
现在还需要加next呢

857
00:44:42,620 --> 00:44:43,160
我看一下

858
00:44:47,990 --> 00:44:49,610
安装WEX这个

859
00:44:57,710 --> 00:45:03,020
现在3.2.6版本可以看到VS是不是4.0版下面就安装上吧

860
00:45:03,770 --> 00:45:04,850
还有我们的友谊

861
00:45:04,850 --> 00:45:05,420
如此

862
00:45:08,570 --> 00:45:10,070
可以看到是不是都加了next的

863
00:45:10,160 --> 00:45:12,230
按照这个最新的X5版本

864
00:45:13,120 --> 00:45:15,700
安装时候在家at next的

865
00:45:16,030 --> 00:45:17,170
按照这个最新的

866
00:45:20,750 --> 00:45:22,520
QQ的IP显然是我们单

867
00:45:22,520 --> 00:45:23,390
是不是这个服务单

868
00:45:24,300 --> 00:45:25,560
炫的时候就要用到它

869
00:45:26,610 --> 00:45:28,710
然后把我们的跟页面引入进来

870
00:45:31,710 --> 00:45:33,300
是在我们的APP

871
00:45:36,140 --> 00:45:37,310
这是我们的根页面

872
00:45:38,810 --> 00:45:43,220
在这个之后我们就来创建我们的事不倒出去

873
00:45:43,820 --> 00:45:45,770
一个在客户端调用时使用

874
00:45:45,770 --> 00:45:46,880
一个是在服务端使用

875
00:45:47,210 --> 00:45:49,850
那这里我们就是刚提到这个避免撞单里

876
00:45:49,940 --> 00:45:51,440
我们就需要按这种方式来写

877
00:45:51,440 --> 00:45:55,430
每次的话是不是都通过这样的一个函数去进行一个创建

878
00:45:55,850 --> 00:45:57,260
这就相当于一个工厂函数

879
00:45:57,260 --> 00:45:58,370
来重复的进行咨询

880
00:45:58,640 --> 00:46:00,290
然后为每个寝室去创建一个

881
00:46:01,110 --> 00:46:02,460
单独的一个应用实例

882
00:46:02,700 --> 00:46:04,320
要不我们服务端启动起来之后

883
00:46:04,530 --> 00:46:06,450
那一个实力就会一直躺在那儿呢

884
00:46:08,330 --> 00:46:10,610
我们这里最终导出一个这样的函数

885
00:46:14,660 --> 00:46:16,550
另外我们需要宽带是不是一个在服务端

886
00:46:16,550 --> 00:46:17,390
一个在客户端执行

887
00:46:17,390 --> 00:46:22,190
那我们怎么去判断它到底是服务端执行的还是客户端执行呢

888
00:46:22,280 --> 00:46:24,710
这里我们就有一个非常好的地方判断

889
00:46:24,710 --> 00:46:27,770
因为你在服务端是不是它是没有Windows或者是盗墓的

890
00:46:27,770 --> 00:46:29,210
所以说我们就判断一下

891
00:46:29,210 --> 00:46:32,270
你这个Windows是不是等等于unDeFined

892
00:46:32,510 --> 00:46:34,700
我就知道

893
00:46:34,700 --> 00:46:36,920
你到底是不是在服务端去执行的

894
00:46:37,040 --> 00:46:38,840
还在客户端咨询的这里

895
00:46:38,840 --> 00:46:40,130
所以我们就可以判断到了

896
00:46:41,360 --> 00:46:44,090
如果他为促的话是不是

897
00:46:45,770 --> 00:46:47,210
如果等于unDeFined

898
00:46:47,270 --> 00:46:49,100
那证明是在服务端执行的

899
00:46:49,100 --> 00:46:50,690
我就调用这个科瑞特

900
00:46:51,710 --> 00:46:53,270
如果你是在客户端执行的呢

901
00:46:53,480 --> 00:46:55,370
我就知道你这个可瑞在APP

902
00:46:56,150 --> 00:46:56,960
然后取

903
00:46:58,550 --> 00:46:58,790
的话

904
00:46:58,790 --> 00:46:59,180
我们

905
00:47:00,800 --> 00:47:01,340
等于

906
00:47:02,720 --> 00:47:03,590
这样就可以啦

907
00:47:04,250 --> 00:47:06,020
然后最终将他retire回来

908
00:47:08,150 --> 00:47:10,910
是不是这样我们的APP系列我们就创建完了

909
00:47:11,880 --> 00:47:13,170
然后我们就可以再扣带

910
00:47:14,630 --> 00:47:16,130
客户端入口我们就行了

911
00:47:16,160 --> 00:47:17,210
然后把他打进来

912
00:47:17,870 --> 00:47:23,030
可瑞慈APP from10个是这样

913
00:47:25,790 --> 00:47:27,260
我们把它解构出来

914
00:47:27,410 --> 00:47:29,180
我看一下这怎么导出来的

915
00:47:32,750 --> 00:47:35,270
It default thanks its

916
00:47:36,540 --> 00:47:36,870
嗯

917
00:47:39,370 --> 00:47:40,300
结构起来

918
00:47:41,740 --> 00:47:44,290
可瑞的一批一直行事不就反馈回来了

919
00:47:44,290 --> 00:47:47,320
把我们的一些我们在V3中使用的话

920
00:47:47,620 --> 00:47:49,210
我们需要去进行挂载

921
00:47:49,540 --> 00:47:52,870
他有这个MT方法挂在哪呢

922
00:47:52,930 --> 00:47:53,740
是不是我们的

923
00:47:56,470 --> 00:47:57,070
这里写的

924
00:47:57,970 --> 00:48:00,220
AP是不是给他挂在上就行了

925
00:48:04,540 --> 00:48:09,610
这样我们这个APP we跟实力组件是不是最终渲染完成之后就能挂到我们这个页面里了

926
00:48:11,540 --> 00:48:14,000
这套流程到现在大家没有什么问题吧

927
00:48:15,640 --> 00:48:16,960
国际惯例也也有

928
00:48:16,960 --> 00:48:17,380
Root啊

929
00:48:17,380 --> 00:48:19,360
Root man都行

930
00:48:23,030 --> 00:48:23,510
没有问题的

931
00:48:23,510 --> 00:48:24,140
客户愿意

932
00:48:24,230 --> 00:48:25,340
然后我们就继续往下

933
00:48:25,340 --> 00:48:30,290
我们就做最简单的一些微的一些写东西就差不多了

934
00:48:30,350 --> 00:48:31,610
我们先来配一下WiFi

935
00:48:31,610 --> 00:48:33,380
看一下能不能先让他跑起来

936
00:48:35,450 --> 00:48:36,140
都没有问题

937
00:48:36,170 --> 00:48:39,140
因为这对于很多同学来说都比较熟悉

938
00:48:39,200 --> 00:48:40,760
也是非常基础的一些操作

939
00:48:41,330 --> 00:48:44,540
只是有的同学可能对HR这个流程还不熟悉而已

940
00:48:46,120 --> 00:48:48,430
那这里我们就用到web pack啦

941
00:48:49,660 --> 00:48:50,740
那你要用到ipad

942
00:48:50,740 --> 00:48:52,420
那你首先就需要来安装一下

943
00:48:52,960 --> 00:48:54,250
然后在这些版本的话

944
00:48:54,250 --> 00:48:56,770
也是ipad和ipad是不是进行了拆分

945
00:48:56,770 --> 00:48:58,120
所以说你安装的时候

946
00:48:58,120 --> 00:48:59,650
这两个要同时给他安装上

947
00:49:01,200 --> 00:49:02,970
然后我们要解析微语法

948
00:49:03,180 --> 00:49:05,370
那我们显然是还需要用到

949
00:49:05,370 --> 00:49:08,370
危楼的危楼的你安装也需要注意一下

950
00:49:09,740 --> 00:49:11,030
你要按照这个at next

951
00:49:11,120 --> 00:49:14,510
你如果按照之前的版本来解决现在这个微山的最新版本

952
00:49:14,810 --> 00:49:16,040
那他肯定会报错的

953
00:49:16,610 --> 00:49:18,650
因为社会的不用不用配置

954
00:49:19,130 --> 00:49:20,720
我们先把客户端写完吗

955
00:49:20,810 --> 00:49:22,130
这个是服务端的入口了

956
00:49:22,220 --> 00:49:23,750
我们一会儿去配置这个服务端

957
00:49:25,410 --> 00:49:26,280
我们一点点来

958
00:49:26,370 --> 00:49:27,120
不要着急

959
00:49:28,810 --> 00:49:30,520
我们要解析位于法

960
00:49:30,520 --> 00:49:33,280
首先把这个谓语load给他安装上

961
00:49:33,760 --> 00:49:34,930
一定要注意这个版本

962
00:49:36,420 --> 00:49:37,800
版本一定要匹配上才行

963
00:49:38,370 --> 00:49:41,940
然后的话我们要解析JS或者说我们用的X语法之类的

964
00:49:42,150 --> 00:49:44,640
我们是不是现在基本上都用背包就处理

965
00:49:45,090 --> 00:49:46,800
那肯定是需要安装上背包啦

966
00:49:47,670 --> 00:49:50,340
背包load我们用背包的话

967
00:49:50,340 --> 00:49:52,080
除了用背包的还有一些什么呢

968
00:49:52,260 --> 00:49:54,120
是还需要用到它的一些核心代码

969
00:49:54,150 --> 00:49:55,440
是不是他都给你们放到了

970
00:49:55,860 --> 00:49:56,970
还被包靠里边

971
00:49:59,600 --> 00:50:00,050
除了这个

972
00:50:00,050 --> 00:50:00,920
我们还用到一个

973
00:50:01,130 --> 00:50:04,400
它提供了一个非常现在是不是一个插件包的集合

974
00:50:04,460 --> 00:50:07,880
像之前我们需要单独配置什么

975
00:50:07,880 --> 00:50:08,840
S200

976
00:50:09,660 --> 00:50:11,340
20151S2016之类的

977
00:50:11,340 --> 00:50:13,800
现在我们直接用这个艾特背包present

978
00:50:13,860 --> 00:50:15,120
因为是不就可以了

979
00:50:15,120 --> 00:50:16,500
这样一个插件包的即可

980
00:50:16,650 --> 00:50:17,820
然后把它安装上

981
00:50:18,890 --> 00:50:23,630
这是解析我们的比如说1S六加的语法进行转换

982
00:50:25,360 --> 00:50:26,950
这是解析我们DS的

983
00:50:26,980 --> 00:50:28,540
还有解析我们CS的

984
00:50:28,750 --> 00:50:30,340
是不是需要我们的CS的

985
00:50:31,090 --> 00:50:32,470
这个大家切到现在的话

986
00:50:32,470 --> 00:50:34,900
可以就直接静音这样写

987
00:50:35,910 --> 00:50:37,110
旧电脑的东西写的话

988
00:50:37,110 --> 00:50:38,880
你就知道吃哪些东西下楼的

989
00:50:39,390 --> 00:50:42,090
然后我们顺便把提取CS的也给他加上

990
00:50:42,690 --> 00:50:43,260
TCL的话

991
00:50:43,260 --> 00:50:45,990
我们就用到WiFi的插件叫

992
00:50:47,480 --> 00:50:49,940
有去上迷你c X tract plug in

993
00:50:50,120 --> 00:50:51,740
把CS单独踢出来

994
00:50:51,740 --> 00:50:53,030
放到一个文件中

995
00:50:54,700 --> 00:50:55,870
或者你用style的话

996
00:50:55,870 --> 00:50:59,680
Styles是不是就直接通过styles的方式内连到你这里了

997
00:51:00,350 --> 00:51:01,220
一个是Stella的

998
00:51:01,220 --> 00:51:03,290
还有这个mini zs a tract play

999
00:51:03,320 --> 00:51:04,670
单独提出来

1000
00:51:04,670 --> 00:51:06,920
这样我们需要的一些东西是不是基本差不多了

1001
00:51:07,700 --> 00:51:08,570
我们就来配置了

1002
00:51:08,600 --> 00:51:10,850
首先我们建一个必要的文件夹

1003
00:51:12,080 --> 00:51:13,910
不要在文件夹的话下边放

1004
00:51:15,170 --> 00:51:17,930
首先是不是我们要进行环境的区分

1005
00:51:18,260 --> 00:51:21,020
那开发环境和生产环境是一个供应的配置

1006
00:51:21,020 --> 00:51:23,330
我们就放到这个WiFi热点被在家里边

1007
00:51:23,720 --> 00:51:25,130
然后其他单子呢

1008
00:51:25,160 --> 00:51:28,880
我们就单独写一下clean Li ness

1009
00:51:30,150 --> 00:51:30,720
没有起色

1010
00:51:31,510 --> 00:51:32,950
还有一个的话是受

1011
00:51:35,880 --> 00:51:38,130
这第一位的话

1012
00:51:38,130 --> 00:51:39,420
没有单独分开打包

1013
00:51:39,630 --> 00:51:40,860
因为像客户端的话

1014
00:51:41,130 --> 00:51:42,450
你是在浏览器运行的

1015
00:51:42,570 --> 00:51:44,010
而你社会上需要代码的话

1016
00:51:44,010 --> 00:51:46,050
是不是在node端运行的note上

1017
00:51:46,320 --> 00:51:47,520
像note他这是什么语法

1018
00:51:47,520 --> 00:51:49,230
他是不这是common的语法

1019
00:51:49,320 --> 00:51:50,370
但是我们打包的时候

1020
00:51:50,550 --> 00:51:53,010
有些打包服务的时候就需要特殊的处理了

1021
00:51:53,250 --> 00:51:56,820
因为像前面我们在第二周

1022
00:51:57,620 --> 00:51:58,220
第三周

1023
00:52:00,150 --> 00:52:01,170
我们前面处理过

1024
00:52:01,560 --> 00:52:05,460
就是我们要指定打包出来文件是我们的common JS语法才可以

1025
00:52:06,300 --> 00:52:09,150
这样的话我们可以才可以在note上我们进行调用

1026
00:52:10,100 --> 00:52:12,470
那我们就来快速的写下这个ipad的配置

1027
00:52:13,550 --> 00:52:15,980
首先我们里边是否用到好的路径的处理

1028
00:52:16,160 --> 00:52:18,050
为了统一各个浏览器用那个系统

1029
00:52:18,050 --> 00:52:19,610
联合系统等等他们的一些区别

1030
00:52:19,850 --> 00:52:22,670
我们桶用到note给我们提供的这个Python模块

1031
00:52:25,610 --> 00:52:27,380
他怎么快速给你们提供了热壶

1032
00:52:27,920 --> 00:52:29,180
一个是解析成绝对路径

1033
00:52:29,180 --> 00:52:31,070
一个是拼接成解析绝对路径

1034
00:52:31,220 --> 00:52:32,210
在哪都可以使用

1035
00:52:33,970 --> 00:52:35,560
然后打出我们的配置

1036
00:52:37,030 --> 00:52:38,170
首先是不

1037
00:52:38,230 --> 00:52:41,230
我们的最终要把它打包到哪

1038
00:52:43,630 --> 00:52:45,040
入口的话我们就不再配的

1039
00:52:45,040 --> 00:52:45,550
入口的话

1040
00:52:45,550 --> 00:52:47,350
因为像客户端和服务端

1041
00:52:47,350 --> 00:52:48,220
他们入口不一样的

1042
00:52:48,400 --> 00:52:50,200
一个入口是一可怜的GS

1043
00:52:50,200 --> 00:52:51,460
一个是NGCDF

1044
00:52:51,610 --> 00:52:54,340
所以说他们虽然说他们的入口不一样

1045
00:52:54,340 --> 00:52:55,720
但是他们的出口是一样的

1046
00:52:57,100 --> 00:52:59,110
我们统一打包到我们的diss的目录

1047
00:52:59,110 --> 00:52:59,980
下面是肉

1048
00:53:05,370 --> 00:53:06,180
这是个

1049
00:53:07,230 --> 00:53:07,560
注意

1050
00:53:07,560 --> 00:53:09,840
我们现在因为是在这个必要的文件下

1051
00:53:09,840 --> 00:53:10,800
所以说

1052
00:53:10,800 --> 00:53:12,600
你要点点这个返回你的上级

1053
00:53:12,690 --> 00:53:14,730
就是打包初期的目录

1054
00:53:15,720 --> 00:53:17,190
然后模块的处理呢

1055
00:53:17,430 --> 00:53:21,690
Rose是不是要处理我们的GS还有我们的CS了

1056
00:53:21,840 --> 00:53:22,890
他是一个数组

1057
00:53:26,250 --> 00:53:27,510
这里我们是不是就写正的

1058
00:53:27,510 --> 00:53:30,030
然后比如说我们1.5e结尾的

1059
00:53:32,830 --> 00:53:35,860
1.5UE结尾的文件是不是就要用到我们的无忧一楼的

1060
00:53:36,010 --> 00:53:37,030
那就给他配置上

1061
00:53:37,870 --> 00:53:38,350
那这样的话

1062
00:53:38,350 --> 00:53:40,510
我们的无一法就会被解析了

1063
00:53:42,480 --> 00:53:49,230
然后还有我们的GSGS的话就是以我们的点GS结尾的

1064
00:53:50,870 --> 00:53:53,330
S结尾的GS结尾的话

1065
00:53:53,330 --> 00:53:55,610
这里就要用到我们的微波炉的

1066
00:54:00,220 --> 00:54:00,970
微波炉的话

1067
00:54:00,970 --> 00:54:01,870
它的一些配置的话

1068
00:54:01,870 --> 00:54:05,950
其实是在这里直接配置options或者是单独写一个文件

1069
00:54:06,040 --> 00:54:06,850
这都是可以的

1070
00:54:07,000 --> 00:54:08,410
这里的话推荐

1071
00:54:08,410 --> 00:54:09,910
直接单独写到一个文件里边

1072
00:54:09,970 --> 00:54:11,380
就是在你的项目根目录

1073
00:54:11,860 --> 00:54:14,020
根目录新建一个点被巴西

1074
00:54:14,260 --> 00:54:17,590
这个都是也是我们之前是不是操作过的的话

1075
00:54:17,590 --> 00:54:19,600
我们就配置一个绿色present

1076
00:54:19,840 --> 00:54:20,560
就是把我们

1077
00:54:21,740 --> 00:54:23,450
安装的这个背包

1078
00:54:24,340 --> 00:54:24,820
Present

1079
00:54:24,820 --> 00:54:28,030
烟给他安装上

1080
00:54:30,630 --> 00:54:31,050
因为

1081
00:54:33,060 --> 00:54:33,600
是这样

1082
00:54:33,600 --> 00:54:35,460
背包就配置完成了

1083
00:54:37,640 --> 00:54:41,360
可以看到我们的基础解析V的解析JS的

1084
00:54:41,840 --> 00:54:43,730
这样他一些公共的地方就处理完了

1085
00:54:43,730 --> 00:54:44,780
然后CS的部分呢

1086
00:54:45,020 --> 00:54:46,790
我们就分别放到

1087
00:54:47,420 --> 00:54:49,370
客户端和服务端单独去处理

1088
00:54:49,370 --> 00:54:50,390
因为像CS的话

1089
00:54:50,390 --> 00:54:52,130
在服务端它是不需要去处理的

1090
00:54:53,120 --> 00:54:55,040
你只需要在客户端去处理完成就行了

1091
00:54:55,100 --> 00:54:56,120
你在服务端的话

1092
00:54:56,420 --> 00:54:58,190
对CS他他也是不认识的

1093
00:54:58,490 --> 00:55:01,220
接下来我们继续配置这个客户端的代码

1094
00:55:04,700 --> 00:55:05,540
那首先的话

1095
00:55:05,540 --> 00:55:09,680
我们这里同样也是需要这个路径的复制一下

1096
00:55:16,030 --> 00:55:17,890
那这里我们要进行这配置合并

1097
00:55:18,010 --> 00:55:19,810
是不是大家应该比较熟悉

1098
00:55:19,810 --> 00:55:20,440
我们有一个

1099
00:55:21,640 --> 00:55:22,030
默契

1100
00:55:24,040 --> 00:55:28,000
就把我们的公共配置和我们的各个环境下的配置把它合并起来

1101
00:55:29,650 --> 00:55:30,400
就等于

1102
00:55:36,860 --> 00:55:38,420
Web pack磨叽

1103
00:55:46,650 --> 00:55:49,740
然后先把我们的贝斯凯飞哥引入进来

1104
00:55:55,930 --> 00:55:56,830
不引入进来了

1105
00:55:57,430 --> 00:55:58,480
然后我们

1106
00:56:00,530 --> 00:56:01,310
DV看飞哥

1107
00:56:02,510 --> 00:56:03,110
单独的

1108
00:56:03,110 --> 00:56:05,270
我们这个蔻丹看一下这个配置呢

1109
00:56:05,660 --> 00:56:08,060
首先我们设置一下development

1110
00:56:10,460 --> 00:56:10,760
对啊

1111
00:56:10,760 --> 00:56:11,990
我们这都是开发模式下

1112
00:56:12,200 --> 00:56:14,300
没有写生产模式的话

1113
00:56:14,300 --> 00:56:15,860
这里要指定他的development

1114
00:56:16,550 --> 00:56:18,290
然后引起指定他的入口

1115
00:56:20,090 --> 00:56:23,330
入口的话就是我们的in the clean

1116
00:56:26,900 --> 00:56:27,410
clean

1117
00:56:28,880 --> 00:56:29,210
clean

1118
00:56:29,810 --> 00:56:31,310
这就是我们的入口

1119
00:56:32,630 --> 00:56:34,310
然后打包吃吃的文件名呢

1120
00:56:36,620 --> 00:56:37,280
你知道这里

1121
00:56:37,280 --> 00:56:38,180
这里不是那种

1122
00:56:38,900 --> 00:56:41,180
这个N是不是大写的

1123
00:56:41,600 --> 00:56:43,640
有可能经常我们形容小动物写习惯

1124
00:56:43,640 --> 00:56:45,920
经常把file name n d n给他打血了

1125
00:56:47,750 --> 00:56:48,230
打包起来

1126
00:56:48,230 --> 00:56:50,810
我们就叫克林特

1127
00:56:50,930 --> 00:56:51,440
扳倒

1128
00:56:56,190 --> 00:56:56,460
的话

1129
00:56:56,460 --> 00:56:57,930
我们就在开发环境的时候

1130
00:56:57,930 --> 00:56:59,400
我们就起个第一个笑吧

1131
00:56:59,670 --> 00:57:01,350
比较容易观看的向往

1132
00:57:02,380 --> 00:57:03,580
我们的内容在哪呢

1133
00:57:03,580 --> 00:57:05,410
他有个content

1134
00:57:07,120 --> 00:57:09,100
这里关于ipad就是备上

1135
00:57:09,130 --> 00:57:09,970
如果大家还不熟悉

1136
00:57:09,970 --> 00:57:12,700
录播课里是否有专门讲过直播伴侣里边

1137
00:57:13,950 --> 00:57:16,710
这不讲过ipad的非常基础的一些API的配置

1138
00:57:17,400 --> 00:57:19,890
然后前面的话我们也是使用过多次

1139
00:57:21,820 --> 00:57:22,780
说不定文件在哪里

1140
00:57:22,780 --> 00:57:23,770
然后端口的话

1141
00:57:23,770 --> 00:57:24,670
你也可以指定一下

1142
00:57:24,790 --> 00:57:26,290
主要指定是8080

1143
00:57:28,550 --> 00:57:30,230
然后如果我们是使用黑色模式的话

1144
00:57:30,230 --> 00:57:32,570
我们这里还最好配置一个history

1145
00:57:32,810 --> 00:57:34,190
就是EPS for back

1146
00:57:34,400 --> 00:57:34,940
为什么呢

1147
00:57:35,000 --> 00:57:36,380
因为我们黑头模式的话

1148
00:57:36,530 --> 00:57:37,880
你如果上线的话是还需要

1149
00:57:38,120 --> 00:57:40,280
比如说你是放在一个服务器或者其他附近

1150
00:57:40,280 --> 00:57:41,030
你要配置

1151
00:57:42,880 --> 00:57:44,080
一个地址的这个

1152
00:57:46,440 --> 00:57:47,460
就是处理的

1153
00:57:47,820 --> 00:57:48,870
因为你在其他地方

1154
00:57:48,870 --> 00:57:49,500
你刷新的话

1155
00:57:49,500 --> 00:57:50,400
他去请求服务端

1156
00:57:50,400 --> 00:57:51,300
服务端是没有的

1157
00:57:51,510 --> 00:57:53,430
那汇报汇报一个404的问题

1158
00:57:54,350 --> 00:57:55,520
这个地方需要处理一下

1159
00:57:55,550 --> 00:57:58,040
如果你用汉字路由模式的话是没有问题的

1160
00:57:58,070 --> 00:58:00,140
但是黑市模式的话就讨论这个问题

1161
00:58:00,350 --> 00:58:01,280
那开发模式的话

1162
00:58:01,520 --> 00:58:03,170
所以它提供了黑色fall back

1163
00:58:03,380 --> 00:58:04,400
我们只要配下这个

1164
00:58:04,550 --> 00:58:06,050
等你刷新的时候就没有问题了

1165
00:58:06,320 --> 00:58:07,460
当你真正上线的时候

1166
00:58:07,460 --> 00:58:10,190
黑洞模式还需要服务端处理一下

1167
00:58:10,190 --> 00:58:11,150
这个需要注意一下

1168
00:58:11,870 --> 00:58:12,710
摸底的话

1169
00:58:12,710 --> 00:58:14,600
我们就需要单独的来处理一下

1170
00:58:16,690 --> 00:58:19,480
谁的话是不是就出来我们CSCS的话

1171
00:58:19,480 --> 00:58:21,280
我们是不是安装了一个

1172
00:58:23,090 --> 00:58:24,080
先把它合并起来

1173
00:58:27,380 --> 00:58:28,580
使用我们的墨子

1174
00:58:30,980 --> 00:58:32,810
合并一下我们的被子看飞哥

1175
00:58:32,810 --> 00:58:34,700
还有我们的微看飞哥

1176
00:58:36,670 --> 00:58:37,690
把他的立场

1177
00:58:39,890 --> 00:58:42,050
接下来是不是就处理我们的CS了

1178
00:58:45,560 --> 00:58:47,150
因为服务端不需要不需要处理

1179
00:58:47,150 --> 00:58:50,420
所以说单独就放到客户端来进行处理

1180
00:58:54,040 --> 00:58:55,660
又要吉他的话

1181
00:58:55,660 --> 00:58:58,030
是不是就用到我们的CSSVO的

1182
00:58:59,770 --> 00:59:01,000
但使用CL的话

1183
00:59:01,000 --> 00:59:02,230
他只是把文件解析了

1184
00:59:02,440 --> 00:59:03,700
但是你要解析放到哪呢

1185
00:59:03,700 --> 00:59:05,140
是单独放到文件中呢

1186
00:59:05,350 --> 00:59:07,000
还是放到我们的HTML中

1187
00:59:07,000 --> 00:59:08,320
通过SQL内联的方式

1188
00:59:08,530 --> 00:59:09,010
那这里的话

1189
00:59:09,010 --> 00:59:10,600
我们显示要把它提取出来

1190
00:59:10,900 --> 00:59:12,250
如果你放在一起蛮中的话

1191
00:59:12,430 --> 00:59:13,540
你负担也不识别

1192
00:59:14,230 --> 00:59:15,250
提取出来的话会

1193
00:59:16,300 --> 00:59:16,630
很

1194
00:59:17,270 --> 00:59:19,430
这个其实这个提取不提取的话

1195
00:59:19,430 --> 00:59:20,780
也得看具体的情况

1196
00:59:20,780 --> 00:59:23,360
如果你CF比较题比较小的话

1197
00:59:23,360 --> 00:59:25,130
你放在你手里边儿也没有什么问题

1198
00:59:25,460 --> 00:59:27,380
如果你的样子特别多

1199
00:59:27,380 --> 00:59:29,060
你直接放打到你的一条里边儿

1200
00:59:29,300 --> 00:59:30,200
那显然是不行的

1201
00:59:30,290 --> 00:59:30,560
对吧

1202
00:59:30,560 --> 00:59:31,760
就单独把他踢出来

1203
00:59:34,030 --> 00:59:36,670
那这里我们就用到提取的话

1204
00:59:36,670 --> 00:59:37,840
我们用到一个插件

1205
00:59:37,840 --> 00:59:42,430
叫我们刚安装了叫米c ss extract

1206
00:59:45,680 --> 00:59:46,130
泥

1207
00:59:46,340 --> 00:59:48,230
然后是

1208
00:59:50,000 --> 00:59:50,510
CSSD

1209
01:00:01,500 --> 01:00:03,510
我们就用到它的load

1210
01:00:04,020 --> 01:00:04,890
注意虽然

1211
01:00:05,730 --> 01:00:08,880
这里录的它这个顺序是从右往左的

1212
01:00:09,960 --> 01:00:12,930
可以看到他先经过c lo的把这个语法解析了

1213
01:00:12,930 --> 01:00:13,470
然后

1214
01:00:13,470 --> 01:00:16,710
我们再通过他提供的logo把它解析出来

1215
01:00:18,320 --> 01:00:19,550
这里就不要写证券

1216
01:00:20,600 --> 01:00:21,980
最终这样的CS

1217
01:00:22,220 --> 01:00:22,700
我们就

1218
01:00:24,200 --> 01:00:24,980
处理完成了

1219
01:00:26,270 --> 01:00:27,620
然后记得打个印

1220
01:00:27,620 --> 01:00:29,840
你需要给他配一下我们这次用的插件

1221
01:00:30,080 --> 01:00:31,520
丰富ipad的功能呢

1222
01:00:35,480 --> 01:00:38,450
CS提取就去CS的插件

1223
01:00:39,490 --> 01:00:40,570
另外我们要进行打包

1224
01:00:40,570 --> 01:00:42,160
是不是最终的代码还需要

1225
01:00:43,670 --> 01:00:46,640
比如说去吃的一些CS的一些包

1226
01:00:46,640 --> 01:00:51,260
或者是这些包是不是最终还需要自动注入到我们的H5模板里边

1227
01:00:51,620 --> 01:00:52,790
那这里我们自动住的话

1228
01:00:52,790 --> 01:00:56,480
我们就用到我们的H外拍plain这个模板

1229
01:00:58,670 --> 01:01:02,090
这个这个还没有安装安装一下

1230
01:01:06,500 --> 01:01:08,150
可以看到现在我们要开发一个项目

1231
01:01:08,150 --> 01:01:10,100
是不是先配置一大堆

1232
01:01:14,150 --> 01:01:14,540
等于

1233
01:01:21,770 --> 01:01:22,490
把他引入进来

1234
01:01:23,520 --> 01:01:25,440
然后我们就来配置这个插件了

1235
01:01:26,430 --> 01:01:29,100
首先我们得告诉他我们的模板在哪里

1236
01:01:29,340 --> 01:01:29,790
然后呢

1237
01:01:30,120 --> 01:01:32,850
如何去比如说一些其他的规则之类的

1238
01:01:33,240 --> 01:01:35,130
这个的话我们也没有其他特殊处理

1239
01:01:35,130 --> 01:01:37,290
我们只需要告诉他我们的模板在哪

1240
01:01:37,560 --> 01:01:38,010
然后呢

1241
01:01:38,130 --> 01:01:40,140
他就会把我们提出来的CS

1242
01:01:40,380 --> 01:01:44,850
就像这里我们来打包出来JS自动给我们注入到这个页面模板

1243
01:01:48,500 --> 01:01:48,980
肉

1244
01:01:52,140 --> 01:01:56,520
然后是带这个SRC目录下面的clint

1245
01:01:59,550 --> 01:02:03,420
这样的话我们的页面模板文件就可以了

1246
01:02:04,320 --> 01:02:09,150
这样的话我们的扣他配置好像就完成了

1247
01:02:16,300 --> 01:02:20,590
那这里我们就顺便把服务端的配置也给他处理了

1248
01:02:21,250 --> 01:02:22,000
服务端配置的话

1249
01:02:22,000 --> 01:02:24,550
主要就是你要注意一下你打包出来的

1250
01:02:26,160 --> 01:02:27,750
代码的一些语法规则

1251
01:02:27,750 --> 01:02:29,490
我们这里要要要给弄的用的

1252
01:02:29,640 --> 01:02:30,990
所以我们就要特别注意一下

1253
01:02:32,330 --> 01:02:33,410
自己来洗一下

1254
01:02:37,010 --> 01:02:38,750
同样都是需要这一个模块

1255
01:02:40,130 --> 01:02:40,970
墨子也行

1256
01:02:46,360 --> 01:02:47,380
先把它拿过来

1257
01:02:48,520 --> 01:02:49,210
另外的话

1258
01:02:49,480 --> 01:02:50,680
像web端的话

1259
01:02:50,680 --> 01:02:52,870
我们前面在第二周第三周时间中

1260
01:02:52,870 --> 01:02:53,470
我们讲过

1261
01:02:53,650 --> 01:02:54,520
像note的话

1262
01:02:54,520 --> 01:02:57,010
它的代码是都都不需要打包

1263
01:02:57,010 --> 01:02:58,240
在服务端里直接安装

1264
01:02:58,240 --> 01:03:00,310
就直接把这个服务启动起来了

1265
01:03:00,310 --> 01:03:01,330
所以说一些

1266
01:03:01,870 --> 01:03:02,920
那我们就不需要

1267
01:03:04,250 --> 01:03:07,940
不让一些第三方的依赖打包到我们的输出文件中

1268
01:03:11,390 --> 01:03:12,980
所以说这里我们是不是用到了一个

1269
01:03:13,040 --> 01:03:14,540
之前用的是一个叫

1270
01:03:22,030 --> 01:03:23,350
X

1271
01:03:29,040 --> 01:03:29,430
第一个

1272
01:03:30,750 --> 01:03:33,180
说不让一些第三方依赖打包到我们眼中

1273
01:03:33,180 --> 01:03:35,130
我们还需要这样的一个包

1274
01:03:39,070 --> 01:03:41,110
所以这个也需要安装一下

1275
01:03:50,010 --> 01:03:50,400
然后呢

1276
01:03:50,580 --> 01:03:51,480
把它运用这样

1277
01:03:52,500 --> 01:03:52,740
说

1278
01:03:52,740 --> 01:03:54,000
在服务端打包中

1279
01:03:54,000 --> 01:03:55,590
我们需要做一些特殊的事例

1280
01:04:02,150 --> 01:04:02,360
键

1281
01:04:05,130 --> 01:04:07,590
然后的话就是我们的which can figure

1282
01:04:10,470 --> 01:04:11,820
这个我们就快速的写一下

1283
01:04:11,820 --> 01:04:13,380
因为这个大家都比较熟悉

1284
01:04:13,680 --> 01:04:16,620
重要的还是大家那部分不熟悉

1285
01:04:17,670 --> 01:04:19,080
然后就是sok

1286
01:04:25,200 --> 01:04:25,740
然后呢

1287
01:04:25,920 --> 01:04:26,670
把它合并起来

1288
01:04:33,790 --> 01:04:34,780
Fish can figure

1289
01:04:34,780 --> 01:04:36,190
然后是shock

1290
01:04:37,440 --> 01:04:38,520
然后我们就来写

1291
01:04:40,330 --> 01:04:43,780
服务端入需要特殊处理的一些地方

1292
01:04:43,990 --> 01:04:46,300
首先摸的也是指定为development

1293
01:04:47,530 --> 01:04:49,300
如果你是上线环境的话

1294
01:04:49,300 --> 01:04:50,350
打包登陆上线的话

1295
01:04:50,350 --> 01:04:51,730
直接就改成products就行了

1296
01:04:53,910 --> 01:04:54,780
因为这里的话

1297
01:04:55,530 --> 01:04:57,660
我们老师来说一下这个流程嘛

1298
01:04:57,660 --> 01:04:58,440
所以说这里就

1299
01:04:59,500 --> 01:04:59,770
简单

1300
01:04:59,770 --> 01:05:01,630
先把这个流程我们先跑通

1301
01:05:05,310 --> 01:05:08,520
然后窄窄的小溪下边

1302
01:05:10,390 --> 01:05:11,860
Clean瘦

1303
01:05:12,730 --> 01:05:14,590
是不是这是我们的服务端的入口

1304
01:05:17,120 --> 01:05:19,100
然后他打包出来的名字呢

1305
01:05:25,420 --> 01:05:25,900
打不出来

1306
01:05:25,900 --> 01:05:27,490
我们给他取个名字叫so

1307
01:05:33,830 --> 01:05:34,610
其他地方

1308
01:05:35,580 --> 01:05:36,570
考的地方都不一样

1309
01:05:36,600 --> 01:05:38,610
在这里没有负责library

1310
01:05:39,060 --> 01:05:40,590
还有一个是一二

1311
01:05:42,590 --> 01:05:46,310
Library他给他这个指定我们的指定编译规则了

1312
01:05:46,490 --> 01:05:48,020
就指定为科吗

1313
01:05:51,770 --> 01:05:52,670
这个要注意一下

1314
01:05:53,000 --> 01:05:54,320
这是需要特别注意的

1315
01:05:54,320 --> 01:05:55,580
就是指定编译规则

1316
01:05:59,950 --> 01:06:03,520
因为你打包出来的话是要给I know的环境使用的

1317
01:06:04,140 --> 01:06:04,380
对吧

1318
01:06:04,380 --> 01:06:06,630
这两把需要指定一下它的环境

1319
01:06:08,100 --> 01:06:08,670
target

1320
01:06:09,210 --> 01:06:10,500
我们的环境的话是漏的

1321
01:06:12,740 --> 01:06:13,940
一个是指定编译贵的

1322
01:06:13,970 --> 01:06:15,830
另外的话指定它的一个环境

1323
01:06:17,820 --> 01:06:19,200
这是特殊需要注意的

1324
01:06:19,200 --> 01:06:19,920
然后呢

1325
01:06:20,190 --> 01:06:22,320
我们还需要不让第三方依赖

1326
01:06:23,400 --> 01:06:24,780
达到我们的

1327
01:06:26,350 --> 01:06:26,710
包装

1328
01:06:26,710 --> 01:06:30,850
所以说我们这里就可以用配置一下这个node next month

1329
01:06:33,140 --> 01:06:33,950
这里的话就是

1330
01:06:35,510 --> 01:06:37,370
不让第三方的了

1331
01:06:38,450 --> 01:06:40,520
打包的输出文件

1332
01:06:42,300 --> 01:06:44,640
这就是在notes中需要透露出的三个地方

1333
01:06:44,700 --> 01:06:46,050
这个我记得应该是

1334
01:06:46,050 --> 01:06:46,800
在第二周

1335
01:06:46,800 --> 01:06:48,990
第三周我们特殊处理过了

1336
01:06:51,370 --> 01:06:52,150
然后在服务端

1337
01:06:52,150 --> 01:06:53,710
因为像CS的话

1338
01:06:53,710 --> 01:06:56,560
是不是在客户端它已经解析过一次啦

1339
01:06:56,560 --> 01:06:58,360
在这里所以说呢

1340
01:07:02,410 --> 01:07:04,240
猫的有点小错吧

1341
01:07:05,710 --> 01:07:07,450
Model它是一个数字

1342
01:07:07,900 --> 01:07:08,470
若

1343
01:07:26,710 --> 01:07:28,270
Model Rose

1344
01:07:31,130 --> 01:07:32,900
因为这里你在客户端已经处理过了

1345
01:07:32,900 --> 01:07:34,160
所以说在服务端呢

1346
01:07:34,370 --> 01:07:36,080
你就没必要重复的进行处理

1347
01:07:36,440 --> 01:07:38,480
我们不进行重复处理的话

1348
01:07:38,480 --> 01:07:39,620
我们就可以把它忽略掉

1349
01:07:39,620 --> 01:07:40,340
就是在服务端

1350
01:07:40,640 --> 01:07:44,450
对于如果你解析到CS就不需要再进行处理了

1351
01:07:44,480 --> 01:07:49,550
这里的话你可以用到比如说南路的或者是忽略的绿的都行的话

1352
01:07:49,550 --> 01:07:50,450
我们就用到一个

1353
01:07:51,220 --> 01:07:51,670
Ignore

1354
01:07:55,030 --> 01:07:55,480
IGR

1355
01:07:55,660 --> 01:07:56,920
然后load杠的

1356
01:08:01,190 --> 01:08:03,680
所以说这里我们就只需要把它忽略就行了

1357
01:08:03,680 --> 01:08:05,660
在这里我们就不需要把它进行解析

1358
01:08:07,950 --> 01:08:08,220
这个

1359
01:08:09,370 --> 01:08:10,870
就可以把它忽略掉了

1360
01:08:11,890 --> 01:08:13,780
要不的话你会造成重复的解析

1361
01:08:13,780 --> 01:08:14,800
这样完全没有必要

1362
01:08:15,730 --> 01:08:20,530
这样话会貌似我们的服务端我们也配置完成了

1363
01:08:21,610 --> 01:08:25,540
这样的话关于ipad的配置我们就这样快速的就搭建了一下

1364
01:08:25,570 --> 01:08:28,390
然后我们是否命令还缺少一些

1365
01:08:36,230 --> 01:08:38,540
这里我们就创建一下可怜的瘦

1366
01:08:41,490 --> 01:08:42,570
这个的话就是

1367
01:08:43,960 --> 01:08:46,480
启动起我们客户端的的微生物环境来

1368
01:08:46,990 --> 01:08:49,360
这里我们就写一下我ipad收

1369
01:08:51,640 --> 01:08:54,790
因为我们的ipad它默认是可以识别到你的根目

1370
01:08:54,790 --> 01:08:56,740
下面的ipad点咖啡的件儿

1371
01:08:56,740 --> 01:08:58,780
这里的话我们统一放到了别的目录下

1372
01:08:58,780 --> 01:09:03,340
所以说你要通过看这个动态的指定你的配置文件在哪里

1373
01:09:03,400 --> 01:09:04,510
要ipad找不到

1374
01:09:10,180 --> 01:09:12,460
然后我们配合下客户端的打包

1375
01:09:14,240 --> 01:09:15,500
客人打包的话就是

1376
01:09:16,270 --> 01:09:17,320
不急的微商吗

1377
01:09:17,320 --> 01:09:18,640
因为我们要进行打包了

1378
01:09:18,640 --> 01:09:19,930
这个直接进行打包

1379
01:09:23,030 --> 01:09:23,720
然后另一个呢

1380
01:09:23,900 --> 01:09:25,160
就是15吨的

1381
01:09:30,140 --> 01:09:31,460
这个福利一下

1382
01:09:34,790 --> 01:09:35,810
杠杠咖啡

1383
01:09:35,930 --> 01:09:36,980
然后是受

1384
01:09:42,910 --> 01:09:43,540
这里可以看到

1385
01:09:43,540 --> 01:09:45,040
我们要最终要执行代码的话

1386
01:09:45,130 --> 01:09:47,110
是不是客户端代码要打包

1387
01:09:47,110 --> 01:09:48,820
服务端代码同时是不是也要打包

1388
01:09:49,120 --> 01:09:50,530
然后为了方便点呢

1389
01:09:52,270 --> 01:09:52,630
嗯

1390
01:09:54,260 --> 01:09:55,040
为了方便点

1391
01:09:55,040 --> 01:09:56,720
我们可以统一配置一个DV

1392
01:09:56,720 --> 01:09:57,110
必要的

1393
01:09:57,500 --> 01:09:59,660
然后来同时执行我们这两个答案

1394
01:10:00,830 --> 01:10:01,160
的话

1395
01:10:01,160 --> 01:10:05,390
你可以用到n PM run or这样的一些第三方的一些库

1396
01:10:05,480 --> 01:10:06,560
我们也可以直接用到

1397
01:10:07,780 --> 01:10:10,960
它提供的串行执行或者并执行这样的一些命令

1398
01:10:11,140 --> 01:10:12,160
它本身就支持的

1399
01:10:12,670 --> 01:10:14,890
首先是可令词第一位

1400
01:10:15,070 --> 01:10:15,640
然后呢

1401
01:10:17,140 --> 01:10:21,850
还有我们的颜色是不是同时进行这两个命令

1402
01:10:23,530 --> 01:10:24,640
这两个M的话

1403
01:10:24,640 --> 01:10:25,960
其实完全可以不分先后

1404
01:10:26,020 --> 01:10:27,070
他们可以分心打包

1405
01:10:27,670 --> 01:10:29,350
串行并行都没什么问题呢

1406
01:10:29,350 --> 01:10:30,550
最好是并行执行就行了

1407
01:10:32,110 --> 01:10:33,610
然后如果这样都打不完之后

1408
01:10:33,610 --> 01:10:35,380
我们是不是开房间要起一个

1409
01:10:37,810 --> 01:10:38,560
开发环境了

1410
01:10:39,730 --> 01:10:40,930
这里还需要安装一下

1411
01:10:44,020 --> 01:10:46,390
可不可以动态监听我们的文件的改变

1412
01:10:46,690 --> 01:10:47,320
然后来

1413
01:10:49,090 --> 01:10:51,280
就不用我们手机就重新启动服务了

1414
01:10:51,820 --> 01:10:53,410
Show APP解析

1415
01:10:54,580 --> 01:10:55,660
在我们的命令

1416
01:10:57,760 --> 01:10:58,900
刚刚安装了一个包

1417
01:11:01,200 --> 01:11:01,740
嗯

1418
01:11:04,960 --> 01:11:06,130
给他安装一下吧

1419
01:11:09,340 --> 01:11:10,300
是不是也安装上了

1420
01:11:12,040 --> 01:11:13,210
所以你使用习惯之后

1421
01:11:13,210 --> 01:11:15,670
像我讲过这么多课

1422
01:11:15,670 --> 01:11:18,730
还有之前是不是也之前也用到过一些

1423
01:11:18,730 --> 01:11:19,780
他说你熟悉之后

1424
01:11:19,840 --> 01:11:21,760
这其实就是你想要干什么

1425
01:11:21,760 --> 01:11:23,320
比如说你要处理的文件

1426
01:11:23,350 --> 01:11:25,240
你立马想到CL的

1427
01:11:25,240 --> 01:11:27,640
Mimi CS X play in或者是Stella的

1428
01:11:27,700 --> 01:11:28,960
你要解析GS

1429
01:11:28,960 --> 01:11:30,310
你立马就想到北玻炉的

1430
01:11:30,580 --> 01:11:32,740
你要处理这些资源的注入

1431
01:11:32,740 --> 01:11:34,390
每天晚就想到ipad

1432
01:11:34,990 --> 01:11:37,030
其实这个就是你不是经验丰富

1433
01:11:37,030 --> 01:11:37,960
就是你熟悉之后

1434
01:11:38,790 --> 01:11:39,690
熟能生巧嘛

1435
01:11:41,800 --> 01:11:42,850
其实这个配置的话

1436
01:11:42,850 --> 01:11:44,650
基本上都是比较固定的模式

1437
01:11:44,980 --> 01:11:47,980
你配置后就是各种组合起来使用就行了

1438
01:11:51,830 --> 01:11:52,910
这里我们运行一下

1439
01:11:53,180 --> 01:11:55,430
现在就看一下第一位

1440
01:11:55,490 --> 01:11:57,860
我们首先看一下客户端能不能启动起来

1441
01:12:00,980 --> 01:12:02,090
居然报错了

1442
01:12:10,090 --> 01:12:12,160
报啥车无遗漏的还可以看到

1443
01:12:12,430 --> 01:12:13,420
报错的话是不是

1444
01:12:14,590 --> 01:12:17,980
最后启动的不应该是date里面的卡是吗

1445
01:12:18,100 --> 01:12:18,700
什么意思

1446
01:12:20,120 --> 01:12:20,360
没有

1447
01:12:20,360 --> 01:12:21,440
我们打过去之后

1448
01:12:21,620 --> 01:12:24,170
我们不是利用的VIP给我们提供的地位受

1449
01:12:32,410 --> 01:12:34,000
关于大体流程烧

1450
01:12:34,000 --> 01:12:36,160
最后一会儿看到我们整体流程之后

1451
01:12:36,220 --> 01:12:37,000
您就明白了

1452
01:12:37,690 --> 01:12:39,520
可以看到这里是不是我们的危楼的

1453
01:12:39,700 --> 01:12:42,310
他需要另外一个是不需要一个

1454
01:12:42,310 --> 01:12:43,210
这样的什么东西

1455
01:12:43,210 --> 01:12:45,520
To print的depending错

1456
01:12:45,850 --> 01:12:48,100
那说明我们这里还缺少一些依赖

1457
01:12:48,550 --> 01:12:51,010
我们其实就需要安装行如果

1458
01:12:51,800 --> 01:12:52,370
你没有

1459
01:12:52,460 --> 01:12:53,900
就是你第一次遇到这样的问题

1460
01:12:53,990 --> 01:12:54,950
所以说你也不用怕

1461
01:12:55,160 --> 01:12:57,710
你其实在这里你骨骼之类的可以告诉你

1462
01:12:58,810 --> 01:12:59,890
怎么去解决之类的

1463
01:13:00,220 --> 01:13:01,870
基本上你在配的时候缺什么

1464
01:13:01,990 --> 01:13:03,310
你就去安装什么就行了

1465
01:13:03,340 --> 01:13:04,990
这里就是缺少我们这样一个依赖

1466
01:13:04,990 --> 01:13:05,800
你把它安装就行

1467
01:13:06,130 --> 01:13:08,260
就是在解析我们这个V1的时候

1468
01:13:08,530 --> 01:13:09,400
比如说一最新一法

1469
01:13:09,400 --> 01:13:12,070
我们还需要这个艾特恐破裂

1470
01:13:14,400 --> 01:13:19,200
给他安装上缺的话我们就给他安装上就完事儿了

1471
01:13:21,800 --> 01:13:22,160
这里的话

1472
01:13:22,160 --> 01:13:24,860
其实你如果看它的官方文档的话

1473
01:13:24,860 --> 01:13:26,090
其实它都有说明

1474
01:13:27,320 --> 01:13:28,790
所以说我们在

1475
01:13:28,820 --> 01:13:30,890
比如说你启动新项目或者什么之类的

1476
01:13:31,280 --> 01:13:32,600
你可以最好去看下官网

1477
01:13:32,780 --> 01:13:36,560
经常就是每个版本都会进行一些相应的更新

1478
01:13:37,680 --> 01:13:38,190
这么慢

1479
01:13:40,990 --> 01:13:41,500
哎呀

1480
01:13:46,200 --> 01:13:46,860
From

1481
01:13:54,170 --> 01:13:56,030
看一下他的文档

1482
01:14:09,170 --> 01:14:09,560
嗯

1483
01:14:14,460 --> 01:14:15,210
前一

1484
01:14:18,160 --> 01:14:18,790
可以看到

1485
01:14:20,440 --> 01:14:24,250
现在的话我们就还需要单独去配一下这个唯一load

1486
01:14:24,490 --> 01:14:25,690
拉进去配置一下

1487
01:14:27,420 --> 01:14:28,110
我说这是

1488
01:14:29,670 --> 01:14:33,060
迁移射门像VAE2100到V3的话

1489
01:14:33,060 --> 01:14:34,950
你也是需要进行一些其他处理的

1490
01:14:35,280 --> 01:14:36,330
这这也是一样

1491
01:14:37,200 --> 01:14:39,570
那我们这里就需要来单独的处理一下

1492
01:14:42,860 --> 01:14:43,430
然后呢

1493
01:14:45,080 --> 01:14:45,740
这里还没有

1494
01:14:47,780 --> 01:14:48,740
这项配置的话

1495
01:14:48,740 --> 01:14:49,850
报错是很正常的

1496
01:14:49,940 --> 01:14:51,770
如果一气呵成的

1497
01:14:52,040 --> 01:14:53,270
你配置起来不报错

1498
01:14:53,720 --> 01:14:55,670
那种情况基本比较少

1499
01:14:57,540 --> 01:14:58,260
有错遍

1500
01:14:58,260 --> 01:14:59,760
怕有错就解决就行

1501
01:15:01,020 --> 01:15:03,930
延安可令受

1502
01:15:06,870 --> 01:15:07,800
现在没有什么问题了

1503
01:15:07,830 --> 01:15:09,780
但是这里提示我们要启动的话

1504
01:15:09,780 --> 01:15:11,190
因为VIP5中的话

1505
01:15:11,400 --> 01:15:12,990
我们还需要单独安装一下这个DV

1506
01:15:12,990 --> 01:15:13,710
社保呢

1507
01:15:13,710 --> 01:15:15,030
我们就统一安装就可以了

1508
01:15:17,360 --> 01:15:19,580
这样话我们应该就启动起来了

1509
01:15:27,310 --> 01:15:29,500
应该没有应该没有啥问题吧

1510
01:15:32,750 --> 01:15:34,340
现在是在安装这个DVD

1511
01:15:34,400 --> 01:15:35,270
所以说稍微慢点儿

1512
01:15:36,630 --> 01:15:37,350
安装完了

1513
01:15:45,860 --> 01:15:46,250
嗯

1514
01:15:55,080 --> 01:15:55,740
靠在那

1515
01:15:55,740 --> 01:15:57,510
被子已经把他移除了

1516
01:16:05,820 --> 01:16:07,080
现在不是这样写的吗

1517
01:16:13,180 --> 01:16:13,720
来看一下

1518
01:16:19,530 --> 01:16:20,040
好吧

1519
01:16:26,220 --> 01:16:27,780
Candle base

1520
01:16:33,040 --> 01:16:35,740
HOPS的威慑孩子电影

1521
01:16:42,760 --> 01:16:44,080
DV舍瓦

1522
01:16:45,880 --> 01:16:46,720
没有问题

1523
01:16:48,230 --> 01:16:48,650
没有

1524
01:16:51,040 --> 01:16:51,730
我看一下吧

1525
01:16:51,730 --> 01:16:53,980
大家先休息一下休息

1526
01:16:55,490 --> 01:16:56,600
俺先休息个

1527
01:16:58,830 --> 01:16:59,670
休息五分钟吧

1528
01:16:59,670 --> 01:17:01,830
我们09:15继续看一下这个

1529
01:17:03,420 --> 01:17:04,170
又有变化

1530
01:17:08,250 --> 01:17:08,580
嗯

1531
01:17:12,560 --> 01:17:13,610
就是真正的军师

1532
01:17:13,610 --> 01:17:17,240
一同欢度能取人身赔偿案件

1533
01:17:17,300 --> 01:17:18,200
意甲一阵

1534
01:17:18,470 --> 01:17:23,540
我曾经历过内心的真诚奈何我就草四处试片满仓开山破的罪人

1535
01:17:23,540 --> 01:17:26,450
可旁人依偎在冒犯无可无

1536
01:17:26,450 --> 01:17:32,540
天下人不愿天下人负一生去承诺中沉默

1537
01:17:32,540 --> 01:17:35,000
天下分久必合

1538
01:17:35,300 --> 01:17:43,580
为你我有如何谁的错留给行人挺多经过

1539
01:17:43,880 --> 01:17:48,230
不愿去顺从度遵循木有的原则为目的

1540
01:17:48,230 --> 01:17:51,170
不择手段不罢休的气魄

1541
01:17:51,230 --> 01:17:58,010
这天下何人沉溺和人称敢于我点燃乱世蓝天疯狂

1542
01:18:02,300 --> 01:18:02,960
键的前程

1543
01:18:03,710 --> 01:18:07,580
让他陪你去见证风雨前面我该死的传承

1544
01:18:07,580 --> 01:18:08,210
手来新

1545
01:18:09,410 --> 01:18:10,280
伤有多深

1546
01:18:10,280 --> 01:18:11,180
爱有多疼

1547
01:18:11,180 --> 01:18:11,690
我在乎

1548
01:18:11,690 --> 01:18:12,140
可是

1549
01:18:18,680 --> 01:18:19,550
只能被抛弃

1550
01:18:20,300 --> 01:18:21,440
我又爬上了高地

1551
01:18:21,440 --> 01:18:23,300
命中在台上不是道理

1552
01:18:24,200 --> 01:18:25,580
狂傲的娇气不娇气

1553
01:18:25,580 --> 01:18:26,960
回家失之交臂

1554
01:18:27,680 --> 01:18:28,760
摩托猫咪的奥秘

1555
01:18:28,760 --> 01:18:29,810
小人告密

1556
01:18:45,140 --> 01:18:48,290
失去承诺中沉默

1557
01:18:48,410 --> 01:18:50,690
天下分久必合

1558
01:18:50,990 --> 01:18:54,320
为你我把梦又如何

1559
01:18:54,560 --> 01:19:00,590
谁能做留给袭人顶多落不愿去顺丰

1560
01:19:00,590 --> 01:19:01,130
懦弱

1561
01:19:01,130 --> 01:19:03,920
遵循固有的原则为目的

1562
01:19:03,920 --> 01:19:06,890
不择手段不罢休的七魄

1563
01:19:06,920 --> 01:19:08,450
这天下何人沉溺

1564
01:19:08,450 --> 01:19:09,410
何人称王

1565
01:19:09,410 --> 01:19:12,350
敢于我点燃乱世难言

1566
01:19:15,150 --> 01:19:18,720
用一生去承诺中沉默

1567
01:19:18,900 --> 01:19:21,090
天下分久必合

1568
01:19:21,450 --> 01:19:24,690
为你我如何

1569
01:19:25,050 --> 01:19:26,070
谁的错

1570
01:19:26,520 --> 01:19:28,020
留给诗人鼎博

1571
01:19:29,130 --> 01:19:29,790
洛

1572
01:20:21,030 --> 01:20:22,170
踏过8000里

1573
01:20:22,650 --> 01:20:24,150
聚集着北方的旷野

1574
01:20:24,150 --> 01:20:27,030
跟他近距离尘土开始奔我深陆

1575
01:20:27,030 --> 01:20:27,540
阻挡我

1576
01:20:27,540 --> 01:20:31,170
八点一刻就出一我洗脸期待一行白鹭真凶残

1577
01:20:31,500 --> 01:20:33,720
还知道我在成熟的要修复

1578
01:20:33,720 --> 01:20:35,610
就是正式的军师一统天下

1579
01:20:35,610 --> 01:20:37,140
官渡党政负责人去

1580
01:20:37,140 --> 01:20:39,480
人生理想案件意甲一生

1581
01:20:39,720 --> 01:20:41,280
我曾经历过内心的转生

1582
01:20:41,280 --> 01:20:43,140
奈何我就草色就是偏蓝

1583
01:20:43,140 --> 01:20:44,880
沧海沙漠的罪人

1584
01:20:44,880 --> 01:20:46,350
可怕人依偎在冒犯

1585
01:20:47,730 --> 01:20:48,750
天下人

1586
01:20:48,750 --> 01:20:51,390
不愿天下人负我一生去

1587
01:20:51,390 --> 01:20:53,910
陈国中沉默

1588
01:20:54,000 --> 01:20:56,280
天下分久必合

1589
01:20:56,550 --> 01:20:59,220
为你我做马路又如何

1590
01:21:00,150 --> 01:21:04,890
谁的错留给行人挺多过

1591
01:21:05,160 --> 01:21:06,720
无缘是顺从懦弱

1592
01:21:06,720 --> 01:21:09,510
遵循固有的原则为目的

1593
01:21:09,510 --> 01:21:11,790
不择手段不罢休的气势

1594
01:21:11,940 --> 01:21:13,110
逼迫这天下

1595
01:21:13,140 --> 01:21:14,040
何人沉溺

1596
01:21:14,040 --> 01:21:19,320
何人唱王与我点燃乱世冷面烽火

1597
01:21:25,260 --> 01:21:29,520
今年去见证风雨前面我该死的传承修来修

1598
01:21:30,270 --> 01:21:32,490
曾经伤有多深有多疼

1599
01:21:32,490 --> 01:21:37,200
我在乎可舍如今有多伟大和阴影都深不可测

1600
01:21:37,860 --> 01:21:38,730
彩排的人

1601
01:21:39,840 --> 01:21:40,860
就只能被抛弃

1602
01:21:41,580 --> 01:21:42,720
我又爬上了高地

1603
01:21:42,720 --> 01:21:43,890
民众在乎你抬手

1604
01:21:43,890 --> 01:21:44,580
都是道理

1605
01:21:45,480 --> 01:21:46,320
狂傲的交期

1606
01:21:46,320 --> 01:21:48,270
我想起回家失之交臂

1607
01:21:48,960 --> 01:21:50,010
摩托猫咪的安慰

1608
01:21:50,010 --> 01:21:51,930
小人告密状的结节

1609
01:22:06,390 --> 01:22:09,570
失去承诺中承诺

1610
01:22:09,720 --> 01:22:11,970
天下分久必合

1611
01:22:12,270 --> 01:22:13,320
为你我

1612
01:22:14,610 --> 01:22:17,130
如何谁的错

1613
01:22:17,370 --> 01:22:25,290
留给新人博博园去生存懦弱遵循的原则为目的

1614
01:22:25,290 --> 01:22:28,200
不择手段不罢休的气魄

1615
01:22:28,380 --> 01:22:30,390
天下何人沉溺和壬辰

1616
01:22:31,920 --> 01:22:33,630
年乱世狼烟

1617
01:22:36,510 --> 01:22:40,020
用一生去承诺沉默

1618
01:22:40,830 --> 01:22:42,300
手臂和

1619
01:22:44,610 --> 01:22:48,690
如何谁的错这位诗人

1620
01:22:54,660 --> 01:22:55,020
好啦

1621
01:22:55,080 --> 01:23:02,790
我们继续刚刚的话是之前还记得之前WIFI5版本的话还是靠着被子

1622
01:23:02,790 --> 01:23:05,730
那现在它已经变成static啦

1623
01:23:06,420 --> 01:23:09,360
所以说你可以看到IPS不也是有变化的

1624
01:23:09,360 --> 01:23:11,940
所以说有时候报错之后最好去查一下文档

1625
01:23:12,330 --> 01:23:14,130
像其实出问题之后

1626
01:23:14,130 --> 01:23:15,990
第一步先查官方文档是最好的

1627
01:23:15,990 --> 01:23:17,280
你如果去搜些文章的话

1628
01:23:17,280 --> 01:23:19,350
有可能文章更新没有那么及时

1629
01:23:19,350 --> 01:23:21,420
或者是也是一些别人写的博客

1630
01:23:21,750 --> 01:23:22,530
所以说

1631
01:23:22,530 --> 01:23:25,920
这和你看原文档解决问题还是不一样的

1632
01:23:28,440 --> 01:23:30,060
能去看原文档的还是去看

1633
01:23:30,060 --> 01:23:32,460
可能有的同学感觉自己说

1634
01:23:32,460 --> 01:23:34,200
英文阅读能力是比较差一些

1635
01:23:34,200 --> 01:23:35,160
像一些新的东西的话

1636
01:23:35,160 --> 01:23:36,630
可能好多都是英文的

1637
01:23:37,820 --> 01:23:39,410
但是我们不是都有翻译吗

1638
01:23:39,410 --> 01:23:42,050
所以说它有时候翻译软件基本也能

1639
01:23:43,810 --> 01:23:44,710
大体能看懂

1640
01:23:44,710 --> 01:23:45,190
不好意思

1641
01:23:45,220 --> 01:23:46,900
其实我们主要看的是代码部分

1642
01:23:46,960 --> 01:23:47,910
这里可以啥也不看

1643
01:23:47,910 --> 01:23:50,170
一看是一个static是不是立马就知道了

1644
01:23:50,260 --> 01:23:52,120
这换成static不就完事了

1645
01:23:52,540 --> 01:23:54,760
这样的话我们客户端就这样启动起来了

1646
01:23:55,060 --> 01:23:58,060
完了之后我们可以看到现在我们访问这个页面

1647
01:23:58,910 --> 01:24:01,070
什么首页就加载出来了

1648
01:24:01,160 --> 01:24:03,170
这个首页是不是就是我们这里写的这个

1649
01:24:04,120 --> 01:24:07,900
APP点微是不是这个首页给他完全是没有什么问题的

1650
01:24:11,960 --> 01:24:13,250
然后扣单的话

1651
01:24:13,250 --> 01:24:15,500
我们是不是要去路由

1652
01:24:15,500 --> 01:24:16,760
那现在我们路由是没有

1653
01:24:16,760 --> 01:24:18,020
我们学校把路由加上

1654
01:24:18,230 --> 01:24:20,480
然后把我们的VS给加上

1655
01:24:20,480 --> 01:24:22,070
因为我们要实现服务端

1656
01:24:23,120 --> 01:24:24,110
那那个数据请求的话

1657
01:24:24,110 --> 01:24:30,470
我们是还需要用到VS来实现服务端和客户端这个群这个数据状态的一个统一的

1658
01:24:30,950 --> 01:24:31,850
所以我们就需要

1659
01:24:32,240 --> 01:24:33,170
所以说我掩饰

1660
01:24:33,880 --> 01:24:35,020
我们还是要需要用一下

1661
01:24:35,050 --> 01:24:35,650
用了这个

1662
01:24:36,860 --> 01:24:37,910
状态管理的库

1663
01:24:38,240 --> 01:24:39,650
当然这个不一定会用VS

1664
01:24:39,650 --> 01:24:42,410
用什么其他的一些状态管理库都是可以的

1665
01:24:43,580 --> 01:24:44,600
这个并不限制

1666
01:24:46,340 --> 01:24:49,640
那这里我们继续把我们的路由给配置上

1667
01:24:51,390 --> 01:24:52,020
这不路由的话

1668
01:24:52,020 --> 01:24:53,490
我们刚刚是不是已经安装完了

1669
01:24:54,060 --> 01:24:55,860
这里我们就来写新建

1670
01:24:56,910 --> 01:24:58,290
新代理配置我们的路由

1671
01:24:58,650 --> 01:24:59,160
路由的话

1672
01:24:59,160 --> 01:25:02,550
在这些路由中也是同样给我们提供了

1673
01:25:02,730 --> 01:25:03,120
这种

1674
01:25:05,320 --> 01:25:07,420
类似于户口这种写法

1675
01:25:09,240 --> 01:25:11,550
之前路由无论是react

1676
01:25:11,550 --> 01:25:12,180
不是路由

1677
01:25:12,180 --> 01:25:12,870
LV

1678
01:25:12,870 --> 01:25:14,370
是不是都提供了这种互惠的写法

1679
01:25:14,430 --> 01:25:16,290
整起来就更灵活了

1680
01:25:16,440 --> 01:25:17,070
他们提供了

1681
01:25:20,890 --> 01:25:23,890
然后同样给我们提供了在客户端使用的

1682
01:25:24,010 --> 01:25:25,450
还有在我们的服务端使用的

1683
01:25:25,600 --> 01:25:29,470
客户端使用的是不是在我们web中给我们提供的是web history

1684
01:25:30,220 --> 01:25:31,090
然后在服务端呢

1685
01:25:31,240 --> 01:25:36,040
给我们提供的是科瑞特memory history一个是基于内存的

1686
01:25:36,310 --> 01:25:36,940
另外一个呢

1687
01:25:38,360 --> 01:25:38,990
他就是

1688
01:25:40,000 --> 01:25:41,140
Web的话

1689
01:25:42,410 --> 01:25:43,190
这个就正常

1690
01:25:43,430 --> 01:25:46,040
我们使用的就是在浏览器中使用的是一样的

1691
01:25:51,440 --> 01:25:53,270
像黑特们的web

1692
01:25:53,270 --> 01:25:56,180
黑色模式化就是正常我们在地栏

1693
01:25:56,180 --> 01:25:57,620
每次我们地址变化

1694
01:25:57,860 --> 01:26:01,730
我们都能在地栏中直观的观察到memory呢

1695
01:26:02,150 --> 01:26:03,410
它就是XG

1696
01:26:03,410 --> 01:26:04,190
内存就是

1697
01:26:05,250 --> 01:26:08,070
你变化你是看不到地址栏中的变化的

1698
01:26:08,160 --> 01:26:09,570
就是对他们两个的区别

1699
01:26:09,570 --> 01:26:10,200
其次的话

1700
01:26:10,320 --> 01:26:13,230
慢慢黑色是跟我们在服务端进行使用的

1701
01:26:13,230 --> 01:26:14,070
外部可以的呢

1702
01:26:14,160 --> 01:26:16,080
那显然是不是在我们客户端使用的

1703
01:26:16,200 --> 01:26:17,490
你如果想用汉字模式的话

1704
01:26:17,670 --> 01:26:18,390
它提供了help

1705
01:26:18,390 --> 01:26:22,200
是不是都这样进行吃饭的方式

1706
01:26:24,520 --> 01:26:25,780
那我们就来写一下

1707
01:26:27,980 --> 01:26:28,490
注意啊

1708
01:26:28,490 --> 01:26:30,770
这里你要在使用咨询的时候

1709
01:26:30,770 --> 01:26:31,760
他这里其实

1710
01:26:33,940 --> 01:26:34,660
VOE

1711
01:26:39,240 --> 01:26:40,110
直接从这进

1712
01:26:46,920 --> 01:26:48,450
他是一个迁移指南的

1713
01:26:48,750 --> 01:26:49,530
有的地方的话

1714
01:26:49,530 --> 01:26:51,840
有好多地方还是需要我们去注意一下

1715
01:26:53,470 --> 01:26:55,690
你看之前是否为三列插耳线的话

1716
01:26:55,840 --> 01:26:57,280
是不是无疑似裂差了

1717
01:26:59,080 --> 01:27:01,480
所以说最后边儿一个迁移

1718
01:27:02,180 --> 01:27:03,320
你看这里有好多变化

1719
01:27:03,320 --> 01:27:05,390
之前是不是我们使用这牛肉的

1720
01:27:05,390 --> 01:27:09,560
而现在是变成了可root可以看到这里是不是都有说明

1721
01:27:10,340 --> 01:27:11,120
不但是一个类

1722
01:27:11,150 --> 01:27:12,080
还是一组函数

1723
01:27:14,120 --> 01:27:16,220
另外就是新的黑腿配置取得了

1724
01:27:16,220 --> 01:27:24,680
之前的矛盾是黑腿要把我们这里我们用a web history或者是什么memory history是我们需要这样的进行一个配置

1725
01:27:24,920 --> 01:27:26,270
这个之前变化还是挺大的

1726
01:27:26,270 --> 01:27:27,290
所以说这里要注意一下

1727
01:27:27,650 --> 01:27:28,970
像之前这个配置

1728
01:27:28,970 --> 01:27:30,140
配置现在也没有了

1729
01:27:32,560 --> 01:27:34,120
还有像其他的一些等等

1730
01:27:34,120 --> 01:27:36,340
所以说这个都是我们需要注意的

1731
01:27:37,180 --> 01:27:38,440
还有我们坐在二中的话

1732
01:27:38,440 --> 01:27:41,140
里边有好多一些方法也是需要我们去处理

1733
01:27:41,140 --> 01:27:42,520
比如说这里的一些等待

1734
01:27:43,060 --> 01:27:45,850
来等待我们的一些路由处理完成之类的

1735
01:27:45,850 --> 01:27:46,780
像之前的话

1736
01:27:46,900 --> 01:27:47,680
它是on radio

1737
01:27:47,740 --> 01:27:49,150
而现在变成了ready

1738
01:27:50,550 --> 01:27:52,290
还有什么还有

1739
01:27:53,650 --> 01:27:56,350
一些匹配的时候我们需要用的东西

1740
01:27:56,680 --> 01:27:59,320
到这里可以看到破坏性的变化可以看到

1741
01:27:59,960 --> 01:28:00,740
破坏等变化

1742
01:28:01,710 --> 01:28:03,570
这个是影响还是非常大的

1743
01:28:03,570 --> 01:28:08,580
所以说你在用一些不只是微

1744
01:28:08,640 --> 01:28:09,810
不只限于微软的

1745
01:28:09,810 --> 01:28:12,390
还有是其他的时候想看一下他的迁移指南

1746
01:28:13,000 --> 01:28:15,700
具体做了哪些一些变化更新之类的

1747
01:28:16,730 --> 01:28:18,380
所以说就需要尤其的注意

1748
01:28:20,950 --> 01:28:22,240
浏览器的黑痣

1749
01:28:22,840 --> 01:28:23,590
然后

1750
01:28:24,360 --> 01:28:26,760
我们就来先把我们这个路由解决掉

1751
01:28:28,200 --> 01:28:30,210
那首先把我们的组件引入进来

1752
01:28:31,160 --> 01:28:31,820
就是页面

1753
01:28:32,700 --> 01:28:33,690
页面也是组件

1754
01:28:34,380 --> 01:28:36,420
只是叶面积比较大而已

1755
01:28:37,080 --> 01:28:39,300
wills下班的home

1756
01:28:39,450 --> 01:28:40,050
然后是

1757
01:28:41,790 --> 01:28:43,650
然后是about

1758
01:28:47,590 --> 01:28:48,610
就是下边的

1759
01:28:50,950 --> 01:28:51,820
两个之间有了

1760
01:28:51,820 --> 01:28:56,620
然后这里同样我们来判断一下是不是在服务端执行的

1761
01:28:56,770 --> 01:28:58,270
还是在客户端执行的

1762
01:28:58,810 --> 01:29:00,280
这不还是老方式

1763
01:29:02,930 --> 01:29:05,150
那他是不是等于unDeFined

1764
01:29:08,780 --> 01:29:09,500
写错了吗

1765
01:29:13,710 --> 01:29:17,400
还好这里有一个安装了一个单词提示器还是

1766
01:29:18,540 --> 01:29:18,930
配置

1767
01:29:22,370 --> 01:29:23,930
这个就是刚刚我们看到的黑色

1768
01:29:23,930 --> 01:29:25,070
我们要给他配置什么

1769
01:29:25,550 --> 01:29:26,420
首先判断

1770
01:29:29,170 --> 01:29:31,000
如果是服务端的呢

1771
01:29:32,830 --> 01:29:34,150
那这个黑腿就是我们的

1772
01:29:35,290 --> 01:29:38,710
Create a memory

1773
01:29:38,710 --> 01:29:40,060
如果是扣单的呢

1774
01:29:49,280 --> 01:29:51,680
一般他会自动找你文件下面的index

1775
01:29:56,570 --> 01:29:56,870
对呀

1776
01:29:56,870 --> 01:29:57,800
服务端没有温度

1777
01:29:57,800 --> 01:29:58,280
没有温度

1778
01:29:58,280 --> 01:29:59,210
所以是unDeFined

1779
01:30:02,450 --> 01:30:03,680
服务站怎么会有温度呢

1780
01:30:03,680 --> 01:30:04,220
温度是

1781
01:30:05,520 --> 01:30:07,140
他不是水浏览器

1782
01:30:07,840 --> 01:30:08,440
还有的吗

1783
01:30:09,320 --> 01:30:10,010
可以到吗

1784
01:30:14,240 --> 01:30:15,620
然后写一下我们的路游

1785
01:30:15,620 --> 01:30:16,760
我们的路由的话

1786
01:30:17,180 --> 01:30:18,950
路由首先是跟

1787
01:30:20,480 --> 01:30:20,690
嗯

1788
01:30:22,770 --> 01:30:23,310
看错了

1789
01:30:28,020 --> 01:30:28,650
然后后面

1790
01:30:28,650 --> 01:30:29,940
然后component

1791
01:30:31,740 --> 01:30:33,630
物质都是非常常规的

1792
01:30:34,950 --> 01:30:36,810
还有一个是我们的巴特勒

1793
01:30:40,660 --> 01:30:41,290
About

1794
01:30:49,440 --> 01:30:50,190
陆游是完成了

1795
01:30:50,190 --> 01:30:51,870
然后最终将他挡住就行了

1796
01:30:52,170 --> 01:30:55,560
这里同样要注意状态单列的问题

1797
01:30:59,550 --> 01:31:01,770
所以最终我们导出来是一个函数

1798
01:31:10,120 --> 01:31:11,530
我把它配上一个是黑色

1799
01:31:11,860 --> 01:31:12,340
一个是

1800
01:31:13,570 --> 01:31:16,150
这里也是利用S6是不一个新的语法

1801
01:31:16,180 --> 01:31:17,590
像之前的话没有的话

1802
01:31:17,590 --> 01:31:20,290
我们是不是还需要推同名的话

1803
01:31:20,290 --> 01:31:21,400
就直接简写就行了

1804
01:31:25,670 --> 01:31:26,030
这样

1805
01:31:27,350 --> 01:31:29,450
我们的路由就处理完成了

1806
01:31:29,660 --> 01:31:30,350
路由器完成

1807
01:31:30,350 --> 01:31:31,100
你要渲染到哪

1808
01:31:31,100 --> 01:31:32,300
是不是还得写占位符

1809
01:31:32,570 --> 01:31:33,350
占位符写到哪

1810
01:31:33,350 --> 01:31:35,000
哪就写到我们组建里边

1811
01:31:35,450 --> 01:31:37,880
那这里我们就是不是就写上我们的战略服就行了

1812
01:31:40,200 --> 01:31:41,460
叫如此

1813
01:31:42,130 --> 01:31:42,430
没有

1814
01:31:44,550 --> 01:31:45,030
就是它

1815
01:31:46,380 --> 01:31:47,160
可以直接写一个

1816
01:31:48,180 --> 01:31:48,960
李白的话

1817
01:31:48,960 --> 01:31:49,770
并没有什么内容

1818
01:31:53,850 --> 01:31:54,810
上语文课

1819
01:31:56,580 --> 01:31:57,810
然后我们加个跳转

1820
01:31:58,550 --> 01:32:00,050
进行我们这两个路由切换

1821
01:32:00,050 --> 01:32:04,460
是不是一个是我们的根路由跳转到我的首页

1822
01:32:07,160 --> 01:32:08,960
还有一个是跳转到我们的

1823
01:32:12,600 --> 01:32:13,260
跳转到

1824
01:32:14,490 --> 01:32:15,030
about

1825
01:32:17,390 --> 01:32:18,140
这叫混吧

1826
01:32:19,580 --> 01:32:20,990
这样我们的路由是不是齐全了

1827
01:32:20,990 --> 01:32:21,800
然后来看一下

1828
01:32:28,860 --> 01:32:29,610
吴特

1829
01:32:29,610 --> 01:32:31,440
Link跳转的

1830
01:32:34,150 --> 01:32:36,280
没有写出来

1831
01:32:39,890 --> 01:32:40,760
还忘了一件事

1832
01:32:41,120 --> 01:32:44,210
我们向你在危中使用了什么东西是不是

1833
01:32:44,480 --> 01:32:45,680
你得告诉我一声

1834
01:32:45,680 --> 01:32:48,350
你现在唯一并不知道你使用了什么东西

1835
01:32:49,240 --> 01:32:51,070
那是不是还需要来处理一下

1836
01:32:51,100 --> 01:32:52,810
在这里处理一下

1837
01:32:54,650 --> 01:32:56,720
把我们的root引入进来

1838
01:32:58,970 --> 01:32:59,210
对

1839
01:32:59,420 --> 01:33:00,380
还需要幼稚一下

1840
01:33:01,250 --> 01:33:03,530
你不能悄无声息的就使用了是吧

1841
01:33:06,800 --> 01:33:08,360
我们打出来的是一个函数

1842
01:33:20,740 --> 01:33:22,240
然后就在我们这个函数里

1843
01:33:22,390 --> 01:33:25,120
可以每次都可以重新生成一个

1844
01:33:26,560 --> 01:33:27,700
可如此如此

1845
01:33:32,140 --> 01:33:33,760
然后APP

1846
01:33:36,430 --> 01:33:37,960
又如此

1847
01:33:39,520 --> 01:33:40,420
这样才可以

1848
01:33:41,740 --> 01:33:42,250
然后呢

1849
01:33:43,510 --> 01:33:45,340
这个root我们还需要给他倒出去

1850
01:33:47,170 --> 01:33:47,770
为什么呢

1851
01:33:47,890 --> 01:33:49,570
因为后边我们会用得着

1852
01:33:50,480 --> 01:33:51,050
但是啊

1853
01:33:51,050 --> 01:33:52,040
这里报错啦

1854
01:33:52,190 --> 01:33:53,270
看看爆了啥错

1855
01:34:01,000 --> 01:34:01,450
嗯

1856
01:34:04,920 --> 01:34:06,300
Can notary

1857
01:34:07,380 --> 01:34:07,950
不行啊

1858
01:34:09,150 --> 01:34:10,950
这里你带个谁还没找

1859
01:34:12,830 --> 01:34:13,700
什么东西

1860
01:34:13,700 --> 01:34:15,530
还得加上五一

1861
01:34:15,530 --> 01:34:16,190
你可以省了

1862
01:34:16,190 --> 01:34:17,180
因为是省不了

1863
01:34:20,510 --> 01:34:21,620
不知道扩展有没有

1864
01:34:24,620 --> 01:34:26,090
我这里没有配置那个

1865
01:34:27,470 --> 01:34:28,490
文件名扩展

1866
01:34:29,370 --> 01:34:30,390
可以看到这样才可以

1867
01:34:30,630 --> 01:34:32,160
你如果配置文件没扩展

1868
01:34:32,160 --> 01:34:32,790
你可以省略的

1869
01:34:32,790 --> 01:34:33,810
我觉得应该没有配置

1870
01:34:34,020 --> 01:34:40,170
它默认只有GSGS还有什么几个默认只支持那几个你如果需要其他的

1871
01:34:40,440 --> 01:34:44,550
还需要单独的配置点V或者点.插件啥的

1872
01:34:44,550 --> 01:34:47,610
你需要单独配置taxi taxi

1873
01:34:48,290 --> 01:34:48,560
天使

1874
01:34:48,560 --> 01:34:49,070
我是什么

1875
01:34:50,740 --> 01:34:52,330
在WiFi里加上配置就行

1876
01:34:52,330 --> 01:34:53,710
可以看到这样是不是可以啦

1877
01:34:53,710 --> 01:34:54,520
跳这个bug的

1878
01:34:54,550 --> 01:34:55,900
跳转首页

1879
01:34:55,900 --> 01:34:57,730
路由没有什么问题了

1880
01:34:59,600 --> 01:35:02,240
买还生哥生哥我演一下

1881
01:35:03,680 --> 01:35:05,990
筷子也把VS来处理一下

1882
01:35:10,280 --> 01:35:11,660
我们一般的话

1883
01:35:11,660 --> 01:35:14,060
我们是不是会分模块下

1884
01:35:14,060 --> 01:35:15,140
这样会更清晰

1885
01:35:15,140 --> 01:35:17,660
就是我们这里简单的处理一下摸底

1886
01:35:18,520 --> 01:35:20,590
然后下边儿我们新建一个

1887
01:35:27,840 --> 01:35:28,050
嗯

1888
01:35:33,340 --> 01:35:35,860
然后创建我们的直

1889
01:35:36,560 --> 01:35:39,290
比如我们这里就简单的写一个内幕

1890
01:35:39,290 --> 01:35:40,760
还有一个address

1891
01:35:42,780 --> 01:35:44,220
主要是为了来演示一下

1892
01:35:46,950 --> 01:35:50,040
这一款是我们要需要从我们的服务端请求回来的

1893
01:35:52,680 --> 01:35:53,610
然后油热

1894
01:35:56,720 --> 01:35:59,120
是不是这里可以看到我们也是导出的是一个函数

1895
01:36:02,660 --> 01:36:04,160
比如说我们就写个name

1896
01:36:04,970 --> 01:36:05,390
然后

1897
01:36:11,140 --> 01:36:14,350
然后一般的话是我们还有像action

1898
01:36:17,780 --> 01:36:18,740
X线一样

1899
01:36:18,740 --> 01:36:19,850
一些像一些副作用的话

1900
01:36:19,850 --> 01:36:21,170
我们是不是就可以放到这里

1901
01:36:24,510 --> 01:36:26,340
比如说我们这里一个set data

1902
01:36:29,370 --> 01:36:30,240
然后改变函的话

1903
01:36:30,240 --> 01:36:31,500
是不是修改识别值

1904
01:36:31,500 --> 01:36:33,180
是不是只能在我们的系统中修改

1905
01:36:33,270 --> 01:36:35,940
要遵守规还是是不是它的一个规则

1906
01:36:44,740 --> 01:36:46,240
这里我们就简单的模拟

1907
01:36:47,020 --> 01:36:48,010
比如说

1908
01:36:48,190 --> 01:36:48,880
如果请的话

1909
01:36:48,880 --> 01:36:51,220
我这里就出现一个新的机

1910
01:36:56,630 --> 01:36:57,740
然后我再死

1911
01:36:57,740 --> 01:36:58,490
还是北京吧

1912
01:37:01,860 --> 01:37:02,220
最终

1913
01:37:06,000 --> 01:37:06,300
的话

1914
01:37:06,300 --> 01:37:10,920
我们在马腾中还需要建一个色的去修改我们将实际的值

1915
01:37:11,460 --> 01:37:13,140
这不是note的默认行为吗

1916
01:37:14,590 --> 01:37:15,340
是说哪一个

1917
01:37:15,370 --> 01:37:16,300
是说这个幼稚吗

1918
01:37:17,940 --> 01:37:18,360
又

1919
01:37:22,960 --> 01:37:23,380
X

1920
01:37:27,650 --> 01:37:29,270
他默认是找人带DTS

1921
01:37:30,240 --> 01:37:31,890
是可以找你的音带点价

1922
01:37:31,890 --> 01:37:34,350
但是我们这里是这里是因带点we

1923
01:37:34,890 --> 01:37:37,560
它不识别这个点V文件默认是找index

1924
01:37:43,920 --> 01:37:45,390
二级的是可以省略的

1925
01:37:45,390 --> 01:37:46,320
但是你可以看到

1926
01:37:47,580 --> 01:37:48,120
会报错

1927
01:37:49,190 --> 01:37:50,930
可以看到是不是Alice这个

1928
01:37:52,060 --> 01:37:52,870
一些快捷配置

1929
01:37:52,870 --> 01:37:55,300
你没有配置是没有这个扩展

1930
01:37:55,300 --> 01:37:56,110
No actions

1931
01:37:56,380 --> 01:37:57,880
你如果是里边写JS的话

1932
01:37:58,030 --> 01:38:00,130
那你完全是可以省略这个没有什么问题的

1933
01:38:01,110 --> 01:38:02,040
你比如说你看到这里

1934
01:38:02,040 --> 01:38:04,170
这个root是不就我就没有写

1935
01:38:04,170 --> 01:38:05,940
因代理S是完全可以

1936
01:38:06,330 --> 01:38:07,500
因为是扩展名的问题

1937
01:38:08,010 --> 01:38:09,390
它默认只支持部分的

1938
01:38:13,060 --> 01:38:13,510
队长

1939
01:38:14,530 --> 01:38:14,740
是吧

1940
01:38:14,740 --> 01:38:15,100
Action

1941
01:38:15,100 --> 01:38:17,170
我们就这样写完了后面的事

1942
01:38:17,230 --> 01:38:18,130
披露的提交

1943
01:38:18,130 --> 01:38:20,560
我们比如说最简单的模拟了一下

1944
01:38:20,920 --> 01:38:22,780
比如说你从接口请求回来之类的

1945
01:38:23,360 --> 01:38:24,500
然后一般我们获取的话

1946
01:38:24,500 --> 01:38:27,290
是不是有一个给顺便给大家

1947
01:38:28,310 --> 01:38:28,940
复习一下吧

1948
01:38:30,780 --> 01:38:33,870
该的话同样的都是需要避免状态单列的

1949
01:38:33,870 --> 01:38:36,750
都是导出的是一个函数才可以

1950
01:38:40,010 --> 01:38:41,330
Get

1951
01:38:52,350 --> 01:38:53,910
然后这个字就拿到我们的

1952
01:38:58,060 --> 01:39:00,310
User info的

1953
01:39:04,300 --> 01:39:06,070
这是不就拿到我们的数据了

1954
01:39:07,480 --> 01:39:07,690
吧

1955
01:39:07,690 --> 01:39:09,160
然后最后剩一个马不诚实

1956
01:39:14,270 --> 01:39:14,840
毛体

1957
01:39:20,860 --> 01:39:21,580
The fault

1958
01:39:21,580 --> 01:39:23,380
然后是set data

1959
01:39:25,270 --> 01:39:27,220
是不改变我们的state的值

1960
01:39:27,820 --> 01:39:29,920
只只能只能在这里进行改变

1961
01:39:29,920 --> 01:39:32,140
你在其他地方是不允许的

1962
01:39:32,380 --> 01:39:33,100
犹如

1963
01:39:34,840 --> 01:39:36,100
等于我们的

1964
01:39:38,110 --> 01:39:38,920
这样简单的

1965
01:39:38,920 --> 01:39:40,000
这个我们就完成了

1966
01:39:40,000 --> 01:39:42,010
然后这里我们给它一个

1967
01:39:42,580 --> 01:39:44,560
您带着JS统一的一个

1968
01:39:45,000 --> 01:39:45,300
出口

1969
01:39:46,410 --> 01:39:48,000
然后把我们的都倒过来

1970
01:39:48,060 --> 01:39:52,770
一个是我们的事不定义的单独待末下边的这个模块的star

1971
01:39:54,330 --> 01:39:56,520
然后还有我们的什么actions

1972
01:39:59,760 --> 01:40:00,210
X

1973
01:40:02,900 --> 01:40:04,610
还有我们的gates

1974
01:40:11,590 --> 01:40:13,330
还有我们的马提斯

1975
01:40:17,740 --> 01:40:18,220
键就可以了

1976
01:40:18,220 --> 01:40:19,150
然后统一

1977
01:40:21,970 --> 01:40:22,540
这一样

1978
01:40:22,540 --> 01:40:24,520
也是地面状态单列的方式

1979
01:40:25,570 --> 01:40:29,500
因为你这里是不是最终他返回来的也是一个对象拿着呢

1980
01:40:35,890 --> 01:40:37,450
Name is pace

1981
01:40:44,730 --> 01:40:46,710
然后state我们给到他这里

1982
01:40:46,710 --> 01:40:48,240
是不是倒出来是一个函数

1983
01:40:48,660 --> 01:40:49,260
这样就行了

1984
01:40:49,350 --> 01:40:50,220
每次蒸一下

1985
01:40:50,700 --> 01:40:51,210
然后

1986
01:40:52,240 --> 01:40:53,860
其他的就都写过来了

1987
01:40:55,390 --> 01:40:56,170
Actions

1988
01:41:03,760 --> 01:41:05,800
我们还少一个汇总的

1989
01:41:10,390 --> 01:41:10,690
在这

1990
01:41:15,340 --> 01:41:15,520
是

1991
01:41:15,520 --> 01:41:18,580
我把它首先是道

1992
01:41:18,820 --> 01:41:20,890
也给我们提供了这个可瑞

1993
01:41:27,670 --> 01:41:28,270
Starch

1994
01:41:33,790 --> 01:41:36,430
然后把我们这个单独带模块下面呢

1995
01:41:36,430 --> 01:41:37,450
我们把它引过来

1996
01:41:44,930 --> 01:41:46,760
带毛毛的是他是一个函数

1997
01:41:46,760 --> 01:41:48,140
然后最终

1998
01:41:49,310 --> 01:41:51,590
我们这个VS就处理完了

1999
01:41:55,380 --> 01:41:56,010
科瑞特斯

2000
01:41:56,010 --> 01:41:56,640
到现在的话

2001
01:41:56,640 --> 01:41:59,160
我们就直接订这个埃克斯就可以了

2002
01:42:04,230 --> 01:42:05,610
可以让这个模块

2003
01:42:09,640 --> 01:42:10,540
然后是

2004
01:42:12,460 --> 01:42:12,910
Mode

2005
01:42:14,910 --> 01:42:17,130
这样就搞定啦

2006
01:42:18,620 --> 01:42:20,570
看一下我们看一下这里导出来的

2007
01:42:20,570 --> 01:42:21,650
我们是一个

2008
01:42:24,900 --> 01:42:25,440
函数

2009
01:42:29,820 --> 01:42:30,060
对吧

2010
01:42:30,060 --> 01:42:31,680
这个要需要处理一下

2011
01:42:34,270 --> 01:42:38,110
坚持完成之后是不同时也是需要幼稚一下

2012
01:42:40,770 --> 01:42:42,990
这样的话我们客户端就处理完成

2013
01:43:01,490 --> 01:43:02,450
有如此

2014
01:43:02,450 --> 01:43:07,040
然后加油

2015
01:43:07,040 --> 01:43:07,850
正是处理完了

2016
01:43:07,880 --> 01:43:09,560
那我们就来检查一下

2017
01:43:09,680 --> 01:43:12,620
检查一下到底能用是否应成功呢

2018
01:43:12,620 --> 01:43:14,360
比如说在我们的about页面

2019
01:43:14,510 --> 01:43:15,410
我们来使用一下

2020
01:43:17,570 --> 01:43:18,500
大哥们提供了

2021
01:43:20,450 --> 01:43:22,340
犹如stated不可写法

2022
01:43:22,550 --> 01:43:24,380
比如十道不可写法

2023
01:43:25,870 --> 01:43:26,830
都没有提示

2024
01:43:28,720 --> 01:43:29,170
from

2025
01:43:29,170 --> 01:43:30,610
然后是我们的VS

2026
01:43:31,120 --> 01:43:32,020
然后怎么形容呢

2027
01:43:35,570 --> 01:43:40,700
是不是在V3我们写这个setup setup相当于之前的before create

2028
01:43:40,700 --> 01:43:41,930
还有create是每周七

2029
01:43:43,860 --> 01:43:45,780
然后直接我们拿到它的get

2030
01:43:45,780 --> 01:43:47,610
是我们先把数据获取出来

2031
01:43:51,180 --> 01:43:52,050
油似的

2032
01:43:55,190 --> 01:43:56,000
Cast

2033
01:43:59,000 --> 01:44:00,710
然后我们游的info

2034
01:44:09,260 --> 01:44:09,740
别的事

2035
01:44:11,200 --> 01:44:13,090
是不是我们要拿谁的数据呢

2036
01:44:13,090 --> 01:44:16,660
是不是拿我们的单模块下边的get

2037
01:44:16,660 --> 01:44:19,450
对此给我们的get方法用于定义出来

2038
01:44:19,930 --> 01:44:20,350
然后呢

2039
01:44:20,530 --> 01:44:22,090
用A3的这种想法的话

2040
01:44:22,090 --> 01:44:24,760
我们需要把我们要绑定到模板中的

2041
01:44:25,210 --> 01:44:28,420
之前的这种写在对这种手机我们要通过return回来

2042
01:44:28,810 --> 01:44:30,460
而现在最新的写法

2043
01:44:30,670 --> 01:44:32,590
你直接在这里写来写他up

2044
01:44:32,800 --> 01:44:34,120
这的话你也不需要retain了

2045
01:44:34,120 --> 01:44:36,250
你这里写的东西它会自动给你return

2046
01:44:36,340 --> 01:44:39,490
这是V3最新的一个语法就可以进行使用的

2047
01:44:41,770 --> 01:44:45,820
然后这里我们就写一个简单写个N

2048
01:44:45,850 --> 01:44:46,720
把它展示出来

2049
01:44:49,390 --> 01:44:50,410
看一下我们这个

2050
01:44:52,890 --> 01:44:54,420
VS有没有什么问题

2051
01:44:54,450 --> 01:44:55,200
没什么问题的话

2052
01:44:55,200 --> 01:44:56,790
来我们就需要来配置服务端

2053
01:44:56,910 --> 01:45:00,330
服务端的话还是需要出一些东西的

2054
01:45:04,450 --> 01:45:05,110
Address

2055
01:45:09,990 --> 01:45:10,650
Address

2056
01:45:13,200 --> 01:45:13,740
战神了

2057
01:45:13,830 --> 01:45:14,670
来看一下

2058
01:45:17,880 --> 01:45:18,660
有报错

2059
01:45:22,660 --> 01:45:23,890
这是在我们的

2060
01:45:31,130 --> 01:45:32,120
还有报错

2061
01:45:37,340 --> 01:45:40,040
猫

2062
01:45:42,170 --> 01:45:42,650
一下

2063
01:45:44,400 --> 01:45:45,030
这样可以了

2064
01:45:47,460 --> 01:45:47,850
刷新

2065
01:45:47,880 --> 01:45:48,750
然后我八次

2066
01:45:50,080 --> 01:45:52,870
发现有问题看一下

2067
01:45:54,940 --> 01:45:55,930
竟然抱错了

2068
01:45:57,520 --> 01:45:58,840
盖茨是elephant

2069
01:46:02,260 --> 01:46:02,770
嗯

2070
01:46:04,250 --> 01:46:05,150
都保存了吧

2071
01:46:14,010 --> 01:46:14,520
Sight

2072
01:46:16,420 --> 01:46:17,560
这有什么错吗

2073
01:46:27,010 --> 01:46:29,380
没有啥问题知识

2074
01:46:31,680 --> 01:46:33,690
Get them and get it

2075
01:46:40,840 --> 01:46:41,920
还是提示找不到

2076
01:46:41,920 --> 01:46:43,060
我们看一下

2077
01:47:09,410 --> 01:47:10,700
打一下打一下看一下

2078
01:47:20,660 --> 01:47:22,250
还可以看到是and find

2079
01:47:22,430 --> 01:47:24,470
那我们看下我们的扣的入口是不是

2080
01:47:25,870 --> 01:47:26,110
哎哟

2081
01:47:26,110 --> 01:47:26,770
我处对象

2082
01:47:32,040 --> 01:47:34,380
我看下它的官方文档有没有

2083
01:47:44,710 --> 01:47:46,660
最新的第四代产

2084
01:47:53,260 --> 01:47:53,920
Get

2085
01:47:57,190 --> 01:47:57,580
可以的

2086
01:47:57,580 --> 01:48:00,340
渠道创建的时候我们也没有什么问题

2087
01:48:00,550 --> 01:48:01,150
然后

2088
01:48:10,920 --> 01:48:12,180
使用的时候

2089
01:48:15,680 --> 01:48:17,660
组合是一片

2090
01:48:18,770 --> 01:48:19,850
是这个

2091
01:48:24,520 --> 01:48:25,480
没有写错

2092
01:48:29,500 --> 01:48:30,640
Import

2093
01:48:33,020 --> 01:48:33,500
Get

2094
01:48:35,550 --> 01:48:35,985
不是

2095
01:48:35,985 --> 01:48:39,390
我现在打印这个Stuart都是unDeFined

2096
01:48:39,750 --> 01:48:40,140
看一下

2097
01:48:42,080 --> 01:48:42,920
把它复制过来

2098
01:48:47,740 --> 01:48:48,460
这个也没问题

2099
01:48:49,360 --> 01:48:50,200
先把他治死

2100
01:48:51,190 --> 01:48:52,570
对他我现在直接打印他

2101
01:48:53,140 --> 01:48:55,450
按理说他是反映回来的事

2102
01:48:57,780 --> 01:48:59,250
配卡是and defend

2103
01:49:02,280 --> 01:49:03,900
看到我们的入口这里

2104
01:49:09,970 --> 01:49:10,480
是的

2105
01:49:12,110 --> 01:49:12,920
可是这style

2106
01:49:12,920 --> 01:49:13,790
然后我们的

2107
01:49:22,720 --> 01:49:25,180
这好像也没有什么问题

2108
01:49:27,960 --> 01:49:28,500
等一下

2109
01:49:41,590 --> 01:49:42,640
这个比较奇怪

2110
01:49:42,640 --> 01:49:44,590
官网也是这样写的

2111
01:49:51,360 --> 01:49:51,840
嗯

2112
01:50:01,990 --> 01:50:05,410
由于还是我们是按照四点X的版本4.2

2113
01:50:09,350 --> 01:50:09,980
是的

2114
01:50:33,020 --> 01:50:34,310
我打一下他看一下

2115
01:50:44,680 --> 01:50:46,120
这个就比较奇怪

2116
01:50:49,290 --> 01:50:51,000
这个它是有值的

2117
01:50:51,030 --> 01:50:52,290
没有什么问题

2118
01:51:01,540 --> 01:51:03,550
那他执行为什么返回来是

2119
01:51:22,290 --> 01:51:23,010
碎片

2120
01:51:25,920 --> 01:51:27,720
好像没有啥问题

2121
01:51:35,870 --> 01:51:36,770
也是该特使

2122
01:51:36,770 --> 01:51:37,580
可以看到在

2123
01:51:38,670 --> 01:51:40,440
是该的是这个也没有显示过

2124
01:51:49,400 --> 01:51:50,390
都引入了

2125
01:51:58,230 --> 01:51:59,550
从源头我们找一下

2126
01:51:59,580 --> 01:52:00,390
找一下问题

2127
01:52:06,320 --> 01:52:06,710
再见

2128
01:52:07,100 --> 01:52:08,090
先看这俩

2129
01:52:17,210 --> 01:52:17,750
猫猫

2130
01:52:21,030 --> 01:52:24,660
Oh ma them actions gator index

2131
01:52:30,520 --> 01:52:32,290
直到打出来是一个函数

2132
01:52:38,570 --> 01:52:39,440
然后您

2133
01:52:40,340 --> 01:52:41,330
Space craft

2134
01:52:43,630 --> 01:52:44,560
这个也没有写错

2135
01:52:51,060 --> 01:52:51,900
Garage

2136
01:53:00,850 --> 01:53:03,010
就是里边写了一下

2137
01:53:07,280 --> 01:53:08,450
Mountains

2138
01:53:23,830 --> 01:53:26,680
好像这也没有什么问题

2139
01:53:40,740 --> 01:53:43,200
You re in for is not defend

2140
01:53:44,970 --> 01:53:46,230
先把这里给制止掉

2141
01:54:16,810 --> 01:54:18,640
我不是已经收了吧

2142
01:54:31,100 --> 01:54:32,180
其实不好说这个

2143
01:54:43,030 --> 01:54:44,200
也都返回回来

2144
01:54:45,790 --> 01:54:48,490
namespace也没有什么问题

2145
01:55:08,810 --> 01:55:09,890
这个是ID find

2146
01:55:09,890 --> 01:55:11,600
我们看一下科瑞特

2147
01:55:14,280 --> 01:55:16,140
那这里我没有返回回来吗

2148
01:55:19,370 --> 01:55:19,730
可以看到

2149
01:55:19,730 --> 01:55:20,720
问题出在这了

2150
01:55:22,090 --> 01:55:22,960
不是路径出错啦

2151
01:55:22,960 --> 01:55:23,680
可以看这

2152
01:55:25,340 --> 01:55:26,810
你在这个箭头函数

2153
01:55:27,520 --> 01:55:28,900
你写了这个中括号之后

2154
01:55:28,900 --> 01:55:29,590
那反应回来

2155
01:55:30,510 --> 01:55:32,040
那你什么也没有return

2156
01:55:32,040 --> 01:55:33,060
你只有return的时候

2157
01:55:33,060 --> 01:55:34,800
这个函数才会被反映回来

2158
01:55:34,830 --> 01:55:36,750
而且这里说我们写成大括号

2159
01:55:36,840 --> 01:55:38,790
写大括号那显示还得翻的

2160
01:55:38,970 --> 01:55:41,160
所以这里你如果想省着点儿

2161
01:55:41,160 --> 01:55:43,110
他就把它写成括号的形式

2162
01:55:44,450 --> 01:55:47,840
这这个地方一不小心就疏忽了

2163
01:55:47,840 --> 01:55:49,370
这样的话就可以了

2164
01:55:51,140 --> 01:55:52,130
这样我们再来刷新

2165
01:55:52,640 --> 01:55:54,260
是不是到现在就有值了

2166
01:55:55,320 --> 01:55:56,580
很容易受犯错

2167
01:55:56,580 --> 01:55:58,860
就箭头函数你省略return的时候

2168
01:55:59,310 --> 01:56:01,050
你写写成大括号的形式

2169
01:56:02,400 --> 01:56:03,480
我们检查其他地方

2170
01:56:03,480 --> 01:56:05,430
其他地方的话应该

2171
01:56:06,260 --> 01:56:06,800
没有

2172
01:56:07,560 --> 01:56:08,580
什么问题

2173
01:56:10,560 --> 01:56:13,890
你看就这么一个一个括号的问题

2174
01:56:15,160 --> 01:56:16,870
我们学的语法的话都没有什么问题

2175
01:56:16,870 --> 01:56:17,380
我们继续

2176
01:56:19,730 --> 01:56:20,570
其实遇到错误的话

2177
01:56:20,570 --> 01:56:22,820
其实就这样一步一步去排查

2178
01:56:22,820 --> 01:56:25,040
你可以看到最终就能定位到他

2179
01:56:26,800 --> 01:56:27,640
把注释都打开

2180
01:56:30,080 --> 01:56:31,880
现在我们再来看一下

2181
01:56:32,890 --> 01:56:34,690
I get she is not different

2182
01:56:37,960 --> 01:56:38,770
把她接过去

2183
01:56:40,930 --> 01:56:41,620
再来刷新

2184
01:56:43,540 --> 01:56:44,350
是不up的

2185
01:56:44,530 --> 01:56:46,930
可以看到一登北京是不是都出来了

2186
01:56:47,080 --> 01:56:48,880
证明我们这个VS是不是有问题

2187
01:56:50,850 --> 01:56:52,680
那现在我们就继续往下来

2188
01:56:52,680 --> 01:56:54,780
我们就来配置我们这个服务端

2189
01:56:54,810 --> 01:56:55,320
服务端的话

2190
01:56:55,320 --> 01:56:56,850
我们是不是现在还没有配置

2191
01:56:57,480 --> 01:57:00,300
那服务的我们还是用卡那一套na使用的话

2192
01:57:00,300 --> 01:57:01,170
我们首先也是

2193
01:57:02,860 --> 01:57:04,780
客户端的相关我们来写服务端

2194
01:57:05,500 --> 01:57:07,210
首先把我们的call

2195
01:57:07,270 --> 01:57:08,290
还有像我们的

2196
01:57:09,790 --> 01:57:12,790
cos static还有都给它安装上

2197
01:57:12,790 --> 01:57:17,170
然后的话也是用最新的这个可入场前面加一个艾特符号

2198
01:57:20,910 --> 01:57:21,960
然后我们就到服务站

2199
01:57:21,960 --> 01:57:22,440
现在呢

2200
01:57:22,590 --> 01:57:25,620
我们就使用官方提供的这一个

2201
01:57:30,830 --> 01:57:32,060
他的这个包叫什么名字

2202
01:57:32,150 --> 01:57:35,450
叫也是前面加at four and we折磨人的

2203
01:57:35,870 --> 01:57:37,070
同样给他安装上

2204
01:57:42,960 --> 01:57:44,940
那接下来我们就来写就行了的话

2205
01:57:44,940 --> 01:57:46,770
我就直接用com JS语法啦

2206
01:57:46,770 --> 01:57:48,660
如果你想用SQL语法的话

2207
01:57:48,900 --> 01:57:50,880
是不是我们前面也讲过

2208
01:57:50,880 --> 01:57:54,270
你直接用I get up就是不就可以进行它的一个转换

2209
01:57:54,570 --> 01:57:56,220
在第二周第三周是不是也讲过

2210
01:57:56,790 --> 01:57:58,080
那我们就把它引入线

2211
01:57:58,260 --> 01:57:59,790
刚刚我们已经安装完成了

2212
01:58:02,790 --> 01:58:03,750
然后收呢

2213
01:58:05,340 --> 01:58:06,960
就是我们的精神资源服务器用的

2214
01:58:12,270 --> 01:58:13,710
创建一下我们这个思念

2215
01:58:17,400 --> 01:58:18,540
如此如此的话

2216
01:58:18,540 --> 01:58:20,550
我们就把它单独写写出去啦

2217
01:58:20,550 --> 01:58:21,870
放到这个文件夹里吧

2218
01:58:21,870 --> 01:58:24,090
因为我们这里边吃的东西还比较多的

2219
01:58:24,450 --> 01:58:25,770
所以把它划分出去的话

2220
01:58:26,310 --> 01:58:27,630
代码稍微总结一下

2221
01:58:29,160 --> 01:58:30,840
发出去之后只要把它引入进来

2222
01:58:34,960 --> 01:58:35,320
就这样

2223
01:58:35,680 --> 01:58:38,440
然后我们接下来到我们这里边继续写

2224
01:58:38,440 --> 01:58:39,190
我们如此

2225
01:58:43,560 --> 01:58:45,420
首先是不是用到我们的考察

2226
01:58:45,420 --> 01:58:45,690
如

2227
01:58:51,900 --> 01:58:52,260
如此

2228
01:58:56,640 --> 01:58:57,900
也是先溜一下

2229
01:59:03,790 --> 01:59:05,890
因为最终我们要导到我们API中使用

2230
01:59:05,890 --> 01:59:12,310
所以说我们通过魔典pose把它倒出去这句话这里是common JS的语法

2231
01:59:19,370 --> 01:59:20,630
看一下官网的

2232
01:59:26,810 --> 01:59:27,560
发如此

2233
01:59:39,130 --> 01:59:39,400
这个

2234
01:59:42,980 --> 01:59:44,150
复制下他的写法

2235
01:59:45,330 --> 01:59:46,980
他的文档在这里

2236
01:59:51,730 --> 01:59:53,110
是不root的get

2237
01:59:53,110 --> 01:59:54,910
我们配置下他的路由

2238
01:59:55,120 --> 01:59:55,630
还有的话

2239
01:59:55,630 --> 01:59:57,400
下边是这两个方法

2240
01:59:57,550 --> 02:00:00,370
这个我们也是在第二周第三周都讲过的

2241
02:00:03,650 --> 02:00:04,160
花轿

2242
02:00:07,790 --> 02:00:09,050
这样是不是就可以了

2243
02:00:09,050 --> 02:00:11,480
然后我们这里要选出来的谁呢

2244
02:00:11,570 --> 02:00:14,870
是不是一个是当你进行路由的钱的时候

2245
02:00:15,380 --> 02:00:16,640
是不是一个about路由

2246
02:00:16,640 --> 02:00:18,260
还有一个是我们的根路由

2247
02:00:21,800 --> 02:00:23,210
因为它是一个异步的

2248
02:00:23,210 --> 02:00:26,300
这里我们简单的可以写一个来看一下是否能成功

2249
02:00:27,020 --> 02:00:28,430
C h BA de等于

2250
02:00:28,670 --> 02:00:29,150
比如说

2251
02:00:35,440 --> 02:00:37,930
继续我把你的APP继续往下编写

2252
02:00:39,770 --> 02:00:40,340
所以导出来

2253
02:00:40,340 --> 02:00:42,410
我们是不是需要把我们的APP传进去

2254
02:00:43,370 --> 02:00:45,020
船来这里接受一个APP参数

2255
02:00:45,020 --> 02:00:48,590
然后需要也是需要幼稚一下中间件机制嘛

2256
02:00:50,120 --> 02:00:51,050
然后服务端的话

2257
02:00:51,050 --> 02:00:53,030
我们签签一个3000端口

2258
02:01:00,220 --> 02:01:01,660
我们简单几个食物

2259
02:01:04,560 --> 02:01:05,340
你说300

2260
02:01:06,870 --> 02:01:07,020
0

2261
02:01:07,020 --> 02:01:09,360
这样我们的服务端代码就可以了

2262
02:01:09,480 --> 02:01:11,070
我们启动一下

2263
02:01:11,160 --> 02:01:12,300
看一下有没有什么问题

2264
02:01:13,470 --> 02:01:14,370
这几行代码的话

2265
02:01:14,370 --> 02:01:15,810
应该是没有什么问题地

2266
02:01:16,500 --> 02:01:17,160
启动错了

2267
02:01:19,780 --> 02:01:21,160
的微信没有提楼层

2268
02:01:21,820 --> 02:01:24,670
可以看到cannot find tab

2269
02:01:29,110 --> 02:01:30,430
看下我的配置的命令

2270
02:01:32,100 --> 02:01:35,400
设我APP点击没有什么问题

2271
02:01:39,000 --> 02:01:40,830
Let stalk will you guys

2272
02:01:42,820 --> 02:01:43,240
嗯

2273
02:01:49,240 --> 02:01:51,790
路径在路径配

2274
02:01:52,960 --> 02:01:54,130
少了个斜杠

2275
02:01:55,570 --> 02:01:57,970
现在来看一下是不是就启动起来了

2276
02:01:57,970 --> 02:02:00,580
我们访问一下我们这个3000端口

2277
02:02:03,270 --> 02:02:04,500
Look post3000

2278
02:02:06,060 --> 02:02:08,760
可以看到服务端是不是渲染也没有什么问题

2279
02:02:10,280 --> 02:02:12,620
那接下来我们就是非常关键的一步了

2280
02:02:12,770 --> 02:02:14,450
就实现我们前后的关联

2281
02:02:14,600 --> 02:02:16,400
现在我们客户端是客户端服务端

2282
02:02:16,400 --> 02:02:18,830
服务端他们两个是不是现在没有任何关联

2283
02:02:19,190 --> 02:02:21,050
那现在的话我们就来处理一下

2284
02:02:22,250 --> 02:02:23,900
让他们两个说关联起来

2285
02:02:24,020 --> 02:02:25,850
接下来就是HR到了

2286
02:02:25,850 --> 02:02:27,860
我们就是HR要处理的部分

2287
02:02:27,980 --> 02:02:30,350
一个是我们要做到是不是一个路由的处理

2288
02:02:30,380 --> 02:02:32,240
另外一个就是我们请求的一个处理

2289
02:02:34,200 --> 02:02:35,430
那这里我们先来

2290
02:02:36,140 --> 02:02:37,820
处理一下我们的请求部分

2291
02:02:37,940 --> 02:02:38,600
那首先的话

2292
02:02:38,600 --> 02:02:42,320
我们之前这里的服务端入口是不是还没有写

2293
02:02:44,370 --> 02:02:45,330
这里我们就来说一下

2294
02:02:45,330 --> 02:02:46,470
首先也是把我们的

2295
02:02:47,970 --> 02:02:48,600
客户端呢

2296
02:02:50,460 --> 02:02:51,270
需要引入过来

2297
02:02:51,870 --> 02:02:53,520
这是我们组建的话

2298
02:02:53,520 --> 02:02:54,630
它既在客户端渲染

2299
02:02:54,630 --> 02:02:55,590
也在服务端渲染

2300
02:02:55,590 --> 02:02:58,050
服务端的话是拿到我们的客户端组件

2301
02:02:58,050 --> 02:02:58,650
然后把它

2302
02:02:59,880 --> 02:03:00,720
转化为字符串

2303
02:03:00,750 --> 02:03:02,910
然后通在我们请求路由的时候

2304
02:03:03,330 --> 02:03:05,550
在服务端就直接给我们把这个字符串返回来

2305
02:03:05,550 --> 02:03:07,410
然后浏览器就可以直接渲染出来

2306
02:03:11,090 --> 02:03:12,740
同样为了避免出现断裂的话

2307
02:03:12,740 --> 02:03:12,860
是

2308
02:03:14,600 --> 02:03:15,890
导出一个函数

2309
02:03:20,420 --> 02:03:22,580
可瑞特APP

2310
02:03:22,580 --> 02:03:23,270
这里还少一个

2311
02:03:23,270 --> 02:03:25,910
这里我们的style在服务端也是用到的

2312
02:03:26,210 --> 02:03:27,740
因为我们在数据请求的时候

2313
02:03:28,250 --> 02:03:32,000
我们要实现客户端和服务端来数据的一个统一

2314
02:03:32,000 --> 02:03:36,290
我们就需要用到VS这个状态的管理来进行一个处理

2315
02:03:42,190 --> 02:03:42,790
从里边的话

2316
02:03:42,790 --> 02:03:45,490
我们是不是可以拿到APP拿到如此

2317
02:03:45,520 --> 02:03:45,970
还有我们

2318
02:03:49,660 --> 02:03:51,250
然后把它retain回就行了

2319
02:03:54,530 --> 02:03:58,040
这些东西因为是需要我们在服务端去处理的

2320
02:03:58,490 --> 02:04:01,100
这就是我们的服务端的一个入口

2321
02:04:03,420 --> 02:04:06,180
那这里我们就打包一下我们服务端入口

2322
02:04:07,590 --> 02:04:07,950
第二

2323
02:04:08,130 --> 02:04:09,990
然后是受第一位

2324
02:04:12,960 --> 02:04:13,380
没有问题

2325
02:04:13,380 --> 02:04:14,520
看到我们的事的目录

2326
02:04:14,520 --> 02:04:14,850
下班

2327
02:04:15,710 --> 02:04:18,680
食物搬到DGS是不是打包出来了

2328
02:04:18,830 --> 02:04:21,290
这个是跟我们去服务端去调用使用的

2329
02:04:23,540 --> 02:04:26,450
那接下来我们就继续来处理服务单的话

2330
02:04:26,450 --> 02:04:28,430
首先我们要直接渲染回来

2331
02:04:28,430 --> 02:04:30,290
首先他要拿到我们的客户端

2332
02:04:30,500 --> 02:04:32,240
是不是这里有个音带调模板

2333
02:04:32,300 --> 02:04:33,470
这是不是给我处理好了

2334
02:04:33,500 --> 02:04:34,100
像我们的

2335
02:04:35,130 --> 02:04:36,990
可怜的半岛的价值

2336
02:04:38,500 --> 02:04:39,370
是不是就直接放着

2337
02:04:39,370 --> 02:04:40,900
然后我们服务端拿到模板之后

2338
02:04:41,020 --> 02:04:43,900
我们就可以进行进一步的它的一个处理了

2339
02:04:45,810 --> 02:04:46,230
看一下

2340
02:04:52,000 --> 02:04:53,620
这里这里刚关了

2341
02:04:54,420 --> 02:04:56,070
咱们继续往下处理

2342
02:04:57,450 --> 02:04:58,320
she wo版的

2343
02:05:01,170 --> 02:05:04,380
就到我们这个服务站的阴Di GS这里进行处理

2344
02:05:04,410 --> 02:05:07,470
首先我们要读取本地的文件的话

2345
02:05:07,470 --> 02:05:10,980
我们需要用到note的文件读取模块

2346
02:05:10,980 --> 02:05:11,820
就是FS

2347
02:05:16,590 --> 02:05:17,070
然后呢

2348
02:05:17,370 --> 02:05:19,950
搜真的给我们提供了一个人的图

2349
02:05:19,950 --> 02:05:23,280
使用方法就是把我们的唯一组建我们渲染为

2350
02:05:24,660 --> 02:05:26,430
字符串的话

2351
02:05:26,430 --> 02:05:29,100
我们就可以通过服务端直接把它返回去了

2352
02:05:29,520 --> 02:05:32,520
比如说这里用到的官方给我们提供的艾特

2353
02:05:33,900 --> 02:05:34,950
阿佘

2354
02:05:40,040 --> 02:05:41,480
这怎么竟然没有去世

2355
02:05:42,560 --> 02:05:43,820
还在用他的话

2356
02:05:43,820 --> 02:05:46,340
他可以提供的是一个人的图使用方法

2357
02:05:52,360 --> 02:05:55,630
然后另外我们需要拿到我们这个直播半岛的JS

2358
02:05:55,750 --> 02:05:56,860
是不打包出来之后

2359
02:05:56,860 --> 02:05:58,960
我们要在我们的服务端进行调用

2360
02:05:58,960 --> 02:06:00,460
使用了拿到我们的APP

2361
02:06:00,610 --> 02:06:01,120
我们的root

2362
02:06:01,120 --> 02:06:02,050
还有我们的指导

2363
02:06:03,900 --> 02:06:06,840
休班的那直接把它读取过来就行了

2364
02:06:07,830 --> 02:06:08,580
是在哪呢

2365
02:06:09,210 --> 02:06:11,220
She got the beast

2366
02:06:12,480 --> 02:06:16,500
目录下边儿的书搬到default

2367
02:06:19,990 --> 02:06:22,090
这样我们就读取到了我们这个文件

2368
02:06:29,420 --> 02:06:29,900
另外的话

2369
02:06:29,900 --> 02:06:31,730
这个模板文件我们是拿到了

2370
02:06:31,910 --> 02:06:32,780
你拿到魔文件

2371
02:06:32,780 --> 02:06:33,530
你直接返回去

2372
02:06:33,710 --> 02:06:34,670
他是会渲染不出来

2373
02:06:34,790 --> 02:06:36,140
那这里我们需要把它读一次

2374
02:06:39,950 --> 02:06:44,540
这都都去我们的HR模板用到它的

2375
02:06:47,210 --> 02:06:48,320
同步读取模块吧

2376
02:06:55,720 --> 02:06:56,530
然后是

2377
02:07:05,440 --> 02:07:08,560
目录下边儿的1.7秒

2378
02:07:08,680 --> 02:07:10,270
然后都是格式呢

2379
02:07:10,390 --> 02:07:13,690
我们设置一下UTF杠

2380
02:07:13,690 --> 02:07:17,230
这样我们就能读取到我们这个APP的模板了

2381
02:07:17,890 --> 02:07:19,360
所以说它是不是就是一个字符串

2382
02:07:19,660 --> 02:07:22,120
字符串的话我们就可以做一些替换之类的

2383
02:07:22,360 --> 02:07:23,770
比如说我们拿到模板之后

2384
02:07:23,770 --> 02:07:24,730
我们通过一个正则

2385
02:07:25,530 --> 02:07:31,320
匹配直接就把我们拿到的唯一组建直接就渲染到我们这个模板里边儿了

2386
02:07:31,470 --> 02:07:33,540
接下来就是进行一些正则的操作

2387
02:07:37,140 --> 02:07:40,320
那我就继续继续首先画这里

2388
02:07:40,320 --> 02:07:43,050
是不是来匹配到对应的路由的时候

2389
02:07:43,230 --> 02:07:44,250
我们要进行一个处理

2390
02:07:44,250 --> 02:07:44,670
首先

2391
02:07:46,410 --> 02:07:48,630
拿到我们想要的东西

2392
02:07:49,230 --> 02:07:51,480
拿下东西是不是我们打包车的这个文件

2393
02:07:51,660 --> 02:07:52,500
就是我们的社保

2394
02:07:52,500 --> 02:07:57,840
是我们已经把这四我们需要的一批如此意识到我们已经都将它导出来了

2395
02:08:00,270 --> 02:08:01,230
咨询一下这个函数

2396
02:08:01,230 --> 02:08:02,670
我们从里边可以就拿到

2397
02:08:06,060 --> 02:08:07,080
我们的APP

2398
02:08:07,860 --> 02:08:09,600
比如说为了避免重复

2399
02:08:09,600 --> 02:08:11,220
因为服务端是不是有一批

2400
02:08:11,220 --> 02:08:13,440
我们给他起个别名叫APP组件

2401
02:08:16,530 --> 02:08:17,400
然后root呢

2402
02:08:17,610 --> 02:08:23,160
我们单独写是不以后的负担有什么办法单独写个代表是客户端的如此答案写到

2403
02:08:25,480 --> 02:08:26,320
这样是不就可以了

2404
02:08:26,440 --> 02:08:28,870
然后我们需要等一下

2405
02:08:28,870 --> 02:08:30,670
这个都是光荣的写法

2406
02:08:30,670 --> 02:08:33,460
这里可以看到

2407
02:08:35,540 --> 02:08:36,080
晒啥

2408
02:08:40,850 --> 02:08:41,240
在这

2409
02:08:43,090 --> 02:08:45,010
一个路由和代码的分离

2410
02:08:46,530 --> 02:08:48,870
这就是你需要等待一些

2411
02:08:48,870 --> 02:08:49,950
类似于意外的操作

2412
02:08:49,950 --> 02:08:51,720
比如说等待路由它的解析完成

2413
02:08:51,720 --> 02:08:56,700
然后等待你的说把你的服务端的地址给他复制进去

2414
02:08:56,700 --> 02:08:58,590
就当你请求这个a的时候

2415
02:08:58,800 --> 02:08:59,940
你要知道当天请是谁

2416
02:09:00,060 --> 02:09:02,400
所以你把这个root谁给他复制一下

2417
02:09:04,200 --> 02:09:05,550
我把这两句代码复制过来

2418
02:09:05,670 --> 02:09:06,540
这都是官网

2419
02:09:06,840 --> 02:09:09,450
就像V1关于这个VEI大家指南的话

2420
02:09:09,660 --> 02:09:10,860
还写的非常不错的

2421
02:09:12,290 --> 02:09:13,580
那因为它这里的话

2422
02:09:13,580 --> 02:09:14,750
他是用的express

2423
02:09:14,750 --> 02:09:15,770
我们这里用的是靠

2424
02:09:15,830 --> 02:09:16,730
所以说我们这里的

2425
02:09:17,780 --> 02:09:18,260
儿童

2426
02:09:18,860 --> 02:09:19,370
Kan dice

2427
02:09:19,370 --> 02:09:22,700
上下文这边就可以拿到CTS点、Q.URL

2428
02:09:22,730 --> 02:09:23,750
拿了给到他

2429
02:09:24,080 --> 02:09:25,820
然后等待我们的路由

2430
02:09:25,820 --> 02:09:26,210
比如说

2431
02:09:27,470 --> 02:09:28,490
处理完成之后呢

2432
02:09:29,200 --> 02:09:30,490
我们就可以进行我们的操作

2433
02:09:30,490 --> 02:09:33,490
首先就要拿到我们的

2434
02:09:35,110 --> 02:09:36,370
就是组建的内容

2435
02:09:38,260 --> 02:09:40,090
图片内容是不是就是我们这个APP

2436
02:09:40,420 --> 02:09:42,130
所以我们就要用我们的特性

2437
02:09:42,400 --> 02:09:43,090
把我们这个

2438
02:09:44,360 --> 02:09:46,370
组建内容转换为字符串的形式

2439
02:09:46,430 --> 02:09:49,250
因为转换成字符串我们之后才可以方便进行操作

2440
02:09:49,400 --> 02:09:49,640
这种

2441
02:09:50,720 --> 02:09:51,110
人

2442
02:09:53,780 --> 02:09:54,050
呢

2443
02:09:55,800 --> 02:09:56,550
UE的组件

2444
02:09:56,730 --> 02:09:59,460
这样话就把他们围组件转换成字符串

2445
02:09:59,940 --> 02:10:01,140
转换成字符串之后

2446
02:10:01,260 --> 02:10:02,610
我们就可以进行一些

2447
02:10:04,240 --> 02:10:05,620
比如说字符串也操作了

2448
02:10:06,490 --> 02:10:07,570
这里我们可以拼一下

2449
02:10:07,570 --> 02:10:11,380
比如说我们在服务端的时候就把它拼接好

2450
02:10:13,420 --> 02:10:14,950
ID等于

2451
02:10:18,970 --> 02:10:19,330
APP

2452
02:10:22,830 --> 02:10:23,550
把他给到

2453
02:10:25,290 --> 02:10:26,670
APP component

2454
02:10:27,870 --> 02:10:29,850
这样我们就直接把他劝回来了

2455
02:10:31,050 --> 02:10:32,190
然后我们a卷儿呢

2456
02:10:33,080 --> 02:10:36,200
是不是我们这个模板我们也拿到了HTML模板

2457
02:10:36,470 --> 02:10:38,990
我们只需要把它正则替换掉就行了

2458
02:10:42,010 --> 02:10:42,940
就等于我们的

2459
02:10:43,960 --> 02:10:46,210
complete replace

2460
02:10:49,690 --> 02:10:49,930
呢

2461
02:10:49,930 --> 02:10:53,350
是不是就是我们的客户端的这个这里它是

2462
02:10:57,240 --> 02:10:58,680
替换掉我们这个APP

2463
02:10:58,680 --> 02:11:04,830
伉俪的这样话就是不就相当于从服务端我就直接把我这个页面内容直接就返回回来了

2464
02:11:05,700 --> 02:11:07,890
这个大家这一步到这一步的话

2465
02:11:07,890 --> 02:11:09,270
大家都能跟得上吗

2466
02:11:11,960 --> 02:11:13,340
莫有问题的可以回复下一

2467
02:11:14,040 --> 02:11:15,660
然后有什么都能跟得上

2468
02:11:17,260 --> 02:11:20,170
因为像这个的话还是比较简单

2469
02:11:20,170 --> 02:11:22,990
像它的基本的爱他他渲染的一个整体的流程

2470
02:11:24,280 --> 02:11:27,130
那么既然已经拿到我们拼接玩好了一天包之后

2471
02:11:27,280 --> 02:11:29,440
就直接把它退回来就可以了

2472
02:11:31,000 --> 02:11:33,430
这样是不是就直接退回来了

2473
02:11:35,380 --> 02:11:35,770
挂了

2474
02:11:37,420 --> 02:11:37,900
开

2475
02:11:39,020 --> 02:11:41,060
这个没有安装码安装一下

2476
02:11:44,510 --> 02:11:46,760
At will you show your friend

2477
02:11:48,540 --> 02:11:49,560
这不安装过了吗

2478
02:11:53,960 --> 02:11:54,230
对

2479
02:11:54,710 --> 02:11:56,360
回头你开发再敲一遍就行了

2480
02:11:56,870 --> 02:11:57,350
看一下

2481
02:12:03,290 --> 02:12:04,730
我看一下官方文件

2482
02:12:04,730 --> 02:12:07,400
这个包的名字叫啥

2483
02:12:07,790 --> 02:12:08,780
少写了个

2484
02:12:11,780 --> 02:12:12,770
怪不得安装不上

2485
02:12:13,980 --> 02:12:14,490
这个啊

2486
02:12:15,240 --> 02:12:16,170
那这里要改一下

2487
02:12:16,290 --> 02:12:17,730
他是挨着收

2488
02:12:22,370 --> 02:12:22,970
还不错

2489
02:12:26,650 --> 02:12:27,580
看海报啥图

2490
02:12:31,160 --> 02:12:36,200
Request that will you tu be parent

2491
02:12:36,200 --> 02:12:37,400
这个我们不是安装过了吗

2492
02:12:42,210 --> 02:12:44,640
我看一下看一下这个我是处理到哪了

2493
02:12:44,640 --> 02:12:46,290
必要的base JS

2494
02:12:47,610 --> 02:12:49,410
New way load plug

2495
02:12:52,940 --> 02:12:54,050
单独处理了

2496
02:12:58,780 --> 02:13:00,070
Base config

2497
02:13:01,120 --> 02:13:01,720
base

2498
02:13:05,930 --> 02:13:07,100
这没理由报错

2499
02:13:18,520 --> 02:13:20,920
这个没有安安装一下

2500
02:13:22,200 --> 02:13:22,770
很肿

2501
02:13:29,250 --> 02:13:31,590
大家看一下

2502
02:13:31,620 --> 02:13:32,670
一直提示埋着

2503
02:13:34,710 --> 02:13:36,120
Requires

2504
02:13:38,910 --> 02:13:39,660
我来看一下

2505
02:13:41,590 --> 02:13:42,460
可瑞的APP

2506
02:13:42,460 --> 02:13:47,080
然后服务端代码都都给它配置了load plug

2507
02:13:49,870 --> 02:13:50,920
Will you load

2508
02:13:53,650 --> 02:13:54,700
没有啥问题

2509
02:14:09,580 --> 02:14:10,060
看一下

2510
02:14:12,200 --> 02:14:13,220
Will e Lu

2511
02:14:16,790 --> 02:14:18,500
明明都给它配置上了

2512
02:14:18,500 --> 02:14:19,610
这还报错

2513
02:14:23,270 --> 02:14:25,730
3.2.6版本的问题

2514
02:14:44,340 --> 02:14:47,670
这里我们就忽略了一个CS的解析

2515
02:14:47,820 --> 02:14:48,780
然后note

2516
02:14:50,660 --> 02:14:51,650
小板凳

2517
02:14:55,790 --> 02:14:57,080
这都没有什么问题

2518
02:15:02,930 --> 02:15:03,620
这也

2519
02:15:13,490 --> 02:15:14,510
又出现这个

2520
02:15:21,380 --> 02:15:22,190
可怜他

2521
02:15:26,430 --> 02:15:26,820
没问题

2522
02:15:26,820 --> 02:15:30,060
你看客户端打包的时候是可以的

2523
02:15:30,060 --> 02:15:32,880
那证明我们这个危楼的解析是没有问题的

2524
02:15:35,540 --> 02:15:36,920
为一楼的解析是没有问题

2525
02:15:36,920 --> 02:15:38,720
但是服务端的时候

2526
02:15:39,540 --> 02:15:40,590
就出现了问题

2527
02:15:40,800 --> 02:15:41,640
服务端

2528
02:15:45,540 --> 02:15:46,080
一秋

2529
02:15:46,110 --> 02:15:47,790
Clean的球手

2530
02:16:10,470 --> 02:16:11,520
重新打一下包

2531
02:16:11,520 --> 02:16:12,090
试一下

2532
02:16:13,710 --> 02:16:14,970
饿瘦

2533
02:16:20,390 --> 02:16:22,670
然后是受

2534
02:16:28,670 --> 02:16:29,420
还是报错

2535
02:16:49,160 --> 02:16:50,180
这个问题

2536
02:16:57,080 --> 02:16:58,400
如有遗漏者

2537
02:16:59,950 --> 02:17:01,180
只有服务中

2538
02:17:11,480 --> 02:17:12,860
好像也没有什么问题

2539
02:17:13,790 --> 02:17:15,500
这个我们客户端打包的时候

2540
02:17:19,110 --> 02:17:20,580
客户端也全部打包出来了

2541
02:17:21,310 --> 02:17:22,870
那证明我们这个配置没问题

2542
02:17:22,870 --> 02:17:25,270
但是no de moon启动的时候出现问题了

2543
02:17:29,620 --> 02:17:30,940
Shi ou a PP d

2544
02:17:32,220 --> 02:17:33,180
一起打的是

2545
02:17:38,340 --> 02:17:41,640
那是他是到这里无法解析

2546
02:17:50,880 --> 02:17:51,270
嗯

2547
02:18:01,590 --> 02:18:02,160
看一下

2548
02:18:03,840 --> 02:18:04,380
打一下

2549
02:18:04,380 --> 02:18:06,240
看一下这里有没有出什么东西

2550
02:18:08,800 --> 02:18:09,940
那我们就说定下来

2551
02:18:10,330 --> 02:18:12,880
我们这个配置的唯一logo是没有问题的

2552
02:18:14,410 --> 02:18:14,920
加上

2553
02:18:20,870 --> 02:18:21,680
是我班的

2554
02:18:22,810 --> 02:18:23,470
写错了吗

2555
02:18:26,290 --> 02:18:26,650
没有

2556
02:18:45,350 --> 02:18:46,790
Clean APP点

2557
02:19:00,520 --> 02:19:02,410
这个也没有什么问题

2558
02:19:11,790 --> 02:19:13,260
都经过打包之后的

2559
02:19:19,150 --> 02:19:21,040
那是不是我们这打包环境这

2560
02:19:26,200 --> 02:19:30,160
看看检查一下我们这个服务站打包环境出的东西是不是有点问题

2561
02:19:30,340 --> 02:19:30,820
怕是

2562
02:19:32,490 --> 02:19:33,120
没得

2563
02:19:34,060 --> 02:19:34,840
Active

2564
02:19:39,760 --> 02:19:41,380
Web pack note

2565
02:19:50,170 --> 02:19:51,670
引入应该是收干到底

2566
02:19:55,240 --> 02:19:56,350
我引入的是哪一个

2567
02:19:57,430 --> 02:19:57,670
嗯

2568
02:20:03,070 --> 02:20:04,570
打包起来那是没问题的

2569
02:20:04,840 --> 02:20:05,950
比如说半岛

2570
02:20:10,080 --> 02:20:10,830
再来看一下

2571
02:20:14,220 --> 02:20:15,300
看这里还抱一个啥

2572
02:20:18,040 --> 02:20:21,520
Does the option in code

2573
02:20:28,220 --> 02:20:29,060
读取文件

2574
02:20:54,910 --> 02:20:55,540
Cost

2575
02:20:55,840 --> 02:20:56,440
然后

2576
02:21:01,330 --> 02:21:01,720
热吗

2577
02:21:01,720 --> 02:21:03,520
然后引入一下他的派怎么办

2578
02:21:13,140 --> 02:21:14,550
又少写一个肉

2579
02:21:19,140 --> 02:21:19,530
这个啊

2580
02:21:23,320 --> 02:21:25,090
这一步先

2581
02:21:30,150 --> 02:21:30,960
这样就可以啦

2582
02:21:30,960 --> 02:21:31,860
然后我们来看一下

2583
02:21:32,520 --> 02:21:34,020
我们的这个海上

2584
02:21:38,110 --> 02:21:39,070
六包错了

2585
02:21:40,770 --> 02:21:43,440
Root d put is knock function

2586
02:21:44,820 --> 02:21:45,210
一下

2587
02:21:45,390 --> 02:21:45,840
这里的话

2588
02:21:45,840 --> 02:21:48,120
我们的root不是我们服务端的

2589
02:21:48,120 --> 02:21:49,410
是我们客户端的

2590
02:21:50,100 --> 02:21:51,870
他说这里统一给他改过去

2591
02:21:52,680 --> 02:21:56,280
然后再来就看到现在页面终于出来了

2592
02:21:56,460 --> 02:21:58,950
我们去显示网页源代码

2593
02:21:59,250 --> 02:22:00,270
可以看到

2594
02:22:00,780 --> 02:22:03,060
是不是直接就旋到了我们的页面中

2595
02:22:03,060 --> 02:22:04,140
这样在你Su

2596
02:22:04,320 --> 02:22:06,270
还有当你去防这个首页的时候

2597
02:22:06,480 --> 02:22:07,020
他是不是就

2598
02:22:08,020 --> 02:22:09,580
可以做到首评这样指出来

2599
02:22:10,580 --> 02:22:13,790
但是你可以看到现在是不是有个新的问题

2600
02:22:13,790 --> 02:22:19,430
你每次页面点击好像是我都去请求了类似这个服务端

2601
02:22:26,390 --> 02:22:28,220
跳转到后跳转的

2602
02:22:50,250 --> 02:22:50,910
来看一下

2603
02:22:56,470 --> 02:22:57,730
Link

2604
02:23:06,990 --> 02:23:08,100
我们一会儿再处理这个

2605
02:23:08,160 --> 02:23:08,790
我们先把

2606
02:23:10,820 --> 02:23:15,590
这是我们先先保证是不源代码是直接就返回我们页面中了

2607
02:23:15,650 --> 02:23:16,310
但是还有问题

2608
02:23:16,310 --> 02:23:18,680
我们消除一下这个数据的获取问题

2609
02:23:18,680 --> 02:23:20,330
就是如果比如说

2610
02:23:21,500 --> 02:23:22,850
我们在这个

2611
02:23:23,610 --> 02:23:25,260
客户端的客户端的代码

2612
02:23:25,710 --> 02:23:26,880
比如说在我们的后面

2613
02:23:27,150 --> 02:23:29,520
除了基本的我们这类产品的模板之外

2614
02:23:29,580 --> 02:23:32,310
还有数据是我们通过阿贾克斯请求回来的

2615
02:23:32,700 --> 02:23:34,980
我们这个页面已经是从服务端直接返回了

2616
02:23:35,190 --> 02:23:36,360
那像你按这个请求

2617
02:23:36,510 --> 02:23:39,090
其实它就可以跟随我们这个模板一块儿回来就行了

2618
02:23:39,420 --> 02:23:41,490
你没必要说你的模板先回来

2619
02:23:41,490 --> 02:23:42,810
然后里边的一些内容呢

2620
02:23:43,020 --> 02:23:44,940
你需要等待你JS加载完毕

2621
02:23:44,940 --> 02:23:45,960
然后再去发起

2622
02:23:45,960 --> 02:23:46,710
按照他的请求

2623
02:23:46,950 --> 02:23:49,560
请求回来之后再去操作DOM渲染到页面上

2624
02:23:49,800 --> 02:23:51,900
那这样一个流程显然是不是

2625
02:23:51,900 --> 02:23:52,680
非常不友好

2626
02:23:52,980 --> 02:23:53,460
那这里的话

2627
02:23:53,460 --> 02:23:54,480
既然我们已经让

2628
02:23:55,780 --> 02:23:56,860
他在服务端进行处理

2629
02:23:56,860 --> 02:24:02,170
那么顺便把他请求的数据也给它一块返回来就可以了

2630
02:24:02,260 --> 02:24:05,920
这里的话简单的用一个mark的数据

2631
02:24:06,820 --> 02:24:07,930
之前有个

2632
02:24:14,540 --> 02:24:14,960
是真的

2633
02:24:20,480 --> 02:24:23,240
这个这里我简单用一个接口这里

2634
02:24:27,420 --> 02:24:28,710
那这里的话要进行接口请求

2635
02:24:28,710 --> 02:24:30,360
我先把excuse

2636
02:24:43,130 --> 02:24:43,850
登录一下

2637
02:24:48,850 --> 02:24:50,590
May bank

2638
02:24:51,920 --> 02:24:52,910
不会被我删了吧

2639
02:24:54,900 --> 02:24:55,650
等一下

2640
02:24:57,270 --> 02:24:57,810
没有了

2641
02:25:04,610 --> 02:25:05,030
还有啊

2642
02:25:07,110 --> 02:25:08,340
你说我拿下这个接口

2643
02:25:11,350 --> 02:25:13,240
就大家完全可以自己摸给他睡醒

2644
02:25:13,240 --> 02:25:14,770
这个话就主要返回回

2645
02:25:16,410 --> 02:25:18,000
反正是一个name还一个address

2646
02:25:18,270 --> 02:25:19,740
不就后面的一样

2647
02:25:20,070 --> 02:25:21,390
那这里的话我就拿过来

2648
02:25:28,130 --> 02:25:30,380
比如说我们在我们的home中巴home中

2649
02:25:30,800 --> 02:25:31,220
首先

2650
02:25:32,480 --> 02:25:33,410
先把这个接口放着

2651
02:25:34,280 --> 02:25:36,470
首先我们把我们的excuse引入

2652
02:25:36,470 --> 02:25:36,680
见

2653
02:25:39,530 --> 02:25:40,430
我只是剪了一下

2654
02:25:40,430 --> 02:25:42,950
我们就不再去丰庄这个S了

2655
02:25:44,900 --> 02:25:46,940
然后这里我们是否要处理中

2656
02:25:46,940 --> 02:25:47,270
我们

2657
02:25:48,350 --> 02:25:49,250
状态管理中

2658
02:25:49,820 --> 02:25:51,860
就是当中存在一个内幕

2659
02:25:51,890 --> 02:25:54,320
还有存着一个UFO数据呢

2660
02:25:54,320 --> 02:25:57,320
这里我们就使用这个顾客的写法意识到

2661
02:25:57,940 --> 02:25:58,690
改了一下

2662
02:26:09,730 --> 02:26:10,480
我们改变的话

2663
02:26:10,480 --> 02:26:12,340
我们可以用他的方法

2664
02:26:21,620 --> 02:26:23,180
还有我们的get是

2665
02:26:24,950 --> 02:26:26,240
挡一挡

2666
02:26:30,110 --> 02:26:32,480
首先我们拿到我们的数据

2667
02:26:43,130 --> 02:26:44,360
然后这里边儿应该是

2668
02:26:45,270 --> 02:26:46,050
要变化的

2669
02:26:46,260 --> 02:26:48,390
所以我们用computer来接听一下

2670
02:26:48,510 --> 02:26:50,190
这个是不是自动就我们导入进来了

2671
02:26:53,820 --> 02:26:57,030
是我们的DEMO模块下边儿的

2672
02:27:01,320 --> 02:27:02,070
这个也改一下

2673
02:27:07,840 --> 02:27:08,830
Compute

2674
02:27:18,770 --> 02:27:20,930
这是正常请求回来的数据

2675
02:27:20,930 --> 02:27:21,470
然后

2676
02:27:24,250 --> 02:27:24,640
炫

2677
02:27:29,390 --> 02:27:30,710
这里加一个DNA吧

2678
02:27:30,740 --> 02:27:31,520
把它渲染出来

2679
02:27:55,810 --> 02:27:56,440
报啥错

2680
02:27:57,530 --> 02:27:58,760
找不到名称

2681
02:27:58,760 --> 02:27:59,420
由着衣服

2682
02:28:13,780 --> 02:28:15,340
怎么给他扔扇回来

2683
02:28:18,270 --> 02:28:19,350
Script

2684
02:28:24,830 --> 02:28:27,260
如热意粉就起来

2685
02:28:33,560 --> 02:28:33,740
嗯

2686
02:28:40,630 --> 02:28:41,650
这个还小一点

2687
02:28:46,430 --> 02:28:47,150
将黑啦

2688
02:28:49,110 --> 02:28:49,530
然后呢

2689
02:28:49,800 --> 02:28:54,150
这个数据我们要请求过来佩戴setup

2690
02:28:54,150 --> 02:28:55,290
这里直接发请求

2691
02:28:55,290 --> 02:28:56,370
比如说我们进行一个

2692
02:28:58,860 --> 02:28:59,190
的话

2693
02:28:59,190 --> 02:29:00,000
要进行的请求

2694
02:29:00,000 --> 02:29:03,360
不用给我们提供了一个顾客的沟子

2695
02:29:03,510 --> 02:29:05,550
就可以让我们他只在服务端运行

2696
02:29:05,580 --> 02:29:07,470
而在客户端它是不运行的

2697
02:29:08,700 --> 02:29:10,020
而且我们使用与艾的话

2698
02:29:10,020 --> 02:29:13,050
还需要我们自己去完成这一套

2699
02:29:14,270 --> 02:29:14,630
这里的话

2700
02:29:14,630 --> 02:29:16,520
我们先把这个请求写了

2701
02:29:18,800 --> 02:29:20,780
比如说我们这里正常的话

2702
02:29:21,050 --> 02:29:22,550
如果没有这个服务单直接返回来

2703
02:29:22,550 --> 02:29:24,530
我们正常是要发起请求的

2704
02:29:25,910 --> 02:29:26,480
位置

2705
02:29:32,150 --> 02:29:35,570
正常我们发请求就从这里拿回我们的数据

2706
02:29:38,010 --> 02:29:38,940
然后拿到之后呢

2707
02:29:39,300 --> 02:29:39,750
我们就

2708
02:29:41,250 --> 02:29:41,970
改变一下

2709
02:29:43,530 --> 02:29:45,240
DEMO下边的Saturday

2710
02:29:47,100 --> 02:29:50,280
就是我们这个data是正常的一个请求

2711
02:29:58,300 --> 02:30:00,040
现在可以来看一下应该

2712
02:30:05,050 --> 02:30:05,440
的

2713
02:30:09,120 --> 02:30:10,740
我们先调试一下客户端

2714
02:30:13,510 --> 02:30:13,780
后

2715
02:30:18,080 --> 02:30:19,700
Re generator runtime

2716
02:30:25,370 --> 02:30:27,500
这里是我们用到了S7的语法

2717
02:30:27,830 --> 02:30:28,820
用了s Qi语法

2718
02:30:28,820 --> 02:30:29,780
是不是背包

2719
02:30:30,110 --> 02:30:32,270
你还得配置一下的话

2720
02:30:32,270 --> 02:30:35,330
我们需要安装解决一下这个I think of it的

2721
02:30:35,330 --> 02:30:37,910
我们需要安装一个叫

2722
02:30:40,100 --> 02:30:42,050
这个主要解决我们这

2723
02:30:43,130 --> 02:30:44,780
把三河为这个语法呢

2724
02:30:46,500 --> 02:30:47,010
福利价

2725
02:30:48,880 --> 02:30:50,740
可以看到稍微哪里配置不好

2726
02:30:50,740 --> 02:30:52,600
是不是就他就不给你工作了

2727
02:30:54,480 --> 02:30:56,100
我这里还需要处理一下

2728
02:30:57,740 --> 02:31:00,650
叫普拉格给他配置一个

2729
02:31:03,320 --> 02:31:05,240
然后这样我们再来运行呢

2730
02:31:06,160 --> 02:31:06,850
I keep

2731
02:31:09,540 --> 02:31:10,650
还有新的错误码

2732
02:31:14,720 --> 02:31:15,620
什么的符号

2733
02:31:20,900 --> 02:31:21,620
大家听一下

2734
02:31:22,630 --> 02:31:23,560
可以看到现在就

2735
02:31:24,420 --> 02:31:24,690
嗯

2736
02:31:26,340 --> 02:31:27,090
启动起来了

2737
02:31:32,930 --> 02:31:36,290
怎么还报re generator right time is not to defend

2738
02:31:44,270 --> 02:31:46,220
Transform generate

2739
02:32:01,620 --> 02:32:02,520
没有问题

2740
02:32:02,520 --> 02:32:03,750
是海报这个错

2741
02:32:10,470 --> 02:32:11,070
看一下

2742
02:32:12,890 --> 02:32:15,080
这个主要是因为用到了S7的用法

2743
02:32:22,180 --> 02:32:22,690
爱情

2744
02:32:23,380 --> 02:32:25,210
没问题意思

2745
02:32:40,840 --> 02:32:41,890
我重新打包一下

2746
02:32:53,270 --> 02:32:56,150
配置完全这个应该没有什么

2747
02:33:06,520 --> 02:33:07,000
这

2748
02:33:11,710 --> 02:33:13,090
看一下背包的官网

2749
02:33:25,140 --> 02:33:26,250
就是这样用的

2750
02:33:38,500 --> 02:33:39,970
Its a baseball playing

2751
02:33:43,910 --> 02:33:44,330
西

2752
02:33:49,270 --> 02:33:51,580
没有什么问题

2753
02:33:51,580 --> 02:33:52,030
是不是啊

2754
02:33:52,690 --> 02:33:53,380
I think

2755
02:33:54,430 --> 02:33:55,030
都能用了

2756
02:33:57,600 --> 02:33:58,950
I think of force

2757
02:34:08,850 --> 02:34:09,390
配置

2758
02:34:16,800 --> 02:34:17,850
也不需要试

2759
02:34:31,550 --> 02:34:33,140
怎么老吃这种问题

2760
02:34:43,280 --> 02:34:43,790
嗯

2761
02:34:45,030 --> 02:34:45,780
等著

2762
02:35:00,700 --> 02:35:01,030
这

2763
02:35:24,220 --> 02:35:25,990
那应该报找不到错误的

2764
02:35:25,990 --> 02:35:27,820
这端上了最新的

2765
02:35:45,300 --> 02:35:46,170
不包含这里边儿

2766
02:35:46,170 --> 02:35:47,160
这个需要单独安装

2767
02:35:53,110 --> 02:35:53,950
我先接往下

2768
02:35:53,950 --> 02:35:55,420
一会儿再来处理这个

2769
02:35:58,410 --> 02:36:00,180
先把流程往下写一下

2770
02:36:00,930 --> 02:36:02,190
我们就还差最后一步了

2771
02:36:06,400 --> 02:36:07,060
你先

2772
02:36:11,750 --> 02:36:11,960
这

2773
02:36:13,010 --> 02:36:13,700
这是不正常

2774
02:36:13,700 --> 02:36:14,810
要进行这个请求

2775
02:36:15,020 --> 02:36:16,580
但是现在我们从服务站回来的话

2776
02:36:16,910 --> 02:36:19,340
我们是只让他在服务端直接拿到这个数就行了

2777
02:36:19,340 --> 02:36:21,650
所以说所以它提供了一个hooks

2778
02:36:24,760 --> 02:36:25,300
叫什么呢

2779
02:36:25,300 --> 02:36:25,720
叫

2780
02:36:29,670 --> 02:36:30,300
She

2781
02:36:31,500 --> 02:36:32,730
prefect

2782
02:36:36,310 --> 02:36:36,970
昂首

2783
02:36:38,100 --> 02:36:39,900
这句话是不是也提醒更新

2784
02:36:43,020 --> 02:36:43,920
So perfect

2785
02:36:45,030 --> 02:36:46,740
这是V3官方给我们提供了

2786
02:36:46,740 --> 02:36:49,830
我看一下官网吧

2787
02:36:49,830 --> 02:36:51,960
V3最近有新的版本

2788
02:37:02,730 --> 02:37:03,300
我也

2789
02:37:12,330 --> 02:37:14,370
竟然搜不到

2790
02:37:19,880 --> 02:37:20,540
看一下答案

2791
02:37:27,910 --> 02:37:28,990
在文档里没有写

2792
02:37:30,210 --> 02:37:31,320
我们现在写一下

2793
02:37:31,320 --> 02:37:33,990
我们在服务端看能不能执行就可以了

2794
02:37:34,320 --> 02:37:37,200
然后这里是不是我们要在服务端直接启用这个接口

2795
02:37:37,410 --> 02:37:38,700
就拿到它的数据

2796
02:37:39,180 --> 02:37:42,750
那这里的话我们就可以直接所谓的等待他进行请求

2797
02:37:44,990 --> 02:37:45,830
一定要写到这儿

2798
02:37:45,830 --> 02:37:46,520
如果不写的话

2799
02:37:46,520 --> 02:37:49,400
你这里地势还是拿不到你这个fast的

2800
02:37:54,080 --> 02:37:55,430
这里我们可以写一下叫

2801
02:37:59,060 --> 02:37:59,900
perfect

2802
02:38:02,890 --> 02:38:04,810
服务站调用资讯

2803
02:38:07,040 --> 02:38:08,930
这个它的客户端是不知情的

2804
02:38:08,930 --> 02:38:10,160
所以说你写的话

2805
02:38:10,160 --> 02:38:13,250
客户端就直接给你忽略掉是没有问题的

2806
02:38:13,250 --> 02:38:13,700
这样的话

2807
02:38:13,970 --> 02:38:17,000
我们重新来打包一下我们的代码

2808
02:38:33,220 --> 02:38:34,990
我好像是不是按错东西了

2809
02:38:36,700 --> 02:38:36,940
嗯

2810
02:38:39,050 --> 02:38:39,950
这个按错东西啦

2811
02:38:39,950 --> 02:38:42,260
可以看到这transform runtime

2812
02:38:48,350 --> 02:38:48,620
哎呀

2813
02:38:56,970 --> 02:38:57,900
是这个插件

2814
02:39:00,220 --> 02:39:00,850
搞错了

2815
02:39:14,580 --> 02:39:16,860
可以看看这插件应该配错的话

2816
02:39:17,280 --> 02:39:18,360
他也是不值钱的

2817
02:39:21,310 --> 02:39:23,350
这时解析我们的阿森咳

2818
02:39:23,380 --> 02:39:24,280
Wait语法的

2819
02:39:24,340 --> 02:39:27,790
现在我们再来执行就没有问题了

2820
02:39:28,690 --> 02:39:30,910
可立瘦

2821
02:39:34,480 --> 02:39:35,800
先来访一下我们的代码

2822
02:39:37,190 --> 02:39:38,870
可以看到是不是正常出来了

2823
02:39:39,470 --> 02:39:41,750
刚刚是配色的插件

2824
02:39:45,520 --> 02:39:45,970
然后呢

2825
02:39:46,450 --> 02:39:48,550
我们是不现在我们也进行服务单了

2826
02:39:48,550 --> 02:39:50,080
然后进行服务端客户端有问题了

2827
02:39:50,440 --> 02:39:53,590
我们先把我们的服务端入口来打包一下

2828
02:39:55,000 --> 02:39:57,520
我们就直接咨询我们的MDVD2就行了

2829
02:39:58,000 --> 02:40:00,940
分别打包我们的客户端是不是还有我们的服务端代码

2830
02:40:03,470 --> 02:40:04,490
这样就打包完成了

2831
02:40:06,350 --> 02:40:07,280
打包完成之后

2832
02:40:07,280 --> 02:40:10,190
我们就到我们的root音带之类

2833
02:40:10,310 --> 02:40:11,360
我们来看一下

2834
02:40:13,040 --> 02:40:15,830
是否要拿到我们的这个方法

2835
02:40:21,310 --> 02:40:21,970
嗯

2836
02:40:24,320 --> 02:40:25,760
咱们先来咨询一下看一下

2837
02:40:28,000 --> 02:40:28,630
Nude

2838
02:40:35,770 --> 02:40:37,420
生气来访问一下

2839
02:40:45,120 --> 02:40:46,050
后面

2840
02:40:51,140 --> 02:40:52,100
可以看到

2841
02:40:52,100 --> 02:40:54,410
Prefect服务端调用执行

2842
02:40:54,620 --> 02:40:57,500
是不是证明这个我们在服务端已经执行了

2843
02:40:57,830 --> 02:40:58,850
接下来就处理一下

2844
02:40:59,120 --> 02:41:02,150
把我们直接请求的数据直接渲染到我们页面就行了

2845
02:41:02,810 --> 02:41:03,800
但是你直接渲染的话

2846
02:41:03,800 --> 02:41:04,850
你肯定是渲染不上的

2847
02:41:04,850 --> 02:41:05,390
为什么呢

2848
02:41:05,480 --> 02:41:07,310
因为你这个数据是在你的组间里边儿

2849
02:41:07,490 --> 02:41:09,860
你不可能说通过正则我把里边儿的

2850
02:41:09,860 --> 02:41:10,640
比如说这里的

2851
02:41:12,120 --> 02:41:13,050
这个啊

2852
02:41:13,050 --> 02:41:14,010
有人发点内幕

2853
02:41:14,010 --> 02:41:15,870
有的音发的有关通知给他替换掉

2854
02:41:15,870 --> 02:41:16,830
这显然是不现实的

2855
02:41:16,890 --> 02:41:17,520
那怎么办呢

2856
02:41:17,700 --> 02:41:19,710
我们就需要找一个中间的载体

2857
02:41:19,890 --> 02:41:21,180
这中间的就行了

2858
02:41:21,180 --> 02:41:24,480
我们就用到了这个无忧ex这个状态管理

2859
02:41:24,660 --> 02:41:28,740
首先我们在服务端就把他这个值放到我们这个状态管理

2860
02:41:28,740 --> 02:41:29,820
然后到客户端之后

2861
02:41:29,970 --> 02:41:31,890
你直接从里面取出来就可以了

2862
02:41:32,100 --> 02:41:35,400
完全就不需要再去重新发起艾克的请求了

2863
02:41:36,620 --> 02:41:37,910
所以说我们这里需要处理

2864
02:41:37,910 --> 02:41:39,770
不在服务的时候

2865
02:41:39,800 --> 02:41:43,580
我们直接把它放到我们的状态管理里边

2866
02:41:46,990 --> 02:41:48,490
提供的资产管理里面的话

2867
02:41:49,330 --> 02:41:50,590
在客户端读的话

2868
02:41:50,800 --> 02:41:52,180
他是要同一个地方去读

2869
02:41:52,240 --> 02:41:56,080
其实我们就是把它挂在了我们的Windows对象上面

2870
02:41:56,950 --> 02:41:59,050
那这里看一下我们怎么来去处理它呢

2871
02:42:01,930 --> 02:42:04,030
这里的话我们先简单写一个拼接函数吧

2872
02:42:04,030 --> 02:42:06,460
因为我们最终要把它挂载到我们的

2873
02:42:08,890 --> 02:42:09,730
Windows上面

2874
02:42:10,270 --> 02:42:10,840
Cost

2875
02:42:10,960 --> 02:42:14,680
比如说我们这里就简单定义这样一个函数state

2876
02:42:15,520 --> 02:42:16,780
首先他接受一个state

2877
02:42:17,050 --> 02:42:20,500
首先的话就是我们在服务端处理的这个实际的数据

2878
02:42:21,100 --> 02:42:22,150
然后温度K

2879
02:42:22,870 --> 02:42:24,970
这是我们要绑定window对象上面的K

2880
02:42:27,960 --> 02:42:31,140
这样的话其实就相当于拼接一个script标签

2881
02:42:31,530 --> 02:42:32,730
你挂在这上面之后

2882
02:42:32,850 --> 02:42:33,480
我们都知道

2883
02:42:33,600 --> 02:42:35,250
那你的客户端它是一个全温度

2884
02:42:35,250 --> 02:42:36,000
是一个全局对象

2885
02:42:36,240 --> 02:42:38,190
那你直接从上面读出来是不是就可以了

2886
02:42:39,360 --> 02:42:40,710
这里我们就差这一步了

2887
02:42:42,130 --> 02:42:43,030
Window p

2888
02:42:45,010 --> 02:42:45,370
等于

2889
02:42:49,290 --> 02:42:50,820
Jason边儿spring泛

2890
02:42:51,180 --> 02:42:56,280
然后这样是不是就挂在到我们这个温度对象上面了

2891
02:42:56,280 --> 02:42:58,920
然后扣的时候我们就可以从那上面擅自取了

2892
02:42:59,220 --> 02:43:01,110
然后你就不用发起200克的请求了

2893
02:43:10,040 --> 02:43:11,240
那继续往下看

2894
02:43:14,820 --> 02:43:16,980
刚刚这里我们是不是都已经其实放在这里

2895
02:43:17,160 --> 02:43:17,730
那这里的话

2896
02:43:17,730 --> 02:43:18,540
其实我们就可以

2897
02:43:20,100 --> 02:43:20,940
拿到特等

2898
02:43:23,760 --> 02:43:24,180
注意啊

2899
02:43:24,180 --> 02:43:25,140
这里处理这一步

2900
02:43:26,050 --> 02:43:28,750
这一个它是可以在服务端执行的

2901
02:43:29,080 --> 02:43:30,160
服务端可以开了

2902
02:43:30,860 --> 02:43:33,320
First data在服务端执行这个函数

2903
02:43:33,440 --> 02:43:34,340
它是不是调用了fetch

2904
02:43:34,340 --> 02:43:35,390
调用update

2905
02:43:35,690 --> 02:43:39,320
是不是就操作了我们的star star里面就才更改了我们的state值

2906
02:43:39,740 --> 02:43:42,350
更改之后其实在服务端就已经处理好了

2907
02:43:42,350 --> 02:43:44,090
处理好之后我们就直接返回回来

2908
02:43:44,860 --> 02:43:47,260
怎么通过studied我们就可以拿到它

2909
02:43:48,950 --> 02:43:50,330
那这里有这里替换的时候

2910
02:43:50,330 --> 02:43:51,410
我们就需要加一个

2911
02:43:58,470 --> 02:44:00,690
怎么调用我们这个industry的函数

2912
02:44:02,700 --> 02:44:03,510
他提出两个参数

2913
02:44:03,510 --> 02:44:05,790
一个是我们处理好的是不十页纸

2914
02:44:05,790 --> 02:44:08,700
因为前面是不是这里为什么加了这个味道

2915
02:44:08,910 --> 02:44:11,370
他可以等待你前面执行完成之后

2916
02:44:11,370 --> 02:44:12,390
再继续处理后边儿的

2917
02:44:12,480 --> 02:44:13,320
你如果不加的话

2918
02:44:13,590 --> 02:44:16,260
那你这里是不是也请求就处理不完成

2919
02:44:17,440 --> 02:44:17,830
Data

2920
02:44:17,980 --> 02:44:20,410
然后我们给他一个K

2921
02:44:20,440 --> 02:44:22,810
比如说绑定到我们的

2922
02:44:23,500 --> 02:44:25,180
我们起个名叫English a

2923
02:44:29,960 --> 02:44:30,890
He stated

2924
02:44:33,260 --> 02:44:33,830
这样一个K

2925
02:44:34,010 --> 02:44:35,450
然后给它加上的话

2926
02:44:35,450 --> 02:44:37,280
我们就来绑定完成了

2927
02:44:38,820 --> 02:44:39,930
那绑定温度之后

2928
02:44:39,930 --> 02:44:41,610
客户端什么时候去拿到他呢

2929
02:44:42,240 --> 02:44:44,370
这里还需要改一下我们客户端的代码

2930
02:44:44,850 --> 02:44:47,100
在我们的star里边

2931
02:44:48,550 --> 02:44:48,820
嗯

2932
02:44:49,890 --> 02:44:51,960
引起clean这个词的话

2933
02:44:51,960 --> 02:44:54,780
他这是复制一个储值引起clean

2934
02:45:01,400 --> 02:45:04,820
这里我们是不是就可以把我们的style先拿过来

2935
02:45:05,930 --> 02:45:07,220
然后这里我们就需要来判断

2936
02:45:07,340 --> 02:45:13,130
判断我们这个温度身上有没有我们在服务端直接返回回来的这个

2937
02:45:14,900 --> 02:45:15,410
Straight

2938
02:45:15,410 --> 02:45:15,680
直

2939
02:45:16,590 --> 02:45:17,520
如果有

2940
02:45:18,510 --> 02:45:24,090
我们就把它替换成服务端已经处理好了这个replace state

2941
02:45:24,210 --> 02:45:25,230
然后是window

2942
02:45:27,150 --> 02:45:31,410
这样我们就把我们之前要艾克的请求的就直接返回回来了

2943
02:45:32,070 --> 02:45:33,570
假设有五个扣单访问

2944
02:45:33,570 --> 02:45:33,990
这时候

2945
02:45:38,420 --> 02:45:39,080
不会乱了

2946
02:45:39,260 --> 02:45:39,920
不会乱

2947
02:45:40,040 --> 02:45:41,810
因为前面我们不是单独写的

2948
02:45:41,810 --> 02:45:43,070
每一个都是工厂函数吗

2949
02:45:43,130 --> 02:45:44,180
每一个都是新的

2950
02:45:45,480 --> 02:45:48,510
前面一直讲就是避免状态单立马就是这个问题

2951
02:45:50,070 --> 02:45:51,510
每一个用户请求都是他自己的

2952
02:45:51,510 --> 02:45:52,410
所以说不会混乱的

2953
02:45:52,410 --> 02:45:54,270
如果你没有写

2954
02:45:54,270 --> 02:45:55,350
你直接返回这个对象

2955
02:45:55,470 --> 02:45:56,520
那肯定就混乱了

2956
02:45:57,090 --> 02:45:58,590
而我们写的是一种工厂函数

2957
02:45:58,590 --> 02:46:01,530
所以说每次都是重新执行这个函数新的状态

2958
02:46:01,530 --> 02:46:02,640
所以说是不会混乱的

2959
02:46:05,330 --> 02:46:06,800
这样如果有时候就处理好了

2960
02:46:06,800 --> 02:46:07,490
这样撤职

2961
02:46:07,760 --> 02:46:10,010
现在我们再来访问的页面

2962
02:46:11,800 --> 02:46:14,620
另外这里客户端其实还需要处理下来

2963
02:46:14,650 --> 02:46:16,300
客户端需要处理一下什么呢

2964
02:46:16,900 --> 02:46:19,180
就是我们需要判断她有没有值

2965
02:46:19,450 --> 02:46:25,570
因为有可能你上来你是在a的页面的o Bob的页面是不是就没有执行我们这个APP reflect

2966
02:46:25,570 --> 02:46:28,390
那现在当客户端再切换到后面的时候

2967
02:46:28,600 --> 02:46:30,850
他需要真正去发起请求了

2968
02:46:31,180 --> 02:46:34,180
所以这里我们需要还需要加一个判断

2969
02:46:34,420 --> 02:46:35,800
就在我们的home的

2970
02:46:37,240 --> 02:46:38,740
里边我们这里需要来判断一下

2971
02:46:39,070 --> 02:46:42,610
判断如果我们这个u RA INF ore点儿

2972
02:46:43,030 --> 02:46:43,570
比如说

2973
02:46:44,620 --> 02:46:46,630
六点内蒙是否有值

2974
02:46:47,110 --> 02:46:49,210
因为这里你可以判断为空

2975
02:46:49,210 --> 02:46:51,010
因为这里我复制的是初始值

2976
02:46:51,010 --> 02:46:53,650
所以在这里我判断的时候就需要判断是不是这个初始值

2977
02:46:54,130 --> 02:46:55,870
如果是这个初始值

2978
02:46:55,960 --> 02:46:59,380
我就需要发起请求

2979
02:46:59,500 --> 02:47:01,210
如果他还是我的初始值

2980
02:47:01,450 --> 02:47:03,790
那证明是不是服务端是否没有反应过来

2981
02:47:03,850 --> 02:47:05,710
另外我需要判断一个type of

2982
02:47:06,530 --> 02:47:09,860
是不是我的window不等等于unDeFined

2983
02:47:10,100 --> 02:47:13,520
因为刚刚大家也看到了这个是不是在服务端也会执行这个setup

2984
02:47:13,580 --> 02:47:17,240
所以说我们需要判断在只有在扣单的时候

2985
02:47:17,240 --> 02:47:19,490
我再让他去重新去请求

2986
02:47:21,440 --> 02:47:24,140
这样整个流程我们就完成了

2987
02:47:26,020 --> 02:47:29,740
那这里是不是我们就需要来看一下看一下

2988
02:47:32,030 --> 02:47:33,770
他的能不能注入成功呢

2989
02:47:33,770 --> 02:47:36,140
我们重新打包一下客户端还有服务端代码

2990
02:47:39,460 --> 02:47:41,140
那a的页面还是最次的吧

2991
02:47:44,580 --> 02:47:46,620
对a的页面你请求的时候

2992
02:47:46,620 --> 02:47:49,350
他并没有调用这个edge去改变

2993
02:47:49,350 --> 02:47:51,990
所以说above他肯定你在欧巴直接刷新

2994
02:47:52,170 --> 02:47:53,790
那肯定是储值

2995
02:47:55,360 --> 02:47:57,520
但当你切到后面再切回的bug的时候

2996
02:47:57,670 --> 02:47:59,860
这个bug就会变成你心请求的这个人

2997
02:48:00,220 --> 02:48:03,940
我们是不是用了状态管理这个中间的一个载体的因数量

2998
02:48:03,940 --> 02:48:04,870
现在我们先看

2999
02:48:05,690 --> 02:48:07,310
后面刷新

3000
02:48:09,640 --> 02:48:10,660
显示文件代码

3001
02:48:10,660 --> 02:48:11,860
我看一下有没有注入成功

3002
02:48:11,890 --> 02:48:14,140
大家可以看到是不是成功注入回来了

3003
02:48:14,140 --> 02:48:15,730
在我们的Windows上面

3004
02:48:15,730 --> 02:48:16,450
就这样

3005
02:48:17,080 --> 02:48:19,210
我们这个DEMO user info name1登

3006
02:48:19,330 --> 02:48:20,920
然后address北京

3007
02:48:23,650 --> 02:48:24,640
我们可以打印一下

3008
02:48:29,700 --> 02:48:31,800
北京没有请求吗

3009
02:48:39,520 --> 02:48:40,000
这里还

3010
02:48:40,390 --> 02:48:41,230
这里还小问题

3011
02:48:41,350 --> 02:48:44,620
可以看到这里可怜的班导没有找到我们对应的资源

3012
02:48:45,190 --> 02:48:45,880
稍等一下

3013
02:48:53,150 --> 02:48:54,470
你看这里还有点小错误

3014
02:48:54,470 --> 02:48:55,190
这里报错了

3015
02:48:56,550 --> 02:48:57,870
我们就差最后这一步了

3016
02:48:57,870 --> 02:48:59,130
可以看它是什么这里

3017
02:49:08,420 --> 02:49:08,840
喂

3018
02:49:10,680 --> 02:49:11,790
重新启动一下

3019
02:49:16,330 --> 02:49:17,860
我们先把这个报错解决掉吧

3020
02:49:18,130 --> 02:49:19,930
可以看到我们现在是每次

3021
02:49:20,980 --> 02:49:21,340
关掉

3022
02:49:28,120 --> 02:49:29,140
现在有什么问题呢

3023
02:49:29,140 --> 02:49:31,210
可以看我每次切换路由

3024
02:49:31,840 --> 02:49:34,120
看他每一次都重新刷新了页面时候

3025
02:49:34,120 --> 02:49:35,680
每次都去城职了服务端

3026
02:49:35,920 --> 02:49:36,640
这为什么呢

3027
02:49:37,060 --> 02:49:37,450
可以看到

3028
02:49:37,720 --> 02:49:39,910
因为你本身的JS没有加载出来

3029
02:49:39,910 --> 02:49:42,100
就没有找到你本地JS没有加载

3030
02:49:42,100 --> 02:49:42,730
那肯定是

3031
02:49:43,940 --> 02:49:45,710
没有走本地的这个路由控制了

3032
02:49:45,770 --> 02:49:48,740
我们现在是这个S的话是首页支出

3033
02:49:48,740 --> 02:49:49,460
然后后边呢

3034
02:49:49,640 --> 02:49:50,840
你再进行路由切换的时候

3035
02:49:50,930 --> 02:49:52,400
是走本机的路由了

3036
02:49:52,940 --> 02:49:54,560
那这里因为既然都没有加载出来

3037
02:49:54,560 --> 02:49:55,760
所以说就直接报错了

3038
02:49:57,100 --> 02:50:01,300
那显然是我们这个静态资源服务器是没有处理好

3039
02:50:03,470 --> 02:50:05,600
我们这里就处理一下

3040
02:50:08,800 --> 02:50:11,260
看到我们的APP的JS

3041
02:50:11,260 --> 02:50:11,830
这里我们写了

3042
02:50:11,830 --> 02:50:12,820
我们是录了一半

3043
02:50:14,510 --> 02:50:16,190
没有配置我们的静态资源服务器

3044
02:50:16,190 --> 02:50:20,210
告诉他去哪里找我们的JS文件消过

3045
02:50:20,300 --> 02:50:21,380
然后是

3046
02:50:22,280 --> 02:50:23,840
这还需要一个reserve

3047
02:50:26,890 --> 02:50:28,930
可以看到我们这样只是一个简单的流程

3048
02:50:29,140 --> 02:50:30,850
是不是有好多的小细节地方

3049
02:50:31,150 --> 02:50:33,250
如果你想要做一个完整的项目的话

3050
02:50:34,930 --> 02:50:38,500
那配置还是比较复杂的

3051
02:50:38,770 --> 02:50:40,750
所以说大家如果自己后的不足的情况下

3052
02:50:40,750 --> 02:50:43,600
可以完全用比较成熟的一些库

3053
02:50:50,780 --> 02:50:52,790
然后是找到我们的文件

3054
02:50:52,970 --> 02:50:54,110
是在对视的下边

3055
02:50:54,290 --> 02:50:55,790
这是我们的静态资源服务器

3056
02:50:56,550 --> 02:50:58,620
然后现在你再来刷新看一下

3057
02:50:59,520 --> 02:51:00,600
现在这不就播出了

3058
02:51:00,600 --> 02:51:02,100
现在当你再去切换的时候呢

3059
02:51:06,420 --> 02:51:07,110
那骑马的时候

3060
02:51:07,110 --> 02:51:08,880
起码这里是不是已经不刷新了

3061
02:51:09,480 --> 02:51:10,860
但这里报了什么问题

3062
02:51:10,860 --> 02:51:13,140
报了一个跨越了

3063
02:51:16,910 --> 02:51:18,140
这里还有跨域问题

3064
02:51:26,430 --> 02:51:27,420
待遇的话

3065
02:51:34,020 --> 02:51:35,340
这个我就先不解决

3066
02:51:35,340 --> 02:51:35,820
因为这个

3067
02:51:48,230 --> 02:51:48,740
就这样

3068
02:51:50,650 --> 02:51:52,990
能不能我先把他引许可以

3069
02:52:04,520 --> 02:52:06,380
我觉得谷歌是可以开启一个

3070
02:52:16,310 --> 02:52:16,760
好

3071
02:52:16,910 --> 02:52:18,320
先不处理问题

3072
02:52:18,320 --> 02:52:18,890
我们先处理

3073
02:52:18,890 --> 02:52:21,170
我们还有另外一个小的错误

3074
02:52:23,370 --> 02:52:24,600
在服务端还有一个

3075
02:52:27,220 --> 02:52:28,480
After next

3076
02:52:38,840 --> 02:52:42,170
From it which was not hand with the kids

3077
02:52:58,940 --> 02:52:59,540
再打一下

3078
02:53:16,360 --> 02:53:19,270
这里没有拿到我们请求的值

3079
02:53:29,340 --> 02:53:30,120
小心一下

3080
02:53:36,520 --> 02:53:38,140
只是拿到了我们次之没问题

3081
02:53:38,140 --> 02:53:43,810
那说明这里没有调用我们这个函数是不是又更新了

3082
02:54:11,840 --> 02:54:12,200
嗯

3083
02:54:21,200 --> 02:54:24,710
收服务端调用执行这里

3084
02:54:24,710 --> 02:54:27,650
那就是是不是这一步出了问题调用执行的时候

3085
02:54:28,190 --> 02:54:30,200
然后下一步的weight

3086
02:54:31,100 --> 02:54:31,880
这里报错了

3087
02:54:44,940 --> 02:54:46,470
地址给他加上这样

3088
02:54:46,950 --> 02:54:48,480
那需要重新打包一下

3089
02:54:48,570 --> 02:54:49,560
应该这样就完成了

3090
02:54:51,110 --> 02:54:52,520
刚刚的会计问题应该解决了

3091
02:54:55,210 --> 02:54:55,840
试一下

3092
02:54:57,430 --> 02:54:57,910
刷新

3093
02:55:00,980 --> 02:55:01,490
我错了

3094
02:55:14,940 --> 02:55:15,360
嗯

3095
02:55:17,120 --> 02:55:18,950
之前这个都是允许跨越的

3096
02:55:35,170 --> 02:55:37,600
看这样应该就可以了

3097
02:55:39,860 --> 02:55:40,610
最后来看一下

3098
02:55:48,780 --> 02:55:49,800
现在的话

3099
02:55:52,230 --> 02:55:53,550
直接是没有了

3100
02:55:53,550 --> 02:55:57,180
可以看到现在这里服务端调用执行

3101
02:56:00,000 --> 02:56:01,860
然后我们打印一下服务端代码看一下

3102
02:56:03,910 --> 02:56:05,320
Studies states

3103
02:56:06,270 --> 02:56:07,350
你真没劲

3104
02:56:12,780 --> 02:56:14,580
先调一下客户端

3105
02:56:14,580 --> 02:56:16,110
客户端这里有点小问题

3106
02:56:19,310 --> 02:56:23,270
打一下这个de to na这个data有可能拿的不对

3107
02:56:25,340 --> 02:56:27,230
那既然这里返回来是一个空的话

3108
02:56:27,230 --> 02:56:31,070
那就那证明是服务端打包回来之后把它给覆盖掉了

3109
02:56:34,590 --> 02:56:35,700
来深圳拿到了

3110
02:56:37,710 --> 02:56:40,650
这里还有个did today in for

3111
02:56:47,540 --> 02:56:48,200
再来刷新

3112
02:56:49,200 --> 02:56:50,040
师傅这样就行

3113
02:56:50,550 --> 02:56:53,250
然后我们重新再打包一下

3114
02:57:02,400 --> 02:57:05,580
现在再来请求我们的服务站

3115
02:57:06,700 --> 02:57:06,940
这不

3116
02:57:06,940 --> 02:57:07,780
现在就返回来

3117
02:57:07,780 --> 02:57:09,340
然后我们查看文源代码

3118
02:57:10,670 --> 02:57:14,510
有没有看到直接就把我们这节课要请求数据

3119
02:57:14,510 --> 02:57:16,160
是不是直接就给我们返回到这了

3120
02:57:16,190 --> 02:57:16,640
然后呢

3121
02:57:17,480 --> 02:57:19,190
他这里也不需要发起请求了

3122
02:57:19,190 --> 02:57:19,640
人为你服务

3123
02:57:19,640 --> 02:57:20,690
单是直接返回来了

3124
02:57:21,020 --> 02:57:23,600
但是当你从厄巴的页面回去的时候呢

3125
02:57:23,660 --> 02:57:24,440
是不是这是北京

3126
02:57:24,470 --> 02:57:25,520
当你回去的时候

3127
02:57:25,790 --> 02:57:26,990
是不是需要发起来撒

3128
02:57:27,140 --> 02:57:28,280
重新变回新的

3129
02:57:29,520 --> 02:57:33,150
这样这个整体流程我们就走通了

3130
02:57:33,150 --> 02:57:36,000
今天小细节正好出了点小错误

3131
02:57:36,000 --> 02:57:38,280
这个排查排查问题花了点时间

3132
02:57:39,400 --> 02:57:40,000
到这里的话

3133
02:57:40,270 --> 02:57:43,390
大家整体流程都能了解了吧

3134
02:57:44,080 --> 02:57:44,860
你在切换

3135
02:57:46,110 --> 02:57:47,010
千万八子

3136
02:57:48,820 --> 02:57:49,720
这个有什么问题吗

3137
02:57:52,060 --> 02:57:53,290
切换above

3138
02:57:53,290 --> 02:57:55,150
因为状态管理变成了最新的

3139
02:57:55,240 --> 02:57:57,130
所以a肯定也要变成最新的

3140
02:58:00,420 --> 02:58:01,380
还有其他问题吗

3141
02:58:02,440 --> 02:58:02,890
没有的话

3142
02:58:02,890 --> 02:58:04,480
我们今天就到这里啦

3143
02:58:04,480 --> 02:58:05,830
今天稍微晚了一些

3144
02:58:10,110 --> 02:58:10,320
行

3145
02:58:10,320 --> 02:58:11,490
那大家如果没有什么问题

3146
02:58:11,490 --> 02:58:13,320
那我们今天就到这里

3147
02:58:15,280 --> 02:58:17,020
大家可以的话就可以练一下

3148
02:58:17,020 --> 02:58:18,700
主要你需要熟悉一下这个流程

3149
02:58:18,730 --> 02:58:21,550
因为面试中也是很有可能会问到的

